


Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page    1


      1                 	title   Fighter Mega Mix Common Bank program/Entry Point
      2                 	type    8521
      3                 
      4                 	include frogger.tmp
      4+                             data
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; Game Equates
      4+                ;
      4+                ;----------------------------------------------------------------------------
      4+                
      4+     0008       MaxPlayers	equ	8
      4+     000C       MaxLevels	equ	12
      4+     0009       NumBands	equ	9
      4+     0004       NumStrips	equ	4
      4+     0008       NumAnims	equ	8
      4+     0012       NumSAnims	equ	NumBands*2
      4+     0013       NumSounds	equ	19
      4+                
      4+     4E00       TimerFull	equ	04e00h	;78*256 is full time per level
      4+     0007       TimerDec	equ	7	;timer decrease per loop
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; Game Equates: Game.Com Control
      4+                ;
      4+                ;----------------------------------------------------------------------------
      4+                
      4+     0000       ini_game        EQU     0   ; INITIAL
      4+     0001       exe_game        EQU     1   ; EXECUTE
      4+     0002       close_game      EQU     2   ; CLOSE GAME
      4+     0003       reset_game      EQU     3   ; RESET
      4+     0426       frogger_id      equ     0426h
      4+                
      4+     0000       override        equ     00h
      4+     0001       composite       equ     01h
      4+     0040       left_right      equ     40h
      4+     0080       up_down         equ     80h
      4+     00C0       lr_up           equ     0c0h
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; Game Equates: Scoring
      4+                ;
      4+                ;----------------------------------------------------------------------------
      4+                
      4+     000A       SCORE_forward equ	10
      4+     0032       SCORE_home	equ	50
      4+     03E8       SCORE_five	equ	1000
      4+     00C8       SCORE_lady	equ	200
      4+     00C8       SCORE_fly	equ	200
      4+     000A       SCORE_time	equ	10
      4+                
      4+                ;============================================================================



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page    2


      4+                ;
      4+                ; Game Equates: Home Bases
      4+                ;
      4+                ;----------------------------------------------------------------------------
      4+                
      4+     000C       HomeBase1	equ	12
      4+     0034       HomeBase2	equ	52
      4+     005C       HomeBase3	equ	92
      4+     0084       HomeBase4	equ	132
      4+     00AC       HomeBase5	equ	172
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; Game Structures
      4+                ;
      4+                ;----------------------------------------------------------------------------
      4+                
      4+                ; ROM
      4+                
      4+                	; Game Data
      4+                                         ;                 struct      
      4+     0000       GameLevel        equ 0   ;GameLevel        word    1   
      4+     0002       GameMult         equ 2   ;GameMult         byte    1   
      4+     0003       GameDiv          equ 3   ;GameDiv          byte    1   
      4+     0004       GameFrogX        equ 4   ;GameFrogX        byte    1   
      4+     0005       GameFrogY        equ 5   ;GameFrogY        byte    1   
      4+     0006       GameSize         equ 6   ;GameSize         size        
      4+                
      4+                	; Level Data
      4+                                         ;                 struct      
      4+     0000       LevelFlags       equ 0   ;LevelFlags       byte    1   
      4+                ;                equ 1   ;;                byte    1   
      4+     0002       LevelBaseU       equ 2   ;LevelBaseU       byte    1   
      4+     0003       LevelBaseF       equ 3   ;LevelBaseF       byte    1   
      4+     0004       LevelIncM        equ 4   ;LevelIncM        byte    1   
      4+     0005       LevelIncD        equ 5   ;LevelIncD        byte    1   
      4+     0006       LevelDecM        equ 6   ;LevelDecM        byte    1   
      4+     0007       LevelDecD        equ 7   ;LevelDecD        byte    1   
      4+     0008       LevelStrips      equ 8   ;LevelStrips      byte    4   ;NumStrips
      4+     000C       LevelSize        equ 12  ;LevelSize        size        
      4+                
      4+                	;Level Data: strip byte values
      4+                
      4+     0000       StripStill	equ	0	;Frog doesn't move and is safe
      4+     0001       StripMove	equ	1	;Frog is moving and is safe
      4+     0002       StripHome	equ	2	;Frog has reached home
      4+     0003       StripWall	equ	3	;Frog can't go here: wall
      4+     0004       StripWDead	equ	4	;Frog dies in water
      4+     0005       StripXDead	equ	5	;Frog Dies not in water
      4+     000A       StripBDead	equ	10	;Frog can't move here, trying dies
      4+                
      4+                	; Anim Data
      4+                                         ;                 struct      
      4+     0000       AnimStrip        equ 0   ;AnimStrip        byte    1   ;the art strip holding the anim
      4+     0001       AnimWidth        equ 1   ;AnimWidth        byte    1   ;width of anim in 8 pixel pieces



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page    3


      4+     0002       AnimNum          equ 2   ;AnimNum          byte    1   ;Number of frames in animation
      4+     0003       AnimPal          equ 3   ;AnimPal          byte    1   ;Palette
      4+     0004       AnimStripX       equ 4   ;AnimStripX       byte    1   ;Number of 8 bit pixels into strip
      4+     0005       AnimMove         equ 5   ;AnimMove         byte    1   ;Number of pixels movement each frame
      4+     0006       AnimSize         equ 6   ;AnimSize         size        ;size of header
      4+     0006       AnimTicks        equ 6   ;AnimTicks        byte    1   ;start of frame tickers
      4+                
      4+                	; Strip Animation
      4+                                         ;                 struct      
      4+     0000       SAnimNum         equ 0   ;SAnimNum         byte    1   ;number of frames in the animation
      4+     0001       SAnimTick        equ 1   ;SAnimTick        byte    1   ;Number of ticks between frames
      4+     0002       SAnimStrips      equ 2   ;SAnimStrips      byte    1   ;The first strip in the list of animating strips
      4+                
      4+                ; RAM
      4+                	; Player Data
      4+                                         ;                 struct      
      4+     0000       PlayerScore      equ 0   ;PlayerScore      word    1   
      4+     0002       PlayerLevel      equ 2   ;PlayerLevel      byte    1   
      4+     0003       PlayerLives      equ 3   ;PlayerLives      byte    1   
      4+     0004       PlayerHomeF      equ 4   ;PlayerHomeF      byte    1   
      4+     0005       PlayerUnused     equ 5   ;PlayerUnused     byte    1   
      4+     0006       PlayerVSize      equ 6   ;PlayerVSize      size        
      4+                
      4+                	; Level Data
      4+                                         ;                 struct      
      4+     0000       LevelSpeedU      equ 0   ;LevelSpeedU      byte    1   ;composite (current) speed
      4+     0001       LevelSpeedF      equ 1   ;LevelSpeedF      byte    1   ;
      4+     0002       LevelVFlags      equ 2   ;LevelVFlags      byte    1   
      4+     0003       LevelOffset      equ 3   ;LevelOffset      byte    1   ;offset (LevelStrips - +3) to left strip number
      4+     0004       LevelPageA       equ 4   ;LevelPageA       byte    1   ;Art page
      4+     0005       LevelYoffA       equ 5   ;LevelYoffA       byte    1   ;Art yoffset
      4+     0006       LevelAddr1       equ 6   ;LevelAddr1       word    1   ;Left Strip table address
      4+     0008       LevelAddr2       equ 8   ;LevelAddr2       word    1   ;Right strip table address
      4+     000A       LevelPage1       equ 10  ;LevelPage1       byte    1   ;Left or unmoving art page
      4+     000B       LevelPage2       equ 11  ;LevelPage2       byte    1   ;Right or unused art page
      4+     000C       LevelYoff1       equ 12  ;LevelYoff1       byte    1   ;Left or unmoving art offset
      4+     000D       LevelYoff2       equ 13  ;LevelYoff2       byte    1   ;Right or unused art offset
      4+     000E       LevelXoff1       equ 14  ;LevelXoff1       byte    1   ;Left X offset for art (pixels)
      4+     000F       LevelXofff       equ 15  ;LevelXofff       byte    1   ;Left X offset fraction (pixels)
      4+     0010       LevelVSize       equ 16  ;LevelVSize       size        
      4+                
      4+                	; Animation Data
      4+                                         ;                 struct      
      4+     0000       AnimBand         equ 0   ;AnimBand         word    1   ;Band animation is on
      4+     0002       AnimAnim         equ 2   ;AnimAnim         word    1   ;which animation am I controlling
      4+     0004       AnimXOff         equ 4   ;AnimXOff         word    1   ;offset from left edge of screen (+100h)
      4+     0006       AnimXOffH        equ 6   ;AnimXOffH        byte    1   ;X offset high value
      4+     0007       AnimFNum         equ 7   ;AnimFNum         byte    1   ;the frame number currently diplayed
      4+     0008       AnimFTick        equ 8   ;AnimFTick        byte    1   ;how many ticks left till anim changes
      4+     0009       AnimRange        equ 9   ;AnimRange        byte    1   ;width of animation area in pixels
      4+     000A       AnimVFlags       equ 10  ;AnimVFlags       byte    1   ;flags
      4+     000B       AnimXRel         equ 11  ;AnimXRel         word    1   ;relative position in area U.F
      4+     000D       AnimYOff         equ 13  ;AnimYOff         byte    1   ;offset from top of screen
      4+     000E       AnimCall         equ 14  ;AnimCall         byte    1   ;routine to call (1 to ...)
      4+     000F       AnimVSize        equ 15  ;AnimVSize        size        



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page    4


      4+                
      4+                	;Strip Animation
      4+                                         ;                 struct      
      4+     0000       SAnimTime        equ 0   ;SAnimTime        byte    1   ;Time left before change
      4+     0001       SAnimCur         equ 1   ;SAnimCur         byte    1   ;current strip in animation
      4+     0002       SAnimVSize       equ 2   ;SAnimVSize       size        
      4+                
      4+                ; these two flags are also copied to LevelVFlag
      4+     0001       LevelFlagS	equ	01h  	;Art does not move
      4+     0002       LevelFlagH	equ	02h	;Art doesn't h-flip on direction change
      4+                
      4+     0080       LevelVFlagD	equ	80h	;80h= left to right
      4+     0040       LevelVFlagH	equ	40h	;last byte processed was anim header
      4+     0020       LevelVFlagT	equ	20h	;last byte processed was anim non-header
      4+                
      4+     0080       AnimVFlagD	equ	80h	;anim moving left to right
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; Game States
      4+                ;
      4+                ;----------------------------------------------------------------------------
      4+                
      4+     0000       Game_Open	equ	0
      4+     0001       Game_Menus	equ	1
      4+     0002       Game_Init	equ	2
      4+     0003       Game_Next	equ	3	;go to next (or first, or only)
      4+     0004       Game_Play	equ	4
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; Zero Page Ram (0beh-0ffh)
      4+                ;
      4+                ;----------------------------------------------------------------------------
      4+                
      4+00BE                         org     0beh
      4+00BE            HoldSP      defs    2                   ;hold the game SP
      4+00C0            CursorX     defs    1                   ;Cursor X,Y
      4+00C1            CursorY     defs    1                   ;
      4+00C2            GameState   defs    1                   ;game state
      4+00C3            NumPlayers  defs    1                   ;1-MaxPlayers
      4+00C4            GameMode    defs    1                   ;0=Arcade, 1=Tiger
      4+00C5            Difficulty  defs    1                   ;0=Easy, 1=Arcade
      4+00C6            Lives       defs    1                   ;3-5
      4+00C7            Continue    defs    1                   ;0=Off, 1=On
      4+00C8            StartLevel  defs    1                   ;1-5
      4+00C9            Paused      defs    1                   ;1=game paused
      4+00CA            SfxOn       defs    1                   ;1=Sound Effects on
      4+00CB            MusicOn     defs    1                   ;1=Music On
      4+00CC            DemoMode    defs    1                   ;1=Demo, 0=regular
      4+00CD            sound_flag	defs	1
      4+00CE            Timer	defs	2	;Time on level remaining (4E00h=full time)
      4+                
      4+00D0            temp0w      defs    2                   ;work areas word
      4+00D2            temp1w      defs    2                   ;work areas word



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page    5


      4+00D4            temp0       defs    1                   ;work areas
      4+00D5            temp1       defs    1                   ;work areas
      4+00D6            temp2       defs    1                   ;work areas
      4+                
      4+                	; Game Data
      4+                
      4+00D7            NextPlayer	defs	1
      4+00D8            PlayerVAddr	defs	2
      4+00DA            LevelAddr	defs	2
      4+                
      4+                	; Frog animation controls
      4+                
      4+00DC            FrogX	defs	2	;Current screen X
      4+00DE            FrogY	defs	1	;Current screen Y
      4+00DF            FrogMinY	defs	1	;Current minimum Y for scoring
      4+00E0            FrogTick	defs	1	;Ticks till next move
      4+00E1            FrogDir	defs	1	;1=S, 2=N, 3=E, 4=W, 0=sitting
      4+00E2            FrogCnt	defs	1	;Count of remaining animations
      4+00E3            FrogFlags	defs	1	;Frog Flags
      4+00E4            FrogPage	defs	1	;page of frog art
      4+00E5            FrogArtX	defs	1	;x of frog art
      4+00E6            FrogArtY	defs	1	;y of frog art
      4+00E7            FrogRest	defs	1	;resting animation
      4+                
      4+00E8            TargetX	defs	1	;Where Frog will be for texting
      4+00E9            TargetY	defs	1	;
      4+                
      4+00EA            LastKey	defs	1	;Last Key entered
      4+                
      4+00EB            hold_byte1	defs	1
      4+                
      4+     0080       FrogFlagM	equ	80h	;on if moving with strip
      4+                
      4+     0001       FrogDirS	equ	1	;moving south
      4+     0002       FrogDirN	equ	2	;moving north
      4+     0003       FrogDirE	equ	3	;moving east
      4+     0004       FrogDirW	equ	4	;moving west
      4+     0005       FrogDirXW	equ	5	;dying waterdeath
      4+     0006       FrogDirXL	equ	6	;dying landdeath
      4+                
      4+     0002       FrogSpeed	equ	2	;Number of ticks per move
      4+     0004       FrogMoves	equ	4	;Number of movement pixels
      4+     0004       FrogFrames	equ	4	;Number of frames
      4+                
      4+00EC            ZZZ	defs	10
      4+                
      4+00F6            testff:
      4+                            if      testff .gt. 0ffh
      4+                            error 	Too much data in zero page ram
      4+                            endif
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; Non-Zero page Ram (208h-37fh)
      4+                ;



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page    6


      4+                ;----------------------------------------------------------------------------
      4+                
      4+0208             	org	208h
      4+0208            PlayerData	defs	MaxPlayers*PlayerVSize
      4+0238            LevelData	defs	NumBands*LevelVSize
      4+02C8            AnimData	defs	NumAnims*AnimVSize
      4+0340            SAnimData	defs	NumSAnims*SAnimVSize
      4+                
      4+0364            new_melody_ptr defs 1
      4+0365            DemoPtr	defs	2
      4+0367            DemoCnt	defs	1
      4+                
      4+0368            page_ptr1	defs	2
      4+036A            index0	defs	1
      4+036B            index1	defs	1
      4+036C            index2	defs	1
      4+036D            index3	defs	1
      4+                
      4+036E            test37f:
      4+                	if	test37f .gt. 37fh
      4+                	error	Too much data in non-zero page ram
      4+                	endif
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; User input equates
      4+                ;
      4+                ;----------------------------------------------------------------------------
      4+                
      4+                ;	001-013	 ;row 0 of screen, column 0 to 12
      4+                ;	...	 ;...
      4+                ;	118-082h ;row 9 of screen, column 0 to 12
      4+                ;
      4+                ;	spot on screen = row*13+column+1
      4+                
      4+     0082       UserScreen	equ	082h	;highest screen press
      4+                
      4+     0083       UserUp	equ	083h	;joypad up
      4+     0084       UserDown	equ	084h	;joypad down
      4+     0085       UserLeft	equ	085h	;joypad left
      4+     0086       UserRight	equ	086h	;joypad right
      4+                
      4+     0087       UserMenu	equ	087h	;Menu button
      4+     0089       UserSound	equ	089h	;Sound button
      4+     008A       UserPause	equ	08ah	;Pause button
      4+                
      4+     008B       UserA	equ	08bh	;A button
      4+     008C       UserB	equ	08ch	;B button
      4+     008D       UserC	equ	08dh	;C button
      4+     008E       UserD	equ	08eh	;D button
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; Bank definitions
      4+                ;



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page    7


      4+                ;----------------------------------------------------------------------------
      4+                
      4+     0020       program_bank1   equ     020h
      4+     0021       program_bank2   equ     021h
      4+     0023       program_bank3   equ     023h
      4+     0024       program_bank4   equ     024h
      4+     0025       program_bank5   equ     025h
      4+     0026       program_bank6   equ     026h
      4+                
      4+     0020       bankno_front0 equ   20h
      4+     0021       bankno_front1 equ   21h
      4+     0022       bankno_front2 equ   22h
      4+     0023       bankno_sprite equ   23h
      4+     0024       bankno_strip  equ   24h
      4+     0072       bankno_winpic10 equ 72h ;    bankno_winpic9+2
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; Macros
      4+                ;
      4+                ;----------------------------------------------------------------------------
      4+                
      4+                ;	; long conditional branches
      4+                ;
      4+                ;breq:	macro	?dest
      4+                ;	br	ne,cont???
      4+                ;	jmp	eq,?dest
      4+                ;cont???:
      4+                ;	endm
      4+                ;
      4+                ;brne:	macro	?dest
      4+                ;	br	eq,cont???
      4+                ;	jmp	ne,?dest
      4+                ;cont???:
      4+                ;	endm
      4+                ;
      4+                ;brnz:	macro	?dest
      4+                ;	br	z,cont???
      4+                ;	jmp	nz,?dest
      4+                ;cont???:
      4+                ;	endm
      4+                ;
      4+                ;bruge:	macro	?dest
      4+                ;	br	ult,cont???
      4+                ;	jmp	uge,?dest
      4+                ;cont???:
      4+                ;	endm
      4+                ;
      4+                ;brugt:	macro	?dest
      4+                ;	br	ule,cont???
      4+                ;	jmp	ugt,?dest
      4+                ;cont???:
      4+                ;	endm
      4+                ;
      4+                ;brule:	macro	?dest



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page    8


      4+                ;	br	ugt,cont???
      4+                ;	jmp	ule,?dest
      4+                ;cont???:
      4+                ;	endm
      4+                ;
      4+                ;brz:	macro	?dest
      4+                ;	br	nz,cont???
      4+                ;	jmp	z,?dest
      4+                ;cont???:
      4+                ;	endm
      4+                
      4+                ;============================================================================
      4+                ;
      4+                ; The old stuff here
      4+                ;
      4+                ;----------------------------------------------------------------------------
      4+                
      4+                ;ASB	include oldstuff.inc
      4+                
      4+                            program
      5                 	include equate.inc
      5+     0000       DEMO_ROM	equ	0
      5+                ;------------------------------------------
      5+                ;	test program
      5+                ;------------------------------------------
      5+     0000       KEYTEST		equ	0
      5+     0000       QWSOUND_TEST	equ	0
      5+     0001       NEW_GRAPHIC1	equ	1
      5+     0000       HALTTEST	equ	0
      5+     0000       SOUND_TEST	EQU	0
      5+     0001       CURSOR_ENABLE	EQU	1
      5+     0000       FAST_OPEN	EQU	0
      5+     0001       NEW_SPEECH	EQU	1		;IMPROVED SPEECH SPEED
      5+     0000       MANUEL_TEST	EQU	0
      5+                					;ENABLE BANK SWITCH FOR ISR
      5+     0050       STARTYR		equ	80		;1994 starting year
      5+     0120       SKRAM		equ	120h		;start of the kernel RAM
      5+     0005       TBase		equ	5		;about 5ms timebase of Timer #1
      5+     0008       MAX_UT		equ	8
      5+                ;--- Scan key equate -------;
      5+     0010       MAXKEY		equ	16
      5+     000A       REPEATTM	equ	10		;500ms
      5+     0004       SCANFREQ	equ	20/5		;10ms
      5+     0010       DEBOU_TM	equ	16
      5+     00A4       ALARM_ALERT_KEY	equ	0a4h
      5+     00A5       COMM_ERROR	equ	0a5h
      5+     00A8       WARN_BEEP	equ	0a8h
      5+     000A       UT_CLK_		equ	50/5	;49.152 ms per count
      5+                
      5+     0001       PHONEBOOK_APPL	EQU	1
      5+     0002       CALENDAR_APPL	EQU	2
      5+     0003       CALCULATOR_APPL	EQU	3
      5+     0004       CART_APPL	EQU	4
      5+     0005       DLO_APPL	EQU	5
      5+     0006       SOLITAIRE_APPL	EQU	6



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page    9


      5+     0007       HISCR_APPL	EQU	7
      5+                
      5+     00FF       ENDKEY		EQU	0FFH
      5+     0088       KEY_ONOFF	EQU	88H
      5+     0089       KEY_MUTE	EQU	89H
      5+     0087       KEY_MENU	EQU	87H
      5+     008A       KEY_PAUSE	EQU	8AH
      5+     00A0       SPEECH_END	EQU	0A0H
      5+                
      5+     0005       MainDataBank	equ	5
      5+     000C       DSPBANK0	EQU	0ch
      5+     000D       DSPBANK1	EQU	0dh
      5+     0005       MainProgBank	equ	5
      5+     0002       KernelBank	equ	2
      5+     0003       MainProgBank2	equ	3
      5+                
      5+     FC60       START_HISCR	equ	0fc60h
      5+     FEE0       END_HISCR	equ	0fEE0h
      5+     0020       LEN_HISCR	equ	32		;32 bytes per hi score record
      5+     0040       NEW_LEN_HISCR	equ	64		;32 bytes per hi score record
      5+     0003       DATA_OFFSET	equ	3		;4th position from the record head
      5+     0001       SEP_CHAR	equ	01h
      5+                
      5+     0008       SYS_TX_QSIZE	equ	8
      5+     0008       SYS_RX_QSIZE	equ	8
      5+     0000       UT_STOP		equ	00h
      5+     0001       UT_RUN		equ	01h
      5+     0002       UT_PAUSE	equ	02h
      5+                
      5+                IF DEMO_ROM
      5+                START_STACK	equ	3ffh
      5+                ELSE
      5+     03C0       START_STACK	equ	3c0h
      5+                ENDIF
      5+                
      5+                ;===============================;
      5+                ;	RP pre-defined value
      5+                ;===============================;
      5+     0000       KERNEL_RP	equ	00h
      5+     0008       DISPLAY_RP	equ	08h
      5+     0018       CLOCKISR_RP	equ	18h
      5+     0028       UARTISR_RP	equ	28h
      5+     0038       SP_TIMER1ISR_RP	equ	38h
      5+     0048       N_TIMER1ISR_RP	equ	48h
      5+     0058       SYSTEM_RP	equ	58h
      5+                
      6                 	include ram.inc
      6+     00A0       RX_head		equ	0a0h
      6+     00A2       RX_tail		equ	0a2h
      6+     00A4       STPID		equ	0a4h		
      6+                IF .NOT. NEW_SPEECH
      6+                sp_end_bank	equ	0a5h
      6+                sp_end_address	equ	0a6h
      6+                ELSE
      6+     00A5       UART_new_ibank	equ	0a5h



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   10


      6+     00A6       TMR1_new_ibank	equ	0a6h
      6+     00A7       PIO_new_ibank	equ	0a7h
      6+                ENDIF
      6+     00A8       sp_control	equ	0a8h		;--------------------------
      6+                					;bit 0 : 0 - stop
      6+                					;        1 - start
      6+                					;bit 1 : 0 - PCM
      6+                					;        1 - ADPCM
      6+                					;bit 2 : 0 - low nibble
      6+                					;	 1 - high nibble
      6+                					;bit 3 : 0 - pause disable
      6+                					;	 1 - pause enable
      6+                					;bit 4 : 0 - play mode
      6+                					;        1 - pause mode
      6+                					;bit 5 : 0 - enable time out
      6+                					;        1 - disable time out
      6+                					;bit 6 : 0 - main menu spinning mode
      6+                					;        1 - main menu cursor mode
      6+                					;bit 7 : 0 - normal
      6+                					;        1 - sound selection screen 
      6+                					;            entered
      6+                					;--------------------------
      6+                IF .NOT. NEW_SPEECH
      6+                sp_bank		equ	0a9h		;speech data bank
      6+                sp_address	equ	0aah		;speech data address
      6+                ELSE
      6+     00A9       TMR0_new_ibank	equ	0a9h
      6+     00AA       CLK_new_ibank	equ	0aah
      6+     00AB       INT_new_ibank	equ	0abh
      6+                ENDIF
      6+     00AC       SP_CTR1		equ	0ach		;speech timer
      6+     00AD       SP_CTR2		equ	0adh		;
      6+     00AE       TX_head		equ	0aeh		;head pointer of tx queue
      6+                ;TX_tail		equ	0ach		;tail pointer of tx queue
      6+     00B0       PVOICE		equ	0b0h
      6+     00B1       UART_control	equ	0b1h		;-------------------------
      6+                					;bit 0 : 0 - TX disable
      6+                					;        1 - TX enable
      6+                					;bit 1 : 0 - RX disable
      6+                					;        1 - RX enable
      6+                					;bit 2 : 0 - system UART isr
      6+                					;        1 - application defined isr
      6+                					;bit 3 : 0 - system TX queue
      6+                					;        1 - appl. TX defined queue
      6+                					;bit 4 : 0 - system RX queue
      6+                					;        1 - appl. RX defined queue
      6+                					;------------------------------------
      6+                ;kstemp0		equ	0b2h		;kernel use temp 0
      6+                IF NEW_SPEECH
      6+     00B2       WDT_new_ibank	equ	0b2h
      6+     00B3       NMI_new_ibank	equ	0b3h
      6+                ENDIF
      6+     00B4       UT_clk		equ	0b4h		;User timer clock
      6+     00B5       ScanTMR		equ	0b5h		;Key scan timer
      6+     00B6       RepeatRate	equ	0b6h		;repeat rate counter



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   11


      6+     00B7       Oldkey		equ	0b7h		;key history
      6+     00B8       KEYHEAD		equ	0b8h		;head pointer of key buffer
      6+     00BA       KEYTAIL 	equ	0bah		;tail pointer of key buffer
      6+     00BC       SYSFLAG		equ	0bch		;--------------------------
      6+                					;bit 0 : 1 - initialize from power on
      6+                					;        0 - no data destroy
      6+                					;bit 1 : 0 - not turn on unit
      6+                					;        1 - turn on unit
      6+                					;bit 2 : 0 - 3 minute time out
      6+                					;        1 - 5 minute time out
      6+                					;bit 3 : 0 - even second
      6+                					;        1 - odd second
      6+                					;bit 4 : 0 - none
      6+                					;        1 - warning beep in progress
      6+                					;bit 5 : 0 - normal sound output
      6+                					;        1 - no sound output (MUTE)
      6+                					;bit 6 : 0 - normal timer (4.9152ms)
      6+                					;	 1 - Speech processing (41.6us)
      6+                					;bit 7 : 0 - ---
      6+                					;        1 - quit box asking screen
      6+                					;--------------------------
      6+                					
      6+     00BD       KBDFLAG		equ	0bdh		;--------------------------
      6+                					;bit 0 : 0 - scan membrane
      6+                					;        1 - not to scan membrane
      6+                					;bit 1 : 0 - scan keypad
      6+                					;        1 - not to scan keypad
      6+                					;bit 2 : 0 - sleep if no event
      6+                					;        1 - no sleep if no event
      6+                					;bit 3 : 0 - scan cycle
      6+                					;        1 - not a scan cycle
      6+                					;bit 4 : 0 - repeat key is not allowed
      6+                					;        1 - repeat key is allowed
      6+                					;bit 5 : 0 - 
      6+                					;	 1 - Delay of repeat key
      6+                					;bit 6 : 0 -
      6+                					;	 1 - debounce of the key
      6+                					;bit 7 : 0 -
      6+                					;        1 - key is held down
      6+                					;-------------------------
      6+                ;**************************************************
      6+                ;
      6+                ;	User defined vector table
      6+                ;
      6+                ;**************************************************
      6+     0100       UART_new_isr	equ	100h
      6+     0102       TMR1_new_isr	equ	102h
      6+     0104       PIO_new_isr	equ	104h
      6+     0106       TMR0_new_isr	equ	106h
      6+     0108       CLK_new_isr	equ	108h
      6+     010A       INT_new_isr	equ	10ah
      6+     010C       NMI_new_isr	equ	10ch
      6+     010E       WDT_new_isr	equ	10eh
      6+     0110       PRN_PORT	equ	110h	;image of the printer port address
      6+                				;default = 0fff0h



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   12


      6+     0112       DMG_timer	equ	112h
      6+                ;Attack_Buffer	equ	112h
      6+                ;Defense_Buffer	equ	114h
      6+                ;Max_attack	equ	116h
      6+                ;Max_defense	equ	117h
      6+                ;hit_infoa	equ	118h
      6+                ;hit_infod	equ	11ah
      6+     011C       cursor_pos	equ	11ch
      6+     011D       cursor_tmr	equ	11dh
      6+     011E       TX_tail		equ	11eh
      6+     0120       SIGN		equ	SKRAM
      6+     0124       Year		equ	SIGN+4
      6+     0125       Month		equ	Year+1
      6+     0126       Day		equ	Month+1
      6+     0127       Hour		equ	Day+1
      6+     0128       Minute		equ	Hour+1
      6+     0129       Second		equ	Minute+1
      6+     012A       AYear		equ	Second+1
      6+     012B       AMonth		equ	AYear+1
      6+     012C       ADay		equ	AMonth+1
      6+     012D       AHour		equ	ADay+1
      6+     012E       AMinute		equ	AHour+1
      6+     012F       ASecond		equ	AMinute+1
      6+     0130       KBuff		equ	ASecond+1
      6+                ;=================================;
      6+     012A       Call_dest	equ	AYear
      6+     012D       Cart_Prog_Bank	equ	AHour
      6+                ;----------------------------------;
      6+                ;	Main/Kernel
      6+                ;----------------------------------;
      6+     0150       UTimer1C	equ	150h		;-------------------------
      6+                					;User timer 1 control
      6+                					; 00 - Idle
      6+                					; 01 - Run
      6+                					; 02 - Pause
      6+                					;-------------------------
      6+     0151       UTimer1H	equ	151h
      6+     0152       UTimer1L	equ	152h
      6+     0168       appl_no		equ	168h
      6+     0169       Melody_Register	equ	169h		;-------------------------
      6+                					;bit 0 : channel 0 enable
      6+                					;bit 1-2 : channel 0 instrument
      6+                					;          00 : piano
      6+                					;          01 : organ
      6+                					;          10 : -----
      6+                					;          11 : -----
      6+                					;bit 3 : channel 0 output enable
      6+                					;bit 4 : channel 1 enable
      6+                					;bit 5,6 : channel 1 instrument
      6+                					;          00 : piano
      6+                					;          01 : organ
      6+                					;          10 : -----
      6+                					;          11 : -----
      6+                					;bit 7 : channel 1 output enable
      6+                					;-------------------------



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   13


      6+     016A       Mel_address0	equ	16ah
      6+     016C       Mel_address1	equ	16ch
      6+     016E       Mel_bank0	equ	16eh
      6+     016F       Mel_bank1	equ	16fh
      6+     0170       ADSR_register	equ	170h		;-------------------------
      6+                					;bit 0 - Channel 0 attack
      6+                					;bit 1 - channel 0 decay
      6+                					;bit 2 - channel 0 sustain
      6+                					;bit 3 - channel 0 release
      6+                					;bit 4 - channel 1 attack
      6+                					;bit 5 - channel 1 decay
      6+                					;bit 6 - channel 1 sustain
      6+                					;bit 7 - channel 1 release
      6+                					;-------------------------
      6+     0171       Tone0content	equ	171h		;amplitdue control for channel 0
      6+     0172       Tone1content	equ	172h		;amplitude control for channel 1
      6+     0173       ToneLength0	equ	173h		;length of the tone in channel 0
      6+     0174       ToneLength1	equ	174h		;length of the tone in channel 1
      6+     0175       no_of_voice	equ	175h
      6+     0176       Melody_timer	equ	176h		;count = 10 --> 49ms per unit
      6+     0177       Tone0Holdtimer	equ	177h
      6+     0178       Tone1Holdtimer	equ	178h
      6+     0179       menu_mode	equ	179h		;--------------------
      6+                				; MAIN MENU SPINNING MODE :
      6+                					;bit 0 - bit 2 : Timer ID
      6+                					;bit 3-6 : starting speech progress
      6+                					;  0 : starting speech
      6+                					;  1 : screen #1	(00001XXX)
      6+                					;  2 : screen #2	(00010XXX)
      6+                					;  3 : screen #3	(00011XXX)
      6+                					;  4 : screen #4	(00100XXX)
      6+                					;  5 : screen #5	(00101XXX)
      6+                					;  6 : screen #6	(00110XXX)
      6+                					;  7 : screen #7	(00111XXX)
      6+                					;  8 : screen #6	(01000XXX)
      6+                					;  9 : screen #5	(01001XXX)
      6+                					;  a : screen #4	(01010XXX)
      6+                					;  b : screen #3	(01011XXX)
      6+                					;  c : screen #2	(01100XXX)
      6+                					;  10h : icon pressed	(10000XXX)
      6+                				; MAIN MENU CURSOR MODE
      6+                					;---------------------
      6+     017A       Cart_dest	equ	17ah		;Cart jump address
      6+     017C       Cart_mode	equ	17ch		;-------------------------
      6+                					;bit 0 - 0 no cart in slot #1
      6+                					;	 1 cartridge existed in #1
      6+                					;bit 1 - 0 no cart in slot #2
      6+                					;	 1 cartridge existed in #2
      6+                					;bit 2 - 0 current cartridge is #1
      6+                					;	 1 current cartridge is #2
      6+                					;bit 3 - 0 cart 1 contains program
      6+                					;        1 cart 1 contains data only
      6+                					;bit 4 - 0 cart 2 contains program
      6+                					;        1 cart 2 contains data only
      6+                					;-------------------------



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   14


      6+     017D       Cart_bank1	equ	17dh		;0 - no cart, non-zero, header bank #
      6+     017E       Cart_bank2	equ	17eh		;0 - no cart, non-zero, header bank #
      6+     017F       KBDTMR		equ	17fh		;keyboard use timer
      6+     0180       Sys_TX_queue	equ	180h
      6+     0188       Sys_RX_queue	equ	188h
      6+     0190       User_TX_qq	equ	190h		;tx queue from user
      6+     0192       User_RX_qq	equ	192h		;rx queue from user
      6+     0194       User_TX_qsize	equ	194h		;tx queue size from  user
      6+     0196       User_RX_qsize	equ	196h		;rx queue size from  user
      6+                
      7                 	include disp_ram.inc
      7+                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      7+                ;               WORKING RAMs
      7+                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      7+                ;;  00 -  7F : RP = 3, Display
      7+                ;;  80 -  9F : Display Working RAM (32 bytes)
      7+                ;; 1A0 - 1BF : Display (32 bytes)
      7+                
      7+     0080       cur_pos_x       equ     80h
      7+     0081       cur_pos_y       equ     cur_pos_x+1
      7+     0082       win_left_x      equ     cur_pos_y+1
      7+     0083       win_left_y      equ     win_left_x+1
      7+     0084       win_width       equ     win_left_y+1
      7+     0085       win_height      equ     win_width+1
      7+     0086       RP_image        equ     win_height+1            ;??
      7+     0087       font_x          equ     RP_image+1
      7+     0088       font_y          equ     font_x+1      ;font_no??
      7+     0089       font_bank       equ     font_y+1      ;reserved space for user defined fonts??
      7+     008A       font_offset     equ     font_bank+1
      7+                
      7+                ;font_table_hi   equ     font_offset+1             ;??
      7+                ;font_table_lo   equ     font_table_hi+1         ;??
      7+                ;text_no_x       equ     font_table_lo+1
      7+                ;text_no_y       equ     text_no_x+1
      7+                
      7+     008B       temp_left_x     equ     font_offset+1
      7+     008C       temp_left_y     equ     temp_left_x+1
      7+     008D       temp_width      equ     temp_left_y+1
      7+     008E       temp_height     equ     temp_width+1
      7+     008F       temp_pos_x      equ     temp_height+1
      7+     0090       temp_pos_y      equ     temp_pos_x+1
      7+     0091       work_ram1       equ     temp_pos_y+1
      7+     0092       work_ram2       equ     work_ram1+1
      7+     0093       dmc_image       equ     work_ram2+1
      7+     0094       cur_page        equ     dmc_image+1     ;!! for page swapping & block clear
      7+     0095       local_global    equ     cur_page+1
      7+     0096       local_global_1  equ     local_global+1
      7+     0097       local_global_2  equ     local_global_1+1
      7+     0098       local_global_3  equ     local_global_2+1
      7+     0099       local_global_4  equ     local_global_3+1
      7+     009A       temp_1          equ     local_global_4+1
      7+     009B       temp_2          equ     temp_1+1
      7+     009C       temp_3          equ     temp_2+1        ;!! text background color
      7+     009D       cur_status      equ     temp_3+1        ;!! cursor status
      7+     009E       font_id         equ     cur_status+1



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   15


      7+     009F       font_num        equ     font_id+1
      7+                
      7+     01E8       font3a          equ     01e8h
      7+     01E9       font3b          equ     font3a+1
      7+     01EA       font3c          equ     font3b+1
      7+     01EB       font4a          equ     font3c+1
      7+     01EC       font4b          equ     font4a+1
      7+     01ED       font4c          equ     font4b+1
      7+     01EE       font5a          equ     font4c+1
      7+     01EF       font5b          equ     font5a+1
      7+     01F0       font5c          equ     font5b+1
      7+     01F1       font6a          equ     font5c+1
      7+     01F2       font6b          equ     font6a+1
      7+     01F3       font6c          equ     font6b+1
      7+     01F4       font7a          equ     font6c+1
      7+     01F5       font7b          equ     font7a+1
      7+     01F6       font7c          equ     font7b+1
      7+     01F7       font8a          equ     font7c+1
      7+     01F8       font8b          equ     font8a+1
      7+     01F9       font8c          equ     font8b+1
      7+     01FA       font9a          equ     font8c+1
      7+     01FB       font9b          equ     font9a+1
      7+     01FC       font9c          equ     font9b+1
      7+     01FD       fontaa          equ     font9c+1
      7+     01FE       fontab          equ     fontaa+1
      7+     01FF       fontac          equ     fontab+1
      7+     0200       font_start      equ     fontac+1
      7+     0201       timer_ovr       equ     font_start+1
      7+     0202       inverse         equ     timer_ovr+1
      7+     0203       intnet          equ     inverse+1
      7+     0204       scroll          equ     intnet+1
      7+     0205       scroll1         equ     scroll+1
      7+     0206       text_dest       equ     scroll1+1
      7+     0207       cart_flag       equ     text_dest+1 ;0: cart1 ;1:cart2
      7+                
      7+     01A8       mel_counter     equ     01a8h
      7+     01A9       mel_counter1    equ     mel_counter+1
      7+     01AA       mel_flag        equ     mel_counter1+1
      7+     01AB       mel_flag1       equ     mel_flag+1
      7+                
      7+                
      8                 	include disp_equ.inc
      8+                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      8+                ;	       CONSTANT
      8+                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      8+                ;MainProgBank  equ 5
      8+     0000       a_2_a		equ	0
      8+     0002       a_2_b		equ	2
      8+     0003       b_2_b		equ	3
      8+     0001       b_2_a		equ	1
      8+                
      8+     0007       CUR_SHAPE_BIT	EQU	7; 80H	   ;0 - BLOCK CURSOR, 1 - LINE CURSOR
      8+     0080       CUR_SHAPE_LOC	EQU	80H
      8+                
      8+     0006       CUR_DISP_CYCLE	EQU	6; 40H	   ;0 - OFF, 1 - ON



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   16


      8+     0040       CUR_DISP_LOC	EQU	40H
      8+                
      8+     0005       CUR_ON_BIT	EQU	5; 20H	   ;0 - OFF, 1 - ON
      8+     0020       CUR_ON_BIT_LOC	EQU	20H
      8+                
      8+                
      8+     00C8       MAX_WIDTH	EQU	200
      8+     00A0       MAX_HEIGHT	EQU	160
      8+                
      8+                
      9                 
     10                 	global  Black_back
     11                 	global  White_back
     12                 	global  ply1_life
     13                 	global  ply1_life1
     14                 	global  ply2_life
     15                 	global  ply2_life1
     16                 	global  show_1P
     17                 	global  show_2P
     18                 	global  show_CPU
     19                 	global  Bexit
     20                 	global  Boption
     21                 	global  SEL_fighter
     22                 	global  show_RESULT
     23                 	global  white_lineA
     24                 	global  select_record
     25                 	global  takeABx
     26                 	global  takeAB0
     27                 	global  takeA1
     28                 	global  takeB1
     29                 	global  takeA
     30                 	global  Fi_graph3
     31                 	global  Fi_graph4
     32                 	global  Fi_graph5
     33                 	global  graph1
     34                 	global  graphT
     35                 	global  DISPLAY_stage           ;show the stage in Cheat Code
     36                 	global  HIDDEN_FIG
     37                 	global  hidden_casex
     38                 	global  hidden_case2x
     39                 	global  MAIN_MENU_DESC
     40                 	global  OPTION_MENU_DESC
     41                 	global  RULES_MENU_DESC
     42                 	global  do_menu_key
     43                 
     44                 	program
     45                 
     46                 
     47                 
     48                 ;============================================================================
     49                 ;
     50                 ;           Process Menus
     51                 ;
     52                 ;----------------------------------------------------------------------------
     53                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   17


     54                 Menus:      global  Menus
     55                 
     56 0000 C12C                   mov     r1,#44
     57 0002 B9D5                   mov     temp1,r1
     58 0004 C101                   mov     r1,#1
     59 0006 B9D6                   mov     temp2,r1
     60                 
     61 0008            MenusL1:
     62 0008 490013'                call    MainMenu
     63 000B D605                   br      z,MenusOut
     64                 
     65 000D 490419'                call    GameOptions
     66 0010 D8F6                   br      MenusL1
     67                 
     68 0012            MenusOut:
     69 0012 F8                     ret
     70                 
     71                 ;============================================================================
     72                 ;
     73                 ;           Process Main Menu
     74                 ;
     75                 ;----------------------------------------------------------------------------
     76                 
     77 0013            MainMenu:
     78 0013 0E3B                   push    dmpl
     79 0015 58E43B     	mov     dmpl,#0e4h
     80 0018 C0E4                   mov     r0,#0e4h
     81 001A B8EB                   mov     hold_byte1,r0
     82                 
     83                 	; play initial sound
     84                 
     85 001C AFCD       	bset    sound_flag,#7         ;set start melody flag.
     86                 
     87                             ; set initial cursor position
     88                 
     89 001E C1A0                   mov     r1,#160
     90 0020 B9C1                   mov     CursorY,r1
     91 0022 C104                   mov     r1,#4
     92                 
     93                             ; Loop until done
     94                 
     95 0024            MainMenuL0:
     96 0024 B9D4                   mov     temp0,r1
     97 0026            MainMenuL1:
     98                 
     99                 	; play the sound
    100                 
    101 0026 490000"    	call	cont_melody
    102                 
    103                             ; draw the menu
    104                 
    105 0029 490000"                call    delay20ms
    106 002C 4900F4'                call    DrawMain
    107                 
    108                             ; loop immediately if no keypress



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   18


    109                 
    110 002F 490000"                call    GetUser
    111 0032 500000                 cmp     r0,#0
    112 0035 D6EF                   br      eq,MainMenuL1
    113                 
    114                             ; up arrow
    115                 
    116 0037 508300                 cmp     r0,#83h
    117 003A DE0A                   br      nz,MainMenu1
    118 003C B1D4                   mov     r1,temp0
    119 003E 0901                   dec     r1
    120 0040 DDE2                   br      pl,MainMenuL0
    121 0042 C104                   mov     r1,#4
    122 0044 D8DE                   br      MainMenuL0
    123 0046            MainMenu1:
    124                 
    125                             ; down arrow
    126                 
    127 0046 508400                 cmp     r0,#84h
    128 0049 DE0D                   br      nz,MainMenu2
    129 004B B1D4                   mov     r1,temp0
    130 004D 0801                   inc     r1
    131 004F 500501                 cmp     r1,#5
    132 0052 DED0                   br      ne,MainMenuL0
    133 0054 0001                   clr     r1
    134 0056 D8CC                   Br      MainMenuL0
    135 0058            MainMenu2
    136                 
    137                             ; selection keys
    138                 
    139 0058 508B00                 cmp     r0,#8bh
    140 005B D645                   br      eq,MainMenuDone
    141 005D 508C00                 cmp     r0,#8ch
    142 0060 D640                   br      eq,MainMenuDone
    143 0062 508D00                 cmp     r0,#8dh
    144 0065 D63B                   br      eq,MainMenuDone
    145 0067 508E00                 cmp     r0,#8eh
    146 006A D636                   br      eq,MainMenuDone
    147                 
    148                             ; touching first Menu Item
    149                 
    150 006C 502A00                 cmp     r0,#3*13+3
    151 006F D7B5                   br      ult,MainMenuL1
    152 0071 503300                 cmp     r0,#3*13+12
    153 0074 D742                   br      ult,MainMenuDo0
    154                 
    155                             ; touching second Menu Item
    156                 
    157 0076 503700                 cmp     r0,#4*13+3
    158 0079 D7AB                   br      ult,MainMenuL1
    159 007B 503F00                 cmp     r0,#4*13+11
    160 007E D745                   br      ult,MainMenuDo1
    161                 
    162                             ; touching third Menu Item
    163                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   19


    164 0080 504400                 cmp     r0,#5*13+3
    165 0083 D7A1                   br      ult,MainMenuL1
    166 0085 504C00                 cmp     r0,#5*13+11
    167 0088 D767                   br      ult,MainMenuDo2
    168                 
    169                             ; touching Sound Menu Item
    170                 
    171 008A 505100                 cmp     r0,#6*13+3
    172 008D D797                   br      ult,MainMenuL1
    173 008F 505900                 cmp     r0,#6*13+11
    174 0092 D742                   br      ult,MainMenuDoS
    175                 
    176                             ; touching fourth Menu Item
    177                 
    178 0094 505E00                 cmp     r0,#7*13+3
    179 0097 D78D                   br      ult,MainMenuL1
    180 0099 506600                 cmp     r0,#7*13+11
    181 009C D74F                   br      ult,MainMenuDo3
    182                 
    183 009E B1D4                   mov     r1,temp0
    184 00A0            MainMenuL00:
    185 00A0 D882                   br      MainMenuL0
    186                 
    187                             ; handle being done via button push
    188                 
    189 00A2            MainMenuDone:
    190 00A2 B1D4                   mov     r1,temp0
    191 00A4 0801                   inc     r1
    192 00A6 0901                   dec     r1
    193 00A8 D60E                   br      z,MainMenuDo0
    194 00AA 0901                   dec     r1
    195 00AC D617                   br      z,MainMenuDo1
    196 00AE 0901                   dec     r1
    197 00B0 D63F                   br      z,MainMenuDo2
    198 00B2 0901                   dec     r1
    199 00B4 D620                   br      z,MainMenuDoS
    200 00B6 D835                   br      MainMenuDo3
    201                 
    202                             ; Style
    203                 
    204 00B8            MainMenuDo0:
    205 00B8 B0C4                   mov     r0,GameMode
    206 00BA 520100                 sub     r0,#1
    207 00BD 0100                   neg     r0
    208 00BF B8C4                   mov     GameMode,r0
    209                 
    210 00C1 C100                   mov     r1,#0
    211 00C3 D8DB                   br      MainMenuL00
    212                 
    213                             ; Number of players
    214                 
    215 00C5            MainMenuDo1:
    216 00C5 B0C3                   mov     r0,NumPlayers
    217 00C7 0800                   inc     r0
    218 00C9 500900                 cmp     r0,#MaxPlayers+1



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   20


    219 00CC DE02                   br      ne,MainMenuDo1y
    220 00CE C001                   mov     r0,#1
    221 00D0            MainMenuDo1y:
    222 00D0 B8C3                   mov     NumPlayers,r0
    223                 
    224 00D2 C101                   mov     r1,#1
    225 00D4 D8CA                   br      MainMenuL00
    226                 
    227 00D6            MainMenuDoS:
    228 00D6 AFCD       	bset    sound_flag,#7         ;set start melody flag.
    229 00D8 38800364               mov     r0,new_melody_ptr
    230 00DC 0800                   inc     r0
    231 00DE 501400                 cmp     r0,#NumSounds+1
    232 00E1 DE02                   br      ne,MainMenuDoSy
    233 00E3 C001                   mov     r0,#1
    234 00E5            MainMenuDoSy:
    235 00E5 39800364               mov     new_melody_ptr,r0
    236                 
    237 00E9 C101                   mov     r1,#1
    238 00EB D8B3                   br      MainMenuL00
    239                 	
    240                 
    241                             ; Go Play Game
    242                 
    243 00ED            MainMenuDo3:
    244 00ED 1009                   cmp     r1,r1
    245 00EF D800                   br      MainMenuExit
    246                 
    247                             ; Option Screen
    248                 
    249 00F1            MainMenuDo2:
    250                             ; Alread non-zero
    251                 
    252                             ; and bail out
    253                 
    254 00F1            MainMenuExit:
    255 00F1 0F3B                   pop     dmpl
    256 00F3 F8                     ret
    257                 
    258                 ;============================================================================
    259                 ;
    260                 ;           Draw Main Menu
    261                 ;
    262                 ;----------------------------------------------------------------------------
    263                 
    264 00F4            DrawMain:
    265                             ; draw the legal screen frame
    266                 
    267 00F4 490000"                call    DrawFrame
    268                 
    269                             ; draw the frogger logo
    270                 
    271 00F7 B3D5                   mov     r3,temp1
    272 00F9 B2D6                   mov     r2,temp2
    273 00FB 0802                   inc     r2



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   21


    274 00FD 500202                 cmp     r2,#2
    275 0100 DE0A                   br      ne,DrawMenu2
    276 0102 0002                   clr     r2
    277 0104 0903                   dec     r3
    278 0106 DE02                   br      nz,DrawMenu1
    279 0108 C32C                   mov     r3,#44
    280 010A            DrawMenu1:
    281 010A BBD5                   mov     temp1,r3
    282 010C            DrawMenu2:
    283 010C BAD6                   mov     temp2,r2
    284                 
    285 010E 49022B'                call    DrawLogo
    286                 
    287                             ; draw the heading
    288                 
    289 0111 3898036D               mov     r3,index3
    290 0115 0803                   inc     r3
    291 0117 501803                 cmp     r3,#24
    292 011A D702                   br      ult,DrawMenuHead2
    293 011C 0003                   clr     r3
    294 011E            DrawMenuHead2:
    295 011E 3998036D               mov     index3,r3
    296                       
    297 0122 4903B5'                call    DrawMainHead
    298                 
    299                             ; draw the cursor
    300                 
    301 0125 4903E3'                call    DrawMainCurs
    302                 
    303                             ; print the fixed text
    304                 
    305 0128 780203'                movw    rr0,#DrawMain1
    306 012B 3B800368               movw    page_ptr1,rr0
    307 012F 490000"                call    print_string
    308                 
    309 0132 78020F'                movw    rr0,#DrawMain2
    310 0135 3B800368               movw    page_ptr1,rr0
    311 0139 490000"                call    print_string
    312                 
    313 013C 780217'                movw    rr0,#DrawMain3
    314 013F 3B800368               movw    page_ptr1,rr0
    315 0143 490000"                call    print_string
    316                 
    317 0146 78021B'                movw    rr0,#DrawMainS
    318 0149 3B800368               movw    page_ptr1,rr0
    319 014D 490000"                call    print_string
    320                 
    321 0150 780227'                movw    rr0,#DrawMain4
    322 0153 3B800368               movw    page_ptr1,rr0
    323 0157 490000"                call    print_string
    324                 
    325                             ; print the game style
    326                 
    327 015A 780207'                movw    rr0,#DrawMain1c
    328 015D B2C4                   mov     r2,GameMode



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   22


    329 015F 500002                 cmp     r2,#0
    330 0162 D603                   br      eq,DrawMains
    331 0164 78020B'                movw    rr0,#DrawMain1u
    332 0167            DrawMains:
    333 0167 3B800368               movw    page_ptr1,rr0
    334 016B 490000"                call    print_string
    335                 
    336                             ; print the current sound
    337                 
    338 016E 38800364               mov     r0,new_melody_ptr
    339 0172 500A00     	cmp	r0,#10
    340 0175 D127       	br	lt,DrawMainJ9
    341                 
    342 0177 0E00       	push	r0
    343 0179 B100       	mov	r1,r0
    344 017B 0000       	clr	r0
    345 017D 5D0A00     	div	rr0,#10
    346 0180 B001       	mov	r0,r1
    347 0182 563000                 or      r0,#'0'
    348 0185 0001                   clr     r1
    349 0187 4A00D0                 movw    temp0w,rr0
    350 018A 78021F'                movw    rr0,#DrawMain4s10
    351 018D 3B800368               movw    page_ptr1,rr0
    352 0191 490000"                call    print_string
    353 0194 0F00       	pop	r0
    354 0196            DrawMainJ8:
    355 0196 520A00     	sub	r0,#10
    356 0199 500900     	cmp	r0,#9
    357 019C DAF8       	br	gt,DrawMainJ8
    358                 
    359 019E            DrawMainJ9:
    360 019E 563000                 or      r0,#'0'
    361 01A1 0001                   clr     r1
    362 01A3 4A00D0                 movw    temp0w,rr0
    363 01A6 780223'                movw    rr0,#DrawMain4s
    364 01A9 3B800368               movw    page_ptr1,rr0
    365 01AD 490000"                call    print_string
    366                 
    367                             ; print the number of Players
    368                 
    369 01B0 B0C3                   mov     r0,NumPlayers
    370 01B2 563000                 or      r0,#'0'
    371 01B5 0001                   clr     r1
    372 01B7 4A00D0                 movw    temp0w,rr0
    373 01BA 780213'                movw    rr0,#DrawMain2p
    374 01BD 3B800368               movw    page_ptr1,rr0
    375 01C1 490000"                call    print_string
    376                 
    377                             ; show the page
    378                 
    379 01C4 490000"                call    Swap_page
    380                 
    381 01C7 F8                     ret
    382                 
    383 01C8            DrawMainT1:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   23


    384 01C8 5374796C               defm    'Style'
        01CC 65
    385 01CD 00                     defb    0
    386 01CE            DrawMainT1c:
    387 01CE 436C6173               defm    'Classic'
        01D2 736963
    388 01D5 00                     defb    0
    389 01D6            DrawMainT1u:
    390 01D6 55706461               defm    'Updated'
        01DA 746564
    391 01DD 00                     defb    0
    392                 
    393 01DE            DrawMainT2:
    394 01DE 506C6179               defm    'Players'
        01E2 657273
    395 01E5 00                     defb    0
    396                 
    397 01E6            DrawMainTS:
    398 01E6 536F756E               defm    'Sound'
        01EA 64
    399 01EB 00                     defb    0
    400                 
    401 01EC            DrawMainT3:
    402 01EC 47616D65               defm    'Game Options'
        01F0 204F7074
        01F4 696F6E73
    403 01F8 00                     defb    0
    404                 
    405 01F9            DrawMainT4:
    406 01F9 506C6179               defm    'Play Game'
        01FD 2047616D
        0201 65
    407 0202 00                     defb    0
    408                 
    409 0203            DrawMain1:
    410 0203 2834                   defb    40,52
    411 0205 01C8'                  defw    DrawMainT1
    412 0207            DrawMain1c:
    413 0207 7834                   defb    120,52
    414 0209 01CE'                  defw    DrawMainT1c
    415 020B            DrawMain1u:
    416 020B 7834                   defb    120,52
    417 020D 01D6'                  defw    DrawMainT1u
    418                 
    419 020F            DrawMain2:
    420 020F 2844                   defb    40,68
    421 0211 01DE'                  defw    DrawMainT2
    422 0213            DrawMain2p:
    423 0213 9044                   defb    144,68
    424 0215 00D0                   defw    temp0w
    425                 
    426 0217            DrawMain3:
    427 0217 2854                   defb    40,84
    428 0219 01EC'                  defw    DrawMainT3
    429                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   24


    430 021B            DrawMainS:
    431 021B 2864                   defb    40,100
    432 021D 01E6'                  defw    DrawMainTS
    433 021F            DrawMain4s10:
    434 021F 8864                   defb    136,100
    435 0221 00D0                   defw    temp0w
    436 0223            DrawMain4s:
    437 0223 9064                   defb    144,100
    438 0225 00D0                   defw    temp0w
    439                 
    440 0227            DrawMain4:
    441 0227 2874                   defb    40,116
    442 0229 01F9'                  defw    DrawMainT4
    443                 
    444                 ;============================================================================
    445                 ;
    446                 ;           Draw Frogger Logo
    447                 ;
    448                 ;----------------------------------------------------------------------------
    449                 
    450 022B            DrawLogo:
    451 022B B1D5                   mov     r1,temp1
    452 022D 0E01                   push    r1
    453                 
    454                 ;Row 1
    455                 
    456 022F 780000                 movw    rr0,#0
    457 0232 4A00D0                 movw    temp0w,rr0
    458 0235 4902A3'                call    DrawLogo1
    459                 
    460 0238 780084                 movw    rr0,#132
    461 023B 4A00D0                 movw    temp0w,rr0
    462 023E 4902A3'                call    DrawLogo1
    463                 
    464                 ;Row 2
    465                 
    466 0241 B1D5                   mov     r1,temp1
    467 0243 512C01                 add     r1,#44
    468 0246 B9D5                   mov     temp1,r1
    469                 
    470 0248 780000                 movw    rr0,#0
    471 024B 4A00D0                 movw    temp0w,rr0
    472 024E 4902A3'                call    DrawLogo1
    473                 
    474 0251 78FF7C                 movw    rr0,#0-132
    475 0254 4A00D0                 movw    temp0w,rr0
    476 0257 4902A3'                call    DrawLogo1
    477                 
    478 025A 780084                 movw    rr0,#132
    479 025D 4A00D0                 movw    temp0w,rr0
    480 0260 4902A3'                call    DrawLogo1
    481                 
    482                 ;Row 3
    483                 
    484 0263 B1D5                   mov     r1,temp1



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   25


    485 0265 512C01                 add     r1,#44
    486 0268 B9D5                   mov     temp1,r1
    487                 
    488 026A 780000                 movw    rr0,#0
    489 026D 4A00D0                 movw    temp0w,rr0
    490 0270 4902A3'                call    DrawLogo1
    491                 
    492 0273 78FF7C                 movw    rr0,#0-132
    493 0276 4A00D0                 movw    temp0w,rr0
    494 0279 4902A3'                call    DrawLogo1
    495                 
    496 027C 780084                 movw    rr0,#132
    497 027F 4A00D0                 movw    temp0w,rr0
    498 0282 4902A3'                call    DrawLogo1
    499                 
    500                 ;Row 4
    501 0285 B1D5                   mov     r1,temp1
    502 0287 512C01                 add     r1,#44
    503 028A B9D5                   mov     temp1,r1
    504                 
    505 028C 780000                 movw    rr0,#0
    506 028F 4A00D0                 movw    temp0w,rr0
    507 0292 4902A3'                call    DrawLogo1
    508                 
    509 0295 78FF7C                 movw    rr0,#0-132
    510 0298 4A00D0                 movw    temp0w,rr0
    511 029B 4902A3'                call    DrawLogo1
    512                 
    513 029E 0F01                   pop     r1
    514 02A0 B9D5                   mov     temp1,r1
    515 02A2 F8                     ret
    516                 
    517 02A3            DrawLogo1:
    518                 
    519                             ; Left half
    520                 
    521 02A3 58C90A                 mov     r10,#201
    522 02A6 583B0B                 mov     r11,#59
    523 02A9 58370C                 mov     r12,#55
    524 02AC 58210D                 mov     r13,#33
    525 02AF 58210E                 mov     r14,#bankno_front1
    526                 
    527                             ; cut top if above
    528                 
    529 02B2 B1D5                   mov     r1,temp1
    530 02B4 B909                   mov     r9,r1
    531 02B6 0008                   clr     r8
    532 02B8 6A080020               subw    rr8,#32
    533 02BC D705                   br      c,DrawLogoLTBad
    534 02BE 500D09                 cmp     r9,#13
    535 02C1 DB12                   br      ugt,DrawLogoLTOK
    536                 
    537 02C3            DrawLogoLTBad:
    538                 
    539 02C3 C10D                   mov     r1,#13



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   26


    540 02C5 420901                 sub     r1,r9
    541 02C8 580D09                 mov     r9,#13
    542 02CB 41010B                 add     r11,r1
    543 02CE 42010D                 sub     r13,r1
    544                 
    545 02D1 D657                   br      z,DrawLogoLSkip
    546 02D3 D555                   br      mi,DrawLogoLSkip
    547                 
    548 02D5            DrawLogoLTOK:
    549                 
    550                             ; cut left if left
    551                 
    552 02D5 B7D5                   mov     r7,temp1
    553 02D7 0006                   clr     r6
    554 02D9 78003A                 movw    rr0,#58
    555 02DC 62D000                 subw    rr0,temp0w
    556 02DF 620006                 subw    rr6,rr0
    557 02E2 D505                   br      mi,DrawLogoLLBad
    558 02E4 500D07                 cmp     r7,#13
    559 02E7 DB10                   br      ugt,DrawLogoLLOK
    560                 
    561 02E9            DrawLogoLLBad:
    562                 
    563 02E9 C10D                   mov     r1,#13
    564 02EB 120F                   sub     r1,r7
    565 02ED C70D                   mov     r7,#13
    566 02EF 41010A                 add     r10,r1
    567 02F2 42010C                 sub     r12,r1
    568                 
    569 02F5 D633                   br      z,DrawLogoLSkip
    570 02F7 D531                   br      mi,DrawLogoLSkip
    571                 
    572 02F9            DrawLogoLLOK:
    573                 
    574 02F9 BF08                   mov     r8,r7
    575                 
    576                             ; cut bottom if below
    577                 
    578 02FB 507009                 cmp     r9,#112             ;160-14-33 (height of left piece>
    579 02FE D70C                   br      ult,DrawLogoLBOK
    580                 
    581 0300 B109                   mov     r1,r9
    582 0302 527001                 sub     r1,#112
    583 0305 42010D                 sub     r13,r1
    584                 
    585 0308 D620                   br      z,DrawLogoLSkip
    586 030A D51E                   br      mi,DrawLogoLSkip
    587                 
    588 030C            DrawLogoLBOK:
    589                 
    590                             ; cut right if right
    591                 
    592 030C 508308                 cmp     r8,#131
    593 030F D70C                   br      ult,DrawLogoLROK
    594                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   27


    595 0311 B108                   mov     r1,r8
    596 0313 528301                 sub     r1,#131
    597 0316 42010C                 sub     r12,r1
    598                 
    599 0319 D60F                   br      z,DrawLogoLSkip
    600 031B D50D                   br      mi,DrawLogoLSkip
    601                 
    602 031D            DrawLogoLROK:
    603                 
    604                             ; composite is ok for background.
    605                 
    606 031D 58000F                 mov     r15,#override
    607 0320 500194                 cmp     cur_page,#1
    608 0323 D602                   br      eq,DrawLogoL15
    609 0325 A90F                   bset    r15,#1
    610 0327            DrawLogoL15:
    611                 
    612                             ; do Fi_graph
    613                 
    614 0327 490000"                call    Fi_graph
    615                 
    616 032A            DrawLogoLSkip:
    617                 
    618                             ; Right half
    619                 
    620 032A 58A00A                 mov     r10,#160
    621 032D 58610B                 mov     r11,#97
    622 0330 584D0C                 mov     r12,#77
    623 0333 58220D                 mov     r13,#34
    624 0336 58210E                 mov     r14,#bankno_front1
    625                 
    626                             ; cut top if above
    627                 
    628 0339 B1D5                   mov     r1,temp1
    629 033B B909                   mov     r9,r1
    630 033D 0008                   clr     r8
    631 033F 6A08002A               subw    rr8,#42
    632 0343 D705                   br      c,DrawLogoRTBad
    633 0345 500D09                 cmp     r9,#13
    634 0348 DB12                   br      ugt,DrawLogoRTOK
    635                 
    636 034A            DrawLogoRTBad:
    637                 
    638 034A C10D                   mov     r1,#13
    639 034C 420901                 sub     r1,r9
    640 034F 580D09                 mov     r9,#13
    641 0352 41010B                 add     r11,r1
    642 0355 42010D                 sub     r13,r1
    643                 
    644 0358 D65A                   br      z,DrawLogoRSkip
    645 035A D558                   br      mi,DrawLogoRSkip
    646                 
    647 035C            DrawLogoRTOK:
    648                 
    649                             ; cut left if left



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   28


    650                 
    651 035C B7D5                   mov     r7,temp1
    652 035E 0006                   clr     r6
    653 0360 61D006                 addw    rr6,temp0w
    654 0363 6A060003               subw    rr6,#3
    655                 
    656 0367 7800BA                 movw    rr0,#186
    657 036A 620600                 subw    rr0,rr6
    658 036D D545                   br      mi,DrawLogoRSkip
    659                 
    660 036F 78000D                 movw    rr0,#13
    661 0372 620600                 subw    rr0,rr6
    662 0375 D50C                   br      mi,DrawLogoRLOK
    663                 
    664 0377            DrawLogoRLBad:
    665                 
    666 0377 C70D                   mov     r7,#13
    667 0379 41010A                 add     r10,r1
    668 037C 42010C                 sub     r12,r1
    669                 
    670 037F D633                   br      z,DrawLogoRSkip
    671 0381 D531                   br      mi,DrawLogoRSkip
    672                 
    673 0383            DrawLogoRLOK:
    674                 
    675 0383 BF08                   mov     r8,r7
    676                 
    677                             ; cut bottom if below
    678                 
    679 0385 506F09                 cmp     r9,#111             ;160-14-34 (height of left piece>
    680 0388 D70C                   br      ult,DrawLogoRBOK
    681                 
    682 038A B109                   mov     r1,r9
    683 038C 526F01                 sub     r1,#111
    684 038F 42010D                 sub     r13,r1
    685                 
    686 0392 D620                   br      z,DrawLogoRSkip
    687 0394 D51E                   br      mi,DrawLogoRSkip
    688                 
    689 0396            DrawLogoRBOK:
    690                 
    691                             ; cut right if right
    692                 
    693 0396 506D08                 cmp     r8,#109
    694 0399 D70C                   br      ult,DrawLogoRROK
    695                 
    696 039B B108                   mov     r1,r8
    697 039D 526D01                 sub     r1,#109
    698 03A0 42010C                 sub     r12,r1
    699                 
    700 03A3 D60F                   br      z,DrawLogoRSkip
    701 03A5 D50D                   br      mi,DrawLogoRSkip
    702                 
    703 03A7            DrawLogoRROK:
    704                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   29


    705                             ; composite is ok for background.
    706                 
    707 03A7 58000F                 mov     r15,#override
    708 03AA 500194                 cmp     cur_page,#1
    709 03AD D602                   br      eq,DrawLogoR15
    710 03AF A90F                   bset    r15,#1
    711 03B1            DrawLogoR15:
    712                 
    713                             ; do Fi_graph
    714                 
    715 03B1 490000"                call    Fi_graph
    716                 
    717 03B4            DrawLogoRSkip:
    718                 
    719 03B4 F8                     ret
    720                 
    721                 ;============================================================================
    722                 ;
    723                 ;           Draw Main menu head
    724                 ;
    725                 ;----------------------------------------------------------------------------
    726                 
    727 03B5            DrawMainHead:
    728                 
    729                             ; initialize all initial Fi_graph values
    730                 
    731 03B5 582F08                 mov     r8,#47
    732 03B8 581009                 mov     r9,#16
    733 03BB 58010A                 mov     r10,#1
    734 03BE 0703                   srl     r3
    735 03C0 0703                   srl     r3
    736 03C2 0B03                   sll     r3
    737 03C4 0B03                   sll     r3
    738 03C6 0B03                   sll     r3
    739 03C8 0B03                   sll     r3
    740 03CA BB0B                   mov     r11,r3
    741 03CC 586A0C                 mov     r12,#106
    742 03CF 58100D                 mov     r13,#16
    743 03D2 58220E                 mov     r14,#bankno_front2
    744                 
    745                             ; composite is ok for background.
    746                 
    747 03D5 58010F                 mov     r15,#composite
    748 03D8 500194                 cmp     cur_page,#1
    749 03DB D602                   br      eq,DrawMainHead21
    750 03DD A90F                   bset    r15,#1
    751 03DF            DrawMainHead21
    752                 
    753                             ; do Fi_graph
    754                 
    755 03DF 490000"                call    Fi_graph
    756                 
    757 03E2 F8                     ret
    758                 
    759                 ;============================================================================



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   30


    760                 ;
    761                 ;           Draw Main menu cursor
    762                 ;
    763                 ;----------------------------------------------------------------------------
    764                 
    765 03E3            DrawMainCurs:
    766                 
    767                             ; initialize all initial Fi_graph values
    768                 
    769 03E3 581808                 mov     r8,#24
    770 03E6 B1D4                   mov     r1,temp0
    771 03E8 0000                   clr     r0
    772 03EA 7A0414'                movw    rr2,#DrawMainCursTab
    773 03ED 610002                 addw    rr2,rr0
    774 03F0 380A                   mov     r1,@rr2
    775 03F2 B909                   mov     r9,r1
    776 03F4 58F00A                 mov     r10,#240
    777 03F7 58000B                 mov     r11,#0
    778 03FA 58100C                 mov     r12,#16
    779 03FD 58100D                 mov     r13,#16
    780 0400 58210E                 mov     r14,#bankno_front1
    781                 
    782                             ; composite is ok for background.
    783                 
    784 0403 58010F                 mov     r15,#composite
    785 0406 500194                 cmp     cur_page,#1
    786 0409 D602                   br      eq,DrawMainCurs21
    787 040B A90F                   bset    r15,#1
    788 040D            DrawMainCurs21:
    789                 
    790                             ; do Fi_graph
    791                 
    792 040D 490C10'                call    FixCursor
    793 0410 490000"                call    Fi_graph
    794                 
    795 0413 F8                     ret
    796                 
    797 0414            DrawMainCursTab:
    798 0414 30                     defb    48
    799 0415 40                     defb    64
    800 0416 50                     defb    80
    801 0417 60                     defb    96
    802 0418 70                     defb    112
    803                 
    804                 ;============================================================================
    805                 ;
    806                 ;           Process Game Options
    807                 ;
    808                 ;----------------------------------------------------------------------------
    809                 
    810 0419            GameOptions:
    811 0419 0E3B                   push    dmpl
    812 041B 58E43B     	mov     dmpl,#0e4h
    813 041E C0E4                   mov     r0,#0e4h
    814 0420 B8EB                   mov     hold_byte1,r0



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   31


    815                 
    816                             ; set initial cursor position
    817                 
    818 0422 C1A0                   mov     r1,#160
    819 0424 B9C1                   mov     CursorY,r1
    820 0426 C104                   mov     r1,#4
    821                 
    822                             ; Loop until done
    823                 
    824 0428            GameOptL0:
    825 0428 B9D4                   mov     temp0,r1
    826 042A            GameOptL1:
    827                 
    828                             ; draw the menu
    829                 
    830 042A 490000"                call    delay20ms
    831 042D 4904F8'                call    DrawOpt
    832                 
    833                             ; loop immediately if no keypress
    834                 
    835 0430 490000"                call    GetUser
    836 0433 500000                 cmp     r0,#0
    837 0436 D6F2                   br      eq,GameOptL1
    838                 
    839                             ; up arrow
    840                 
    841 0438 508300                 cmp     r0,#83h
    842 043B DE0A                   br      nz,GameOpt1
    843 043D B1D4                   mov     r1,temp0
    844 043F 0901                   dec     r1
    845 0441 DDE5                   br      pl,GameOptL0
    846 0443 C104                   mov     r1,#4
    847 0445 D8E1                   br      GameOptL0
    848 0447            GameOpt1:
    849                 
    850                             ; down arrow
    851                 
    852 0447 508400                 cmp     r0,#84h
    853 044A DE0D                   br      nz,GameOpt2
    854 044C B1D4                   mov     r1,temp0
    855 044E 0801                   inc     r1
    856 0450 500501                 cmp     r1,#5
    857 0453 DED3                   br      ne,GameOptL0
    858 0455 0001                   clr     r1
    859 0457 D8CF                   Br      GameOptL0
    860 0459            GameOpt2
    861                 
    862                             ; selection keys
    863                 
    864 0459 508B00                 cmp     r0,#8bh
    865 045C D645                   br      eq,GameOptDone
    866 045E 508C00                 cmp     r0,#8ch
    867 0461 D640                   br      eq,GameOptDone
    868 0463 508D00                 cmp     r0,#8dh
    869 0466 D63B                   br      eq,GameOptDone



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   32


    870 0468 508E00                 cmp     r0,#8eh
    871 046B D636                   br      eq,GameOptDone
    872                 
    873                             ; touching first Menu Item
    874                 
    875 046D 502A00                 cmp     r0,#3*13+3
    876 0470 D7B8                   br      ult,GameOptL1
    877 0472 503200                 cmp     r0,#3*13+11
    878 0475 D742                   br      ult,GameOptDo0
    879                 
    880                             ; touching second Menu Item
    881                 
    882 0477 503700                 cmp     r0,#4*13+3
    883 047A D7AE                   br      ult,GameOptL1
    884 047C 503F00                 cmp     r0,#4*13+11
    885 047F D745                   br      ult,GameOptDo1
    886                 
    887                             ; touching third Menu Item
    888                 
    889 0481 504400                 cmp     r0,#5*13+3
    890 0484 D7A4                   br      ult,GameOptL1
    891 0486 504C00                 cmp     r0,#5*13+11
    892 0489 D74C                   br      ult,GameOptDo2
    893                 
    894                             ; touching fourth Menu Item
    895                 
    896 048B 505100                 cmp     r0,#6*13+3
    897 048E D79A                   br      ult,GameOptL1
    898 0490 505900                 cmp     r0,#6*13+11
    899 0493 D74F                   br      ult,GameOptDo3
    900                 
    901                             ; touching fifth Menu Item
    902                 
    903 0495 505E00                 cmp     r0,#7*13+3
    904 0498 D790                   br      ult,GameOptL1
    905 049A 506600                 cmp     r0,#7*13+11
    906 049D D756                   br      ult,GameOptDo4
    907                 
    908 049F B1D4                   mov     r1,temp0
    909 04A1            GameOptL01:
    910 04A1 D885                   br      GameOptL0
    911                 
    912                             ; handle being done via button push
    913                 
    914 04A3            GameOptDone:
    915 04A3 B1D4                   mov     r1,temp0
    916 04A5 0801                   inc     r1
    917 04A7 0901                   dec     r1
    918 04A9 D60E                   br      z,GameOptDo0
    919 04AB 0901                   dec     r1
    920 04AD D617                   br      z,GameOptDo1
    921 04AF 0901                   dec     r1
    922 04B1 D624                   br      z,GameOptDo2
    923 04B3 0901                   dec     r1
    924 04B5 D62D                   br      z,GameOptDo3



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   33


    925 04B7 D83C                   br      GameOptDo4
    926                 
    927                             ; Difficulty
    928                 
    929 04B9            GameOptDo0:
    930 04B9 B0C5                   mov     r0,Difficulty
    931 04BB 520100                 sub     r0,#1
    932 04BE 0100                   neg     r0
    933 04C0 B8C5                   mov     Difficulty,r0
    934                 
    935 04C2 C100                   mov     r1,#0
    936 04C4 D8DB                   br      GameOptL01
    937                 
    938                             ; Lives
    939                 
    940 04C6            GameOptDo1:
    941 04C6 B0C6                   mov     r0,Lives
    942 04C8 0800                   inc     r0
    943 04CA 500600                 cmp     r0,#6
    944 04CD DE02                   br      ne,GameOptDo1a
    945 04CF C003                   mov     r0,#3
    946 04D1            GameOptDo1a:
    947 04D1 B8C6                   mov     Lives,r0
    948                 
    949 04D3 C101                   mov     r1,#1
    950 04D5 D8CA                   br      GameOptL01
    951                 
    952                             ; Continue type
    953                 
    954 04D7            GameOptDo2:
    955 04D7 B0C7                   mov     r0,Continue
    956 04D9 520100                 sub     r0,#1
    957 04DC 0100                   neg     r0
    958 04DE B8C7                   mov     Continue,r0
    959                 
    960 04E0 C102                   mov     r1,#2
    961 04E2 D8BD                   br      GameOptL01
    962                 
    963                             ; Start Level
    964                 
    965 04E4            GameOptDo3:
    966 04E4 B0C8                   mov     r0,StartLevel
    967 04E6 0800                   inc     r0
    968 04E8 500D00                 cmp     r0,#MaxLevels+1
    969 04EB DE02                   br      ne,GameOptDo3a
    970 04ED C001                   mov     r0,#1
    971 04EF            GameOptDo3a:
    972 04EF B8C8                   mov     StartLevel,r0
    973                 
    974 04F1 C103                   mov     r1,#3
    975 04F3 D8AC                   br      GameOptL01
    976                 
    977                             ; Return to main menu
    978                 
    979 04F5            GameOptDo4:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   34


    980                             ; and bail out
    981                 
    982 04F5            GameOptExit:
    983 04F5 0F3B                   pop     dmpl
    984 04F7 F8                     ret
    985                 
    986                 ;============================================================================
    987                 ;
    988                 ;           Draw Options Menu
    989                 ;
    990                 ;----------------------------------------------------------------------------
    991                 
    992 04F8            DrawOpt:
    993                             ; draw the legal screen frame
    994                 
    995 04F8 490000"                call    DrawFrame
    996                 
    997                             ; draw the frogger logo
    998                 
    999 04FB B3D5                   mov     r3,temp1
   1000 04FD B2D6                   mov     r2,temp2
   1001 04FF 0802                   inc     r2
   1002 0501 500202                 cmp     r2,#2
   1003 0504 DE0A                   br      ne,DrawOptHead3
   1004 0506 0002                   clr     r2
   1005 0508 0903                   dec     r3
   1006 050A DE02                   br      nz,DrawOptHead1
   1007 050C C32C                   mov     r3,#44
   1008 050E            DrawOptHead1:
   1009 050E BBD5                   mov     temp1,r3
   1010 0510            DrawOptHead3:
   1011 0510 BAD6                   mov     temp2,r2
   1012                 
   1013 0512 49022B'                call    DrawLogo
   1014                 
   1015                             ; draw the heading
   1016                 
   1017 0515 3898036D               mov     r3,index3
   1018 0519 0803                   inc     r3
   1019 051B 501803                 cmp     r3,#24
   1020 051E D702                   br      ult,DrawOptHead2
   1021 0520 0003                   clr     r3
   1022 0522            DrawOptHead2:
   1023 0522 3998036D               mov     index3,r3
   1024                       
   1025 0526 490650'                call    DrawOptHead
   1026                 
   1027                             ; draw the cursor
   1028                 
   1029 0529 49067E'                call    DrawOptCurs
   1030                 
   1031                             ; print the fixed text
   1032                 
   1033 052C 780620'                movw    rr0,#DrawOpt1
   1034 052F 3B800368               movw    page_ptr1,rr0



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   35


   1035 0533 490000"                call    print_string
   1036                 
   1037 0536 78062C'                movw    rr0,#DrawOpt2
   1038 0539 3B800368               movw    page_ptr1,rr0
   1039 053D 490000"                call    print_string
   1040                 
   1041 0540 780634'                movw    rr0,#DrawOpt3
   1042 0543 3B800368               movw    page_ptr1,rr0
   1043 0547 490000"                call    print_string
   1044                 
   1045 054A 780640'                movw    rr0,#DrawOpt4
   1046 054D 3B800368               movw    page_ptr1,rr0
   1047 0551 490000"                call    print_string
   1048                 
   1049 0554 78064C'                movw    rr0,#DrawOpt5
   1050 0557 3B800368               movw    page_ptr1,rr0
   1051 055B 490000"                call    print_string
   1052                 
   1053                             ; print the difficulty level
   1054                 
   1055 055E 780624'                movw    rr0,#DrawOpt1e
   1056 0561 B2C5                   mov     r2,Difficulty
   1057 0563 500002                 cmp     r2,#0
   1058 0566 D603                   br      eq,DrawOptHeade
   1059 0568 780628'                movw    rr0,#DrawOpt1h
   1060 056B            DrawOptHeade:
   1061 056B 3B800368               movw    page_ptr1,rr0
   1062 056F 490000"                call    print_string
   1063                 
   1064                             ; print the number of lives
   1065                 
   1066 0572 B0C6                   mov     r0,Lives
   1067 0574 563000                 or      r0,#'0'
   1068 0577 0001                   clr     r1
   1069 0579 4A00D0                 movw    temp0w,rr0
   1070 057C 780630'                movw    rr0,#DrawOpt2l
   1071 057F 3B800368               movw    page_ptr1,rr0
   1072 0583 490000"                call    print_string
   1073                 
   1074                             ; print the difficulty level
   1075                 
   1076 0586 780638'                movw    rr0,#DrawOpt30
   1077 0589 B2C7                   mov     r2,Continue
   1078 058B 500002                 cmp     r2,#0
   1079 058E D603                   br      eq,DrawOptHeadx
   1080 0590 78063C'                movw    rr0,#DrawOpt31
   1081 0593            DrawOptHeadx:
   1082 0593 3B800368               movw    page_ptr1,rr0
   1083 0597 490000"                call    print_string
   1084                 
   1085                             ; print the start level
   1086                 
   1087 059A B0C8                   mov     r0,StartLevel
   1088 059C 500A00     	cmp	r0,#10
   1089 059F D122       	br	lt,DrawOptHead9



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   36


   1090                 
   1091 05A1 0E00       	push	r0
   1092 05A3 B100       	mov	r1,r0
   1093 05A5 0000       	clr	r0
   1094 05A7 5D0A00     	div	rr0,#10
   1095 05AA B001       	mov	r0,r1
   1096 05AC 563000                 or      r0,#'0'
   1097 05AF 0001                   clr     r1
   1098 05B1 4A00D0                 movw    temp0w,rr0
   1099 05B4 780644'                movw    rr0,#DrawOpt4s10
   1100 05B7 3B800368               movw    page_ptr1,rr0
   1101 05BB 490000"                call    print_string
   1102 05BE 0F00       	pop	r0
   1103 05C0 520A00     	sub	r0,#10
   1104                 
   1105 05C3            DrawOptHead9:
   1106 05C3 563000                 or      r0,#'0'
   1107 05C6 0001                   clr     r1
   1108 05C8 4A00D0                 movw    temp0w,rr0
   1109 05CB 780648'                movw    rr0,#DrawOpt4s
   1110 05CE 3B800368               movw    page_ptr1,rr0
   1111 05D2 490000"                call    print_string
   1112                 
   1113                             ; show the page
   1114                 
   1115 05D5 490000"                call    Swap_page
   1116                 
   1117 05D8 F8                     ret
   1118                 
   1119 05D9            DrawOptT1:
   1120 05D9 44696666               defm    'Difficulty'
        05DD 6963756C
        05E1 7479
   1121 05E3 00                     defb    0
   1122 05E4            DrawOptT1e:
   1123 05E4 45617379               defm    'Easy'
   1124 05E8 00                     defb    0
   1125 05E9            DrawOptT1h:
   1126 05E9 48617264               defm    'Hard'
   1127 05ED 00                     defb    0
   1128                 
   1129 05EE            DrawOptT2:
   1130 05EE 4C697665               defm    'Lives'
        05F2 73
   1131 05F3 00                     defb    0
   1132                 
   1133 05F4            DrawOptT3:
   1134 05F4 436F6E74               defm    'Continue'
        05F8 696E7565
   1135 05FC 00                     defb    0
   1136 05FD            DrawOptT30:
   1137 05FD 4F6666                 defm    'Off'
   1138 0600 00                     defb    0
   1139 0601            DrawOptT31:
   1140 0601 4F6E                   defm    'On'



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   37


   1141 0603 00                     defb    0
   1142                 
   1143 0604            DrawOptT4:
   1144 0604 53746172               defm    'Start Level'
        0608 74204C65
        060C 76656C
   1145 060F 00                     defb    0
   1146                 
   1147 0610            DrawOptT5:
   1148 0610 476F2054               defm    'Go To Main Menu'
        0614 6F204D61
        0618 696E204D
        061C 656E75
   1149 061F 00                     defb    0
   1150                 
   1151 0620            DrawOpt1:
   1152 0620 2834                   defb    40,52
   1153 0622 05D9'                  defw    DrawOptT1
   1154 0624            DrawOpt1e:
   1155 0624 9034                   defb    144,52
   1156 0626 05E4'                  defw    DrawOptT1e
   1157 0628            DrawOpt1h:
   1158 0628 9034                   defb    144,52
   1159 062A 05E9'                  defw    DrawOptT1h
   1160                 
   1161 062C            DrawOpt2:
   1162 062C 2844                   defb    40,68
   1163 062E 05EE'                  defw    DrawOptT2
   1164 0630            DrawOpt2l:
   1165 0630 9044                   defb    144,68
   1166 0632 00D0                   defw    temp0w
   1167                 
   1168 0634            DrawOpt3:
   1169 0634 2854                   defb    40,84
   1170 0636 05F4'                  defw    DrawOptT3
   1171 0638            DrawOpt30:
   1172 0638 9054                   defb    144,84
   1173 063A 05FD'                  defw    DrawOptT30
   1174 063C            DrawOpt31:
   1175 063C 9054                   defb    144,84
   1176 063E 0601'                  defw    DrawOptT31
   1177                 
   1178 0640            DrawOpt4:
   1179 0640 2864                   defb    40,100
   1180 0642 0604'                  defw    DrawOptT4
   1181 0644            DrawOpt4s10:
   1182 0644 8864                   defb    136,100
   1183 0646 00D0                   defw    temp0w
   1184 0648            DrawOpt4s:
   1185 0648 9064                   defb    144,100
   1186 064A 00D0                   defw    temp0w
   1187                 
   1188 064C            DrawOpt5:
   1189 064C 2874                   defb    40,116
   1190 064E 0610'                  defw    DrawOptT5



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   38


   1191                 
   1192                 ;============================================================================
   1193                 ;
   1194                 ;           Draw Options menu head
   1195                 ;
   1196                 ;----------------------------------------------------------------------------
   1197                 
   1198 0650            DrawOptHead:
   1199                 
   1200                             ; initialize all initial Fi_graph values
   1201                 
   1202 0650 581D08                 mov     r8,#29
   1203 0653 581009                 mov     r9,#16
   1204 0656 58700A                 mov     r10,#112
   1205 0659 0703                   srl     r3
   1206 065B 0703                   srl     r3
   1207 065D 0B03                   sll     r3
   1208 065F 0B03                   sll     r3
   1209 0661 0B03                   sll     r3
   1210 0663 0B03                   sll     r3
   1211 0665 BB0B                   mov     r11,r3
   1212 0667 588E0C                 mov     r12,#142
   1213 066A 58100D                 mov     r13,#16
   1214 066D 58220E                 mov     r14,#bankno_front2
   1215                 
   1216                             ; composite is ok for background.
   1217                 
   1218 0670 58010F                 mov     r15,#composite
   1219 0673 500194                 cmp     cur_page,#1
   1220 0676 D602                   br      eq,DrawOptHead21
   1221 0678 A90F                   bset    r15,#1
   1222 067A            DrawOptHead21
   1223                 
   1224                             ; do Fi_graph
   1225                 
   1226 067A 490000"                call    Fi_graph
   1227                 
   1228 067D F8                     ret
   1229                 
   1230                 ;============================================================================
   1231                 ;
   1232                 ;           Draw Options menu cursor
   1233                 ;
   1234                 ;----------------------------------------------------------------------------
   1235                 
   1236 067E            DrawOptCurs:
   1237                 
   1238                             ; initialize all initial Fi_graph values
   1239                 
   1240 067E 581808                 mov     r8,#24
   1241 0681 B1D4                   mov     r1,temp0
   1242 0683 0000                   clr     r0
   1243 0685 7A06AF'                movw    rr2,#DrawOptCursTab
   1244 0688 610002                 addw    rr2,rr0
   1245 068B 380A                   mov     r1,@rr2



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   39


   1246 068D B909                   mov     r9,r1
   1247 068F 58F00A                 mov     r10,#240
   1248 0692 58000B                 mov     r11,#0
   1249 0695 58100C                 mov     r12,#16
   1250 0698 58100D                 mov     r13,#16
   1251 069B 58210E                 mov     r14,#bankno_front1
   1252                 
   1253                             ; composite is ok for background.
   1254                 
   1255 069E 58010F                 mov     r15,#composite
   1256 06A1 500194                 cmp     cur_page,#1
   1257 06A4 D602                   br      eq,DrawOptCurs21
   1258 06A6 A90F                   bset    r15,#1
   1259 06A8            DrawOptCurs21:
   1260                 
   1261                             ; do Fi_graph
   1262                 
   1263 06A8 490C10'                call    FixCursor
   1264 06AB 490000"                call    Fi_graph
   1265                 
   1266 06AE F8                     ret
   1267                 
   1268 06AF            DrawOptCursTab:
   1269 06AF 30                     defb    48
   1270 06B0 40                     defb    64
   1271 06B1 50                     defb    80
   1272 06B2 60                     defb    96
   1273 06B3 70                     defb    112
   1274                 
   1275                 ;============================================================================
   1276                 ;
   1277                 ;           Process Pause Menu
   1278                 ;
   1279                 ;----------------------------------------------------------------------------
   1280                 
   1281                 PauseMenu:  global  PauseMenu
   1282 06B4 0E3B                   push    dmpl
   1283 06B6 58E43B     	mov     dmpl,#0e4h
   1284 06B9 C0E4                   mov     r0,#0e4h
   1285 06BB B8EB                   mov     hold_byte1,r0
   1286                 
   1287 06BD            PauseMenuL1:
   1288                 
   1289                             ; draw the menu
   1290                 
   1291 06BD 490000"                call    delay20ms
   1292 06C0 4906CE'                call    DrawPause
   1293                 
   1294                             ; loop immediately if no keypress
   1295                 
   1296 06C3 490000"                call    SCAN_KEY
   1297 06C6 508A00                 cmp     r0,#8ah
   1298 06C9 DEF2                   br      ne,PauseMenuL1
   1299                 
   1300 06CB 0F3B                   pop     dmpl



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   40


   1301 06CD F8                     ret
   1302                 
   1303                 ;============================================================================
   1304                 ;
   1305                 ;           Draw Pause Menu
   1306                 ;
   1307                 ;----------------------------------------------------------------------------
   1308                 
   1309 06CE            DrawPause:
   1310                             ; draw the Pause frame
   1311                 
   1312 06CE 78010B                 movw    rr0,#1*256+11
   1313 06D1 490C5F'                call    SmallFrame
   1314                 
   1315                             ; print the fixed text
   1316                 
   1317 06D4 7806EE'                movw    rr0,#DrawPause1
   1318 06D7 3B800368               movw    page_ptr1,rr0
   1319 06DB 490000"                call    print_string
   1320                 
   1321                             ; show the page
   1322                 
   1323 06DE 490000"                call    Swap_page
   1324                 
   1325 06E1 F8                     ret
   1326                 
   1327 06E2            DrawPauseT1:
   1328 06E2 47616D65               defm    'Game Paused'
        06E6 20506175
        06EA 736564
   1329 06ED 00                     defb    0
   1330                 
   1331 06EE            DrawPause1:
   1332 06EE 3844                   defb    56,68
   1333 06F0 06E2'                  defw    DrawPauseT1
   1334                 
   1335                 ;============================================================================
   1336                 ;
   1337                 ;           Process Sound Menu
   1338                 ;
   1339                 ;----------------------------------------------------------------------------
   1340                 
   1341                 SoundMenu:  global  SoundMenu
   1342 06F2 0E3B                   push    dmpl
   1343 06F4 58E43B     	mov     dmpl,#0e4h
   1344 06F7 C0E4                   mov     r0,#0e4h
   1345 06F9 B8EB                   mov     hold_byte1,r0
   1346                 
   1347                             ; set initial cursor position
   1348                 
   1349 06FB C1A0                   mov     r1,#160
   1350 06FD B9C1                   mov     CursorY,r1
   1351 06FF C102                   mov     r1,#2
   1352                 
   1353                             ; Loop until done



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   41


   1354                 
   1355 0701            SoundMenuL0:
   1356 0701 B9D4                   mov     temp0,r1
   1357 0703            SoundMenuL1:
   1358                 
   1359                             ; draw the menu
   1360                 
   1361 0703 490000"                call    delay20ms
   1362 0706 490795'                call    DrawSound
   1363                 
   1364                             ; loop immediately if no keypress
   1365                 
   1366 0709 490000"                call    SCAN_KEY
   1367 070C 500000                 cmp     r0,#0
   1368 070F D6F2                   br      eq,SoundMenuL1
   1369                 
   1370                             ; up arrow
   1371                 
   1372 0711 508300                 cmp     r0,#83h
   1373 0714 DE0A                   br      nz,SoundMenu1
   1374 0716 B1D4                   mov     r1,temp0
   1375 0718 0901                   dec     r1
   1376 071A DDE5                   br      pl,SoundMenuL0
   1377 071C C102                   mov     r1,#2
   1378 071E D8E1                   br      SoundMenuL0
   1379 0720            SoundMenu1:
   1380                 
   1381                             ; down arrow
   1382                 
   1383 0720 508400                 cmp     r0,#84h
   1384 0723 DE0D                   br      nz,SoundMenu2
   1385 0725 B1D4                   mov     r1,temp0
   1386 0727 0801                   inc     r1
   1387 0729 500301                 cmp     r1,#3
   1388 072C DED3                   br      ne,SoundMenuL0
   1389 072E 0001                   clr     r1
   1390 0730 D8CF                   Br      SoundMenuL0
   1391 0732            SoundMenu2
   1392                 
   1393                             ; selection keys
   1394                 
   1395 0732 508B00                 cmp     r0,#8bh
   1396 0735 D631                   br      eq,SoundMenuDone
   1397 0737 508C00                 cmp     r0,#8ch
   1398 073A D62C                   br      eq,SoundMenuDone
   1399 073C 508D00                 cmp     r0,#8dh
   1400 073F D627                   br      eq,SoundMenuDone
   1401 0741 508E00                 cmp     r0,#8eh
   1402 0744 D622                   br      eq,SoundMenuDone
   1403                 
   1404                             ; touching first Menu Item
   1405                 
   1406 0746 503800                 cmp     r0,#4*13+4
   1407 0749 D7B8                   br      ult,SoundMenuL1
   1408 074B 503F00                 cmp     r0,#4*13+11



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   42


   1409 074E D728                   br      ult,SoundMenuDo0
   1410                 
   1411                             ; touching second Menu Item
   1412                 
   1413 0750 504500                 cmp     r0,#5*13+4
   1414 0753 D7AE                   br      ult,SoundMenuL1
   1415 0755 504C00                 cmp     r0,#5*13+11
   1416 0758 D72B                   br      ult,SoundMenuDo1
   1417                 
   1418                             ; touching third Menu Item
   1419                 
   1420 075A 505200                 cmp     r0,#6*13+4
   1421 075D D7A4                   br      ult,SoundMenuL1
   1422 075F 505500                 cmp     r0,#6*13+7
   1423 0762 D72E                   br      ult,SoundMenuDo2
   1424                 
   1425 0764 B1D4                   mov     r1,temp0
   1426 0766            SoundMenuL01:
   1427 0766 D899                   br      SoundMenuL0
   1428                 
   1429                             ; handle being done via button push
   1430                 
   1431 0768            SoundMenuDone:
   1432 0768 B1D4                   mov     r1,temp0
   1433 076A 0801                   inc     r1
   1434 076C 0901                   dec     r1
   1435 076E D608                   br      z,SoundMenuDo0
   1436 0770 0901                   dec     r1
   1437 0772 D611                   br      z,SoundMenuDo1
   1438 0774 0901                   dec     r1
   1439 0776 D81A                   br      SoundMenuDo2
   1440                 
   1441                             ; Music
   1442                 
   1443 0778            SoundMenuDo0:
   1444 0778 B0CB                   mov     r0,MusicOn
   1445 077A 520100                 sub     r0,#1
   1446 077D 0100                   neg     r0
   1447 077F B8CB                   mov     MusicOn,r0
   1448                 
   1449 0781 C100                   mov     r1,#0
   1450 0783 D8E1                   br      SoundMenuL01
   1451                 
   1452                             ; Effects
   1453                 
   1454 0785            SoundMenuDo1:
   1455 0785 B0CA                   mov     r0,SfxOn
   1456 0787 520100                 sub     r0,#1
   1457 078A 0100                   neg     r0
   1458 078C B8CA                   mov     SfxOn,r0
   1459                 
   1460 078E C101                   mov     r1,#1
   1461 0790 D8D4                   br      SoundMenuL01
   1462                 
   1463                             ; Exit menu



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   43


   1464                 
   1465 0792            SoundMenuDo2:
   1466                             ; and bail out
   1467                 
   1468 0792            SoundMenuExit:
   1469 0792 0F3B                   pop     dmpl
   1470 0794 F8                     ret
   1471                 
   1472                 ;============================================================================
   1473                 ;
   1474                 ;           Draw Sound Menu
   1475                 ;
   1476                 ;----------------------------------------------------------------------------
   1477                 
   1478 0795            DrawSound:
   1479                             ; draw the Sound frame
   1480                 
   1481 0795 78040E                 movw    rr0,#4*256+14
   1482 0798 490C5F'                call    SmallFrame
   1483                 
   1484                             ; draw the cursor
   1485                 
   1486 079B 490839'                call    DrawSoundCurs
   1487                 
   1488                             ; print the fixed text
   1489                 
   1490 079E 780819'                movw    rr0,#DrawSound1
   1491 07A1 3B800368               movw    page_ptr1,rr0
   1492 07A5 490000"                call    print_string
   1493                 
   1494 07A8 78081D'                movw    rr0,#DrawSound2
   1495 07AB 3B800368               movw    page_ptr1,rr0
   1496 07AF 490000"                call    print_string
   1497                 
   1498 07B2 780829'                movw    rr0,#DrawSound3
   1499 07B5 3B800368               movw    page_ptr1,rr0
   1500 07B9 490000"                call    print_string
   1501                 
   1502 07BC 780835'                movw    rr0,#DrawSound4
   1503 07BF 3B800368               movw    page_ptr1,rr0
   1504 07C3 490000"                call    print_string
   1505                 
   1506                             ; print the music state
   1507                 
   1508 07C6 780825'                movw    rr0,#DrawSound20
   1509 07C9 B2CB                   mov     r2,MusicOn
   1510 07CB 500002                 cmp     r2,#0
   1511 07CE D603                   br      eq,DrawSoundm
   1512 07D0 780821'                movw    rr0,#DrawSound21
   1513 07D3            DrawSoundm:
   1514 07D3 3B800368               movw    page_ptr1,rr0
   1515 07D7 490000"                call    print_string
   1516                 
   1517                             ; print the effects state
   1518                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   44


   1519 07DA 780831'                movw    rr0,#DrawSound30
   1520 07DD B2CA                   mov     r2,SfxOn
   1521 07DF 500002                 cmp     r2,#0
   1522 07E2 D603                   br      eq,DrawSounde
   1523 07E4 78082D'                movw    rr0,#DrawSound31
   1524 07E7            DrawSounde:
   1525 07E7 3B800368               movw    page_ptr1,rr0
   1526 07EB 490000"                call    print_string
   1527                 
   1528                             ; show the page
   1529                 
   1530 07EE 490000"                call    Swap_page
   1531                 
   1532 07F1 F8                     ret
   1533                 
   1534 07F2            DrawSoundT1:
   1535 07F2 536F756E               defm    'Sound Option'
        07F6 64204F70
        07FA 74696F6E
   1536 07FE 00                     defb    0
   1537                 
   1538 07FF            DrawSoundT2:
   1539 07FF 4D757369               defm    'Music'
        0803 63
   1540 0804 00                     defb    0
   1541 0805            DrawSoundT21:
   1542 0805            DrawSoundT31:
   1543 0805 4F6E                   defm    'On'
   1544 0807 00                     defb    0
   1545 0808            DrawSoundT20:
   1546 0808            DrawSoundT30:
   1547 0808 4F6666                 defm    'Off'
   1548 080B 00                     defb    0
   1549                 
   1550 080C            DrawSoundT3:
   1551 080C 45666665               defm    'Effects'
        0810 637473
   1552 0813 00                     defb    0
   1553                 
   1554 0814            DrawSoundT4:
   1555 0814 45786974               defm    'Exit'
   1556 0818 00                     defb    0
   1557                 
   1558 0819            DrawSound1:
   1559 0819 3434                   defb    52,52
   1560 081B 07F2'                  defw    DrawSoundT1
   1561                 
   1562 081D            DrawSound2:
   1563 081D 3C44                   defb    60,68
   1564 081F 07FF'                  defw    DrawSoundT2
   1565 0821            DrawSound21:
   1566 0821 8844                   defb    136,68
   1567 0823 0805'                  defw    DrawSoundT21
   1568 0825            DrawSound20:
   1569 0825 8044                   defb    128,68



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   45


   1570 0827 0808'                  defw    DrawSoundT20
   1571                 
   1572 0829            DrawSound3:
   1573 0829 3C54                   defb    60,84
   1574 082B 080C'                  defw    DrawSoundT3
   1575 082D            DrawSound31:
   1576 082D 8854                   defb    136,84
   1577 082F 0805'                  defw    DrawSoundT31
   1578 0831            DrawSound30:
   1579 0831 8054                   defb    128,84
   1580 0833 0808'                  defw    DrawSoundT30
   1581                 
   1582 0835            DrawSound4:
   1583 0835 3C64                   defb    60,100
   1584 0837 0814'                  defw    DrawSoundT4
   1585                 
   1586                 ;============================================================================
   1587                 ;
   1588                 ;           Draw Sound cursor
   1589                 ;
   1590                 ;----------------------------------------------------------------------------
   1591                 
   1592 0839            DrawSoundCurs:
   1593                 
   1594                             ; initialize all initial Fi_graph values
   1595                 
   1596 0839 582C08                 mov     r8,#44
   1597 083C B1D4                   mov     r1,temp0
   1598 083E 0000                   clr     r0
   1599 0840 7A086A'                movw    rr2,#DrawSoundCursTab
   1600 0843 610002                 addw    rr2,rr0
   1601 0846 380A                   mov     r1,@rr2
   1602 0848 B909                   mov     r9,r1
   1603 084A 58F00A                 mov     r10,#240
   1604 084D 58000B                 mov     r11,#0
   1605 0850 58100C                 mov     r12,#16
   1606 0853 58100D                 mov     r13,#16
   1607 0856 58210E                 mov     r14,#bankno_front1
   1608                 
   1609                             ; composite is ok for background.
   1610                 
   1611 0859 58010F                 mov     r15,#composite
   1612 085C 500194                 cmp     cur_page,#1
   1613 085F D602                   br      eq,DrawSoundCurs21
   1614 0861 A90F                   bset    r15,#1
   1615 0863            DrawSoundCurs21:
   1616                 
   1617                             ; do Fi_graph
   1618                 
   1619 0863 490C10'                call    FixCursor
   1620 0866 490000"                call    Fi_graph
   1621                 
   1622 0869 F8                     ret
   1623                 
   1624 086A            DrawSoundCursTab:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   46


   1625 086A 40                     defb    64
   1626 086B 50                     defb    80
   1627 086C 60                     defb    96
   1628                 
   1629                 ;============================================================================
   1630                 ;
   1631                 ;           Process Exit Menu
   1632                 ;
   1633                 ;----------------------------------------------------------------------------
   1634                 
   1635                 ExitMenu:   global  ExitMenu
   1636 086D 0E3B                   push    dmpl
   1637 086F 58E43B     	mov     dmpl,#0e4h
   1638 0872 C0E4                   mov     r0,#0e4h
   1639 0874 B8EB                   mov     hold_byte1,r0
   1640                 
   1641                             ; set initial cursor position
   1642                 
   1643 0876 C1A0                   mov     r1,#160
   1644 0878 B9C1                   mov     CursorY,r1
   1645 087A C101                   mov     r1,#1
   1646                 
   1647                             ; Loop until done
   1648                 
   1649 087C            ExitMenuL0:
   1650 087C B9D4                   mov     temp0,r1
   1651 087E            ExitMenuL1:
   1652                 
   1653                             ; draw the menu
   1654                 
   1655 087E 490000"                call    delay20ms
   1656 0881 4908EB'                call    DrawExit
   1657                 
   1658                             ; loop immediately if no keypress
   1659                 
   1660 0884 490000"                call    SCAN_KEY
   1661 0887 500000                 cmp     r0,#0
   1662 088A D6F2                   br      eq,ExitMenuL1
   1663                 
   1664                             ; up arrow
   1665                 
   1666 088C 508300                 cmp     r0,#83h
   1667 088F DE0A                   br      nz,ExitMenu1
   1668 0891 B1D4                   mov     r1,temp0
   1669 0893 0901                   dec     r1
   1670 0895 DDE5                   br      pl,ExitMenuL0
   1671 0897 C101                   mov     r1,#1
   1672 0899 D8E1                   br      ExitMenuL0
   1673 089B            ExitMenu1:
   1674                 
   1675                             ; down arrow
   1676                 
   1677 089B 508400                 cmp     r0,#84h
   1678 089E DE0D                   br      nz,ExitMenu2
   1679 08A0 B1D4                   mov     r1,temp0



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   47


   1680 08A2 0801                   inc     r1
   1681 08A4 500201                 cmp     r1,#2
   1682 08A7 DED3                   br      ne,ExitMenuL0
   1683 08A9 0001                   clr     r1
   1684 08AB D8CF                   Br      ExitMenuL0
   1685 08AD            ExitMenu2
   1686                 
   1687                             ; selection keys
   1688                 
   1689 08AD 508B00                 cmp     r0,#8bh
   1690 08B0 D627                   br      eq,ExitMenuDone
   1691 08B2 508C00                 cmp     r0,#8ch
   1692 08B5 D622                   br      eq,ExitMenuDone
   1693 08B7 508D00                 cmp     r0,#8dh
   1694 08BA D61D                   br      eq,ExitMenuDone
   1695 08BC 508E00                 cmp     r0,#8eh
   1696 08BF D618                   br      eq,ExitMenuDone
   1697                 
   1698                             ; touching first Menu Item
   1699                 
   1700 08C1 503800                 cmp     r0,#4*13+4
   1701 08C4 D7B8                   br      ult,ExitMenuL1
   1702 08C6 503F00                 cmp     r0,#4*13+11
   1703 08C9 D71A                   br      ult,ExitMenuDo0
   1704                 
   1705                             ; touching second Menu Item
   1706                 
   1707 08CB 504500                 cmp     r0,#5*13+4
   1708 08CE D7AE                   br      ult,ExitMenuL1
   1709 08D0 504C00                 cmp     r0,#5*13+11
   1710 08D3 D713                   br      ult,ExitMenuDo1
   1711                 
   1712 08D5 B1D4                   mov     r1,temp0
   1713 08D7            ExitMenuL01:
   1714 08D7 D8A3                   br      ExitMenuL0
   1715                 
   1716                             ; handle being done via button push
   1717                 
   1718 08D9            ExitMenuDone:
   1719 08D9 B1D4                   mov     r1,temp0
   1720 08DB 0801                   inc     r1
   1721 08DD 0901                   dec     r1
   1722 08DF D604                   br      z,ExitMenuDo0
   1723 08E1 0901                   dec     r1
   1724 08E3 D803                   br      ExitMenuDo1
   1725                 
   1726                             ; Exit Game
   1727                 
   1728 08E5            ExitMenuDo0:
   1729 08E5 980000"                jmp     Game_Die
   1730                 
   1731                             ; Cancel Menu
   1732                 
   1733 08E8            ExitMenuDo1:
   1734                             ; and bail out



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   48


   1735                 
   1736 08E8            ExitMenuExit:
   1737 08E8 0F3B                   pop     dmpl
   1738 08EA F8                     ret
   1739                 
   1740                 ;============================================================================
   1741                 ;
   1742                 ;           Draw Exit Menu
   1743                 ;
   1744                 ;----------------------------------------------------------------------------
   1745                 
   1746 08EB            DrawExit:
   1747                             ; draw the Exit frame
   1748                 
   1749 08EB 78020B                 movw    rr0,#2*256+11
   1750 08EE 490C5F'                call    SmallFrame
   1751                 
   1752                             ; draw the cursor
   1753                 
   1754 08F1 490925'                call    DrawExitCurs
   1755                 
   1756                             ; print the fixed text
   1757                 
   1758 08F4 78091D'                movw    rr0,#DrawExit1
   1759 08F7 3B800368               movw    page_ptr1,rr0
   1760 08FB 490000"                call    print_string
   1761                 
   1762 08FE 780921'                movw    rr0,#DrawExit2
   1763 0901 3B800368               movw    page_ptr1,rr0
   1764 0905 490000"                call    print_string
   1765                 
   1766                             ; show the page
   1767                 
   1768 0908 490000"                call    Swap_page
   1769                 
   1770 090B F8                     ret
   1771                 
   1772 090C            DrawExitT1:
   1773 090C 45786974               defm    'Exit Game'
        0910 2047616D
        0914 65
   1774 0915 00                     defb    0
   1775                 
   1776 0916            DrawExitT2:
   1777 0916 43616E63               defm    'Cancel'
        091A 656C
   1778 091C 00                     defb    0
   1779                 
   1780 091D            DrawExit1:
   1781 091D 4844                   defb    72,68
   1782 091F 090C'                  defw    DrawExitT1
   1783                 
   1784 0921            DrawExit2:
   1785 0921 4854                   defb    72,84
   1786 0923 0916'                  defw    DrawExitT2



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   49


   1787                 
   1788                 ;============================================================================
   1789                 ;
   1790                 ;           Draw Exit cursor
   1791                 ;
   1792                 ;----------------------------------------------------------------------------
   1793                 
   1794 0925            DrawExitCurs:
   1795                 
   1796                             ; initialize all initial Fi_graph values
   1797                 
   1798 0925 583808                 mov     r8,#56
   1799 0928 B1D4                   mov     r1,temp0
   1800 092A 0000                   clr     r0
   1801 092C 7A0956'                movw    rr2,#DrawExitCursTab
   1802 092F 610002                 addw    rr2,rr0
   1803 0932 380A                   mov     r1,@rr2
   1804 0934 B909                   mov     r9,r1
   1805 0936 58F00A                 mov     r10,#240
   1806 0939 58000B                 mov     r11,#0
   1807 093C 58100C                 mov     r12,#16
   1808 093F 58100D                 mov     r13,#16
   1809 0942 58210E                 mov     r14,#bankno_front1
   1810                 
   1811                             ; composite is ok for background.
   1812                 
   1813 0945 58010F                 mov     r15,#composite
   1814 0948 500194                 cmp     cur_page,#1
   1815 094B D602                   br      eq,DrawExitCurs21
   1816 094D A90F                   bset    r15,#1
   1817 094F            DrawExitCurs21:
   1818                 
   1819                             ; do Fi_graph
   1820                 
   1821 094F 490C10'                call    FixCursor
   1822 0952 490000"                call    Fi_graph
   1823                 
   1824 0955 F8                     ret
   1825                 
   1826 0956            DrawExitCursTab:
   1827 0956 40                     defb    64
   1828 0957 50                     defb    80
   1829                 
   1830                 ;============================================================================
   1831                 ;
   1832                 ;           Process Restart Menu
   1833                 ;
   1834                 ;----------------------------------------------------------------------------
   1835                 
   1836                 RestartMenu:   global  RestartMenu
   1837 0958 0E3B                   push    dmpl
   1838 095A 58E43B     	mov     dmpl,#0e4h
   1839 095D C0E4                   mov     r0,#0e4h
   1840 095F B8EB                   mov     hold_byte1,r0
   1841                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   50


   1842                             ; set initial cursor position
   1843                 
   1844 0961 C1A0                   mov     r1,#160
   1845 0963 B9C1                   mov     CursorY,r1
   1846 0965 C103                   mov     r1,#3
   1847                 
   1848                             ; Loop until done
   1849                 
   1850 0967            RestartMenuL0:
   1851 0967 B9D4                   mov     temp0,r1
   1852 0969            RestartMenuL1:
   1853                 
   1854                             ; draw the menu
   1855                 
   1856 0969 490000"                call    delay20ms
   1857 096C 490A08'                call    DrawRestart
   1858                 
   1859                             ; loop immediately if no keypress
   1860                 
   1861 096F 490000"                call    SCAN_KEY
   1862 0972 500000                 cmp     r0,#0
   1863 0975 D6F2                   br      eq,RestartMenuL1
   1864                 
   1865                             ; up arrow
   1866                 
   1867 0977 508300                 cmp     r0,#83h
   1868 097A DE0A                   br      nz,RestartMenu1
   1869 097C B1D4                   mov     r1,temp0
   1870 097E 0901                   dec     r1
   1871 0980 DDE5                   br      pl,RestartMenuL0
   1872 0982 C103                   mov     r1,#3
   1873 0984 D8E1                   br      RestartMenuL0
   1874 0986            RestartMenu1:
   1875                 
   1876                             ; down arrow
   1877                 
   1878 0986 508400                 cmp     r0,#84h
   1879 0989 DE0D                   br      nz,RestartMenu2
   1880 098B B1D4                   mov     r1,temp0
   1881 098D 0801                   inc     r1
   1882 098F 500401                 cmp     r1,#4
   1883 0992 DED3                   br      ne,RestartMenuL0
   1884 0994 0001                   clr     r1
   1885 0996 D8CF                   Br      RestartMenuL0
   1886 0998            RestartMenu2
   1887                 
   1888                             ; selection keys
   1889                 
   1890 0998 508B00                 cmp     r0,#8bh
   1891 099B D63B                   br      eq,RestartMenuDone
   1892 099D 508C00                 cmp     r0,#8ch
   1893 09A0 D636                   br      eq,RestartMenuDone
   1894 09A2 508D00                 cmp     r0,#8dh
   1895 09A5 D631                   br      eq,RestartMenuDone
   1896 09A7 508E00                 cmp     r0,#8eh



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   51


   1897 09AA D62C                   br      eq,RestartMenuDone
   1898                 
   1899                             ; touching first Menu Item
   1900                 
   1901 09AC 502B00                 cmp     r0,#3*13+4
   1902 09AF D7B8                   br      ult,RestartMenuL1
   1903 09B1 503200                 cmp     r0,#3*13+11
   1904 09B4 D734                   br      ult,RestartMenuDo0
   1905                 
   1906                             ; touching second Menu Item
   1907                 
   1908 09B6 503800                 cmp     r0,#4*13+4
   1909 09B9 D7AE                   br      ult,RestartMenuL1
   1910 09BB 503F00                 cmp     r0,#4*13+11
   1911 09BE D733                   br      ult,RestartMenuDo1
   1912                 
   1913                             ; touching third Menu Item
   1914                 
   1915 09C0 504500                 cmp     r0,#5*13+4
   1916 09C3 D7A4                   br      ult,RestartMenuL1
   1917 09C5 504C00                 cmp     r0,#5*13+11
   1918 09C8 D732                   br      ult,RestartMenuDo2
   1919                 
   1920                             ; touching fourth Menu Item
   1921                 
   1922 09CA 505200                 cmp     r0,#6*13+4
   1923 09CD D79A                   br      ult,RestartMenuL1
   1924 09CF 505900                 cmp     r0,#6*13+11
   1925 09D2 D731                   br      ult,RestartMenuDo3
   1926                 
   1927 09D4 B1D4                   mov     r1,temp0
   1928 09D6            RestartMenuL01:
   1929 09D6 D88F                   br      RestartMenuL0
   1930                 
   1931                             ; handle being done via button push
   1932                 
   1933 09D8            RestartMenuDone:
   1934 09D8 B1D4                   mov     r1,temp0
   1935 09DA 0801                   inc     r1
   1936 09DC 0901                   dec     r1
   1937 09DE D60A                   br      z,RestartMenuDo0
   1938 09E0 0901                   dec     r1
   1939 09E2 D60F                   br      z,RestartMenuDo1
   1940 09E4 0901                   dec     r1
   1941 09E6 D614                   br      z,RestartMenuDo2
   1942 09E8 D81B                   br      RestartMenuDo3
   1943                 
   1944                             ; Restart Game
   1945                 
   1946 09EA            RestartMenuDo0:
   1947 09EA C101                   mov     r1,#1
   1948 09EC B9D5                   mov     temp1,r1
   1949 09EE 490AAA'                call    WarnMenu
   1950 09F1 D812                   br      RestartMenuExit
   1951                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   52


   1952                             ; Main Menu
   1953                 
   1954 09F3            RestartMenuDo1:
   1955 09F3 C102                   mov     r1,#2
   1956 09F5 B9D5                   mov     temp1,r1
   1957 09F7 490AAA'                call    WarnMenu
   1958 09FA D809                   br      RestartMenuExit
   1959                 
   1960                             ; exit game
   1961                 
   1962 09FC            RestartMenuDo2:
   1963 09FC C103                   mov     r1,#3
   1964 09FE B9D5                   mov     temp1,r1
   1965 0A00 490AAA'                call    WarnMenu
   1966 0A03 D800                   br      RestartMenuExit
   1967                 
   1968                             ; Cancel
   1969                 
   1970 0A05            RestartMenuDo3:
   1971                 
   1972                             ; and bail out
   1973                 
   1974 0A05            RestartMenuExit:
   1975 0A05 0F3B                   pop     dmpl
   1976 0A07 F8                     ret
   1977                 
   1978                 ;============================================================================
   1979                 ;
   1980                 ;           Draw Restart Menu
   1981                 ;
   1982                 ;----------------------------------------------------------------------------
   1983                 
   1984 0A08            DrawRestart:
   1985                             ; draw the Restart frame
   1986                 
   1987 0A08 78040E                 movw    rr0,#4*256+14
   1988 0A0B 490C5F'                call    SmallFrame
   1989                 
   1990                             ; draw the cursor
   1991                 
   1992 0A0E 490A75'                call    DrawRestartCurs
   1993                 
   1994                             ; print the fixed text
   1995                 
   1996 0A11 780A65'                movw    rr0,#DrawRestart1
   1997 0A14 3B800368               movw    page_ptr1,rr0
   1998 0A18 490000"                call    print_string
   1999                 
   2000 0A1B 780A69'                movw    rr0,#DrawRestart2
   2001 0A1E 3B800368               movw    page_ptr1,rr0
   2002 0A22 490000"                call    print_string
   2003                 
   2004 0A25 780A6D'                movw    rr0,#DrawRestart3
   2005 0A28 3B800368               movw    page_ptr1,rr0
   2006 0A2C 490000"                call    print_string



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   53


   2007                 
   2008 0A2F 780A71'                movw    rr0,#DrawRestart4
   2009 0A32 3B800368               movw    page_ptr1,rr0
   2010 0A36 490000"                call    print_string
   2011                 
   2012                             ; show the page
   2013                 
   2014 0A39 490000"                call    Swap_page
   2015                 
   2016 0A3C F8                     ret
   2017                 
   2018 0A3D            DrawRestartT1:
   2019 0A3D 52657374               defm    'Restart Game'
        0A41 61727420
        0A45 47616D65
   2020 0A49 00                     defb    0
   2021                 
   2022 0A4A            DrawRestartT2:
   2023 0A4A 4D61696E               defm    'Main Menu'
        0A4E 204D656E
        0A52 75
   2024 0A53 00                     defb    0
   2025                 
   2026 0A54            DrawRestartT3:
   2027 0A54 45786974               defm    'Exit Game'
        0A58 2047616D
        0A5C 65
   2028 0A5D 00                     defb    0
   2029                 
   2030 0A5E            DrawRestartT4:
   2031 0A5E 43616E63               defm    'Cancel'
        0A62 656C
   2032 0A64 00                     defb    0
   2033                 
   2034 0A65            DrawRestart1:
   2035 0A65 3C34                   defb    60,52
   2036 0A67 0A3D'                  defw    DrawRestartT1
   2037                 
   2038 0A69            DrawRestart2:
   2039 0A69 3C44                   defb    60,68
   2040 0A6B 0A4A'                  defw    DrawRestartT2
   2041                 
   2042 0A6D            DrawRestart3:
   2043 0A6D 3C54                   defb    60,84
   2044 0A6F 0A54'                  defw    DrawRestartT3
   2045                 
   2046 0A71            DrawRestart4:
   2047 0A71 3C64                   defb    60,100
   2048 0A73 0A5E'                  defw    DrawRestartT4
   2049                 
   2050                 ;============================================================================
   2051                 ;
   2052                 ;           Draw Restart cursor
   2053                 ;
   2054                 ;----------------------------------------------------------------------------



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   54


   2055                 
   2056 0A75            DrawRestartCurs:
   2057                 
   2058                             ; initialize all initial Fi_graph values
   2059                 
   2060 0A75 582C08                 mov     r8,#44
   2061 0A78 B1D4                   mov     r1,temp0
   2062 0A7A 0000                   clr     r0
   2063 0A7C 7A0AA6'                movw    rr2,#DrawRestartCursTab
   2064 0A7F 610002                 addw    rr2,rr0
   2065 0A82 380A                   mov     r1,@rr2
   2066 0A84 B909                   mov     r9,r1
   2067 0A86 58F00A                 mov     r10,#240
   2068 0A89 58000B                 mov     r11,#0
   2069 0A8C 58100C                 mov     r12,#16
   2070 0A8F 58100D                 mov     r13,#16
   2071 0A92 58210E                 mov     r14,#bankno_front1
   2072                 
   2073                             ; composite is ok for background.
   2074                 
   2075 0A95 58010F                 mov     r15,#composite
   2076 0A98 500194                 cmp     cur_page,#1
   2077 0A9B D602                   br      eq,DrawRestartCurs21
   2078 0A9D A90F                   bset    r15,#1
   2079 0A9F            DrawRestartCurs21:
   2080                 
   2081                             ; do Fi_graph
   2082                 
   2083 0A9F 490C10'                call    FixCursor
   2084 0AA2 490000"                call    Fi_graph
   2085                 
   2086 0AA5 F8                     ret
   2087                 
   2088 0AA6            DrawRestartCursTab:
   2089 0AA6 30                     defb    48
   2090 0AA7 40                     defb    64
   2091 0AA8 50                     defb    80
   2092 0AA9 60                     defb    96
   2093                 
   2094                 ;============================================================================
   2095                 ;
   2096                 ;           Process Warn Menu
   2097                 ;
   2098                 ;----------------------------------------------------------------------------
   2099                 
   2100                 WarnMenu:   global  WarnMenu
   2101 0AAA 0E3B                   push    dmpl
   2102 0AAC 58E43B     	mov     dmpl,#0e4h
   2103 0AAF C0E4                   mov     r0,#0e4h
   2104 0AB1 B8EB                   mov     hold_byte1,r0
   2105                 
   2106                             ; set initial cursor position
   2107                 
   2108 0AB3 C1A0                   mov     r1,#160
   2109 0AB5 B9C1                   mov     CursorY,r1



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   55


   2110 0AB7 C101                   mov     r1,#1
   2111                 
   2112                             ; Loop until done
   2113                 
   2114 0AB9            WarnMenuL0:
   2115 0AB9 B9D4                   mov     temp0,r1
   2116 0ABB            WarnMenuL1:
   2117                 
   2118                             ; draw the menu
   2119                 
   2120 0ABB 490000"                call    delay20ms
   2121 0ABE 490B38'                call    DrawWarn
   2122                 
   2123                             ; loop immediately if no keypress
   2124                 
   2125 0AC1 490000"                call    SCAN_KEY
   2126 0AC4 500000                 cmp     r0,#0
   2127 0AC7 D6F2                   br      eq,WarnMenuL1
   2128                 
   2129                             ; up arrow
   2130                 
   2131 0AC9 508300                 cmp     r0,#83h
   2132 0ACC DE0A                   br      nz,WarnMenu1
   2133 0ACE B1D4                   mov     r1,temp0
   2134 0AD0 0901                   dec     r1
   2135 0AD2 DDE5                   br      pl,WarnMenuL0
   2136 0AD4 C101                   mov     r1,#1
   2137 0AD6 D8E1                   br      WarnMenuL0
   2138 0AD8            WarnMenu1:
   2139                 
   2140                             ; down arrow
   2141                 
   2142 0AD8 508400                 cmp     r0,#84h
   2143 0ADB DE0D                   br      nz,WarnMenu2
   2144 0ADD B1D4                   mov     r1,temp0
   2145 0ADF 0801                   inc     r1
   2146 0AE1 500201                 cmp     r1,#2
   2147 0AE4 DED3                   br      ne,WarnMenuL0
   2148 0AE6 0001                   clr     r1
   2149 0AE8 D8CF                   Br      WarnMenuL0
   2150 0AEA            WarnMenu2
   2151                 
   2152                             ; selection keys
   2153                 
   2154 0AEA 508B00                 cmp     r0,#8bh
   2155 0AED D627                   br      eq,WarnMenuDone
   2156 0AEF 508C00                 cmp     r0,#8ch
   2157 0AF2 D622                   br      eq,WarnMenuDone
   2158 0AF4 508D00                 cmp     r0,#8dh
   2159 0AF7 D61D                   br      eq,WarnMenuDone
   2160 0AF9 508E00                 cmp     r0,#8eh
   2161 0AFC D618                   br      eq,WarnMenuDone
   2162                 
   2163                             ; touching first Menu Item
   2164                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   56


   2165 0AFE 504500                 cmp     r0,#5*13+4
   2166 0B01 D7B8                   br      ult,WarnMenuL1
   2167 0B03 504C00                 cmp     r0,#5*13+11
   2168 0B06 D718                   br      ult,WarnMenuDo0
   2169                 
   2170                             ; touching second Menu Item
   2171                 
   2172 0B08 505200                 cmp     r0,#6*13+4
   2173 0B0B D7AE                   br      ult,WarnMenuL1
   2174 0B0D 505900                 cmp     r0,#6*13+11
   2175 0B10 D723                   br      ult,WarnMenuDo1
   2176                 
   2177 0B12 B1D4                   mov     r1,temp0
   2178 0B14            WarnMenuL01:
   2179 0B14 D8A3                   br      WarnMenuL0
   2180                 
   2181                             ; handle being done via button push
   2182                 
   2183 0B16            WarnMenuDone:
   2184 0B16 B1D4                   mov     r1,temp0
   2185 0B18 0801                   inc     r1
   2186 0B1A 0901                   dec     r1
   2187 0B1C D602                   br      z,WarnMenuDo0
   2188 0B1E D815                   br      WarnMenuDo1
   2189                 
   2190                             ; Warn Do It
   2191                 
   2192 0B20            WarnMenuDo0:
   2193 0B20 B1D5                   mov     r1,temp1
   2194 0B22 0901                   dec     r1
   2195 0B24 D606                   br      z,WarnMenuDo01
   2196 0B26 0901                   dec     r1
   2197 0B28 D605                   br      z,WarnMenuDo02
   2198 0B2A D806                   br      WarnMenuDo03
   2199                 
   2200 0B2C            WarnMenuDo01
   2201                 
   2202 0B2C 980000"                jmp     ResetGame
   2203                 
   2204 0B2F            WarnMenuDo02:
   2205 0B2F 980000"                jmp     FromMainMenu
   2206                 
   2207 0B32            WarnMenuDo03:
   2208 0B32 980000"                jmp     Game_Die
   2209                 
   2210                             ; Cancel
   2211                 
   2212 0B35            WarnMenuDo1:
   2213                 
   2214                             ; and bail out
   2215                 
   2216 0B35            WarnMenuExit:
   2217 0B35 0F3B                   pop     dmpl
   2218 0B37 F8                     ret
   2219                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   57


   2220                 ;============================================================================
   2221                 ;
   2222                 ;           Draw Warn Menu
   2223                 ;
   2224                 ;----------------------------------------------------------------------------
   2225                 
   2226 0B38            DrawWarn:
   2227                             ; draw the Warn frame
   2228                 
   2229 0B38 780410                 movw    rr0,#4*256+16
   2230 0B3B 490C5F'                call    SmallFrame
   2231                 
   2232                             ; draw the cursor
   2233                 
   2234 0B3E 490BDD'                call    DrawWarnCurs
   2235                 
   2236                             ; print the fixed text
   2237                 
   2238 0B41 780BC1'                movw    rr0,#DrawWarn1
   2239 0B44 3B800368               movw    page_ptr1,rr0
   2240 0B48 490000"                call    print_string
   2241                 
   2242 0B4B 780BC5'                movw    rr0,#DrawWarn2
   2243 0B4E 3B800368               movw    page_ptr1,rr0
   2244 0B52 490000"                call    print_string
   2245                 
   2246 0B55 780BC9'                movw    rr0,#DrawWarn3
   2247 0B58 3B800368               movw    page_ptr1,rr0
   2248 0B5C 490000"                call    print_string
   2249                 
   2250 0B5F 780BCD'                movw    rr0,#DrawWarn41
   2251 0B62 B2D5                   mov     r2,temp1
   2252 0B64 0902                   dec     r2
   2253 0B66 D60A                   br      z,DrawWarnw
   2254 0B68 780BD1'                movw    rr0,#DrawWarn42
   2255 0B6B 0902                   dec     r2
   2256 0B6D D603                   br      z,DrawWarnw
   2257 0B6F 780BD5'                movw    rr0,#DrawWarn43
   2258                 
   2259 0B72            DrawWarnw:
   2260 0B72 3B800368               movw    page_ptr1,rr0
   2261 0B76 490000"                call    print_string
   2262                 
   2263 0B79 780BD9'                movw    rr0,#DrawWarn5
   2264 0B7C 3B800368               movw    page_ptr1,rr0
   2265 0B80 490000"                call    print_string
   2266                 
   2267                             ; show the page
   2268                 
   2269 0B83 490000"                call    Swap_page
   2270                 
   2271 0B86 F8                     ret
   2272                 
   2273 0B87            DrawWarnT1:
   2274 0B87 41726520               defm    'Are You Sure?'



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   58


        0B8B 596F7520
        0B8F 53757265
        0B93 3F
   2275 0B94 00                     defb    0
   2276                 
   2277 0B95            DrawWarnT2:
   2278 0B95 54686520               defm    'The Top Choice'
        0B99 546F7020
        0B9D 43686F69
        0BA1 6365
   2279 0BA3 00                     defb    0
   2280                 
   2281 0BA4            DrawWarnT3:
   2282 0BA4 57696C6C               defm    'Will Kill Game'
        0BA8 204B696C
        0BAC 6C204761
        0BB0 6D65
   2283 0BB2 00                     defb    0
   2284                 
   2285 0BB3            DrawWarnT5:
   2286 0BB3 436F6E74               defm    'Continue Game'
        0BB7 696E7565
        0BBB 2047616D
        0BBF 65
   2287 0BC0 00                     defb    0
   2288                 
   2289 0BC1            DrawWarn1:
   2290 0BC1 2C34                   defb    44,52
   2291 0BC3 0B87'                  defw    DrawWarnT1
   2292                 
   2293 0BC5            DrawWarn2:
   2294 0BC5 2C3C                   defb    44,60
   2295 0BC7 0B95'                  defw    DrawWarnT2
   2296                 
   2297 0BC9            DrawWarn3:
   2298 0BC9 2C44                   defb    44,68
   2299 0BCB 0BA4'                  defw    DrawWarnT3
   2300                 
   2301 0BCD            DrawWarn41:
   2302 0BCD 3454                   defb    52,84
   2303 0BCF 0A3D'                  defw    DrawRestartT1
   2304 0BD1            DrawWarn42:
   2305 0BD1 3454                   defb    52,84
   2306 0BD3 0A4A'                  defw    DrawRestartT2
   2307 0BD5            DrawWarn43:
   2308 0BD5 3454                   defb    52,84
   2309 0BD7 0A54'                  defw    DrawRestartT3
   2310                 
   2311 0BD9            DrawWarn5:
   2312 0BD9 3464                   defb    52,100
   2313 0BDB 0BB3'                  defw    DrawWarnT5
   2314                 
   2315                 ;============================================================================
   2316                 ;
   2317                 ;           Draw Warn cursor



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   59


   2318                 ;
   2319                 ;----------------------------------------------------------------------------
   2320                 
   2321 0BDD            DrawWarnCurs:
   2322                 
   2323                             ; initialize all initial Fi_graph values
   2324                 
   2325 0BDD 582408                 mov     r8,#36
   2326 0BE0 B1D4                   mov     r1,temp0
   2327 0BE2 0000                   clr     r0
   2328 0BE4 7A0C0E'                movw    rr2,#DrawWarnCursTab
   2329 0BE7 610002                 addw    rr2,rr0
   2330 0BEA 380A                   mov     r1,@rr2
   2331 0BEC B909                   mov     r9,r1
   2332 0BEE 58F00A                 mov     r10,#240
   2333 0BF1 58000B                 mov     r11,#0
   2334 0BF4 58100C                 mov     r12,#16
   2335 0BF7 58100D                 mov     r13,#16
   2336 0BFA 58210E                 mov     r14,#bankno_front1
   2337                 
   2338                             ; composite is ok for background.
   2339                 
   2340 0BFD 58010F                 mov     r15,#composite
   2341 0C00 500194                 cmp     cur_page,#1
   2342 0C03 D602                   br      eq,DrawWarnCurs21
   2343 0C05 A90F                   bset    r15,#1
   2344 0C07            DrawWarnCurs21:
   2345                 
   2346                             ; do Fi_graph
   2347                 
   2348 0C07 490C10'                call    FixCursor
   2349 0C0A 490000"                call    Fi_graph
   2350                 
   2351 0C0D F8                     ret
   2352                 
   2353 0C0E            DrawWarnCursTab:
   2354 0C0E 50                     defb    80
   2355 0C0F 60                     defb    96
   2356                 
   2357                 ;============================================================================
   2358                 ;
   2359                 ;           Make Cursor move through space
   2360                 ;
   2361                 ;----------------------------------------------------------------------------
   2362                 
   2363 0C10            FixCursor:
   2364 0C10 B1C1                   mov     r1,CursorY
   2365 0C12 50A001                 cmp     r1,#160
   2366 0C15 D641                   br      eq,FixCursorInit
   2367                 
   2368 0C17 400109                 cmp     r9,r1
   2369 0C1A D61A                   br      eq,FixCursorX
   2370 0C1C D70D                   br      ult,FixCursorUp
   2371                 
   2372                             ; move cursor down



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   60


   2373                 
   2374 0C1E 58D00A                 mov     r10,#208
   2375 0C21 0801                   inc     r1
   2376 0C23 0801                   inc     r1
   2377 0C25 B909                   mov     r9,r1
   2378 0C27 B9C1                   mov     CursorY,r1
   2379 0C29 D80B                   br      FixCursorX
   2380                 
   2381                             ; move cursor up
   2382                 
   2383 0C2B            FixCursorUp:
   2384 0C2B 58D00A                 mov     r10,#208
   2385 0C2E 0901                   dec     r1
   2386 0C30 0901                   dec     r1
   2387 0C32 B909                   mov     r9,r1
   2388 0C34 B9C1                   mov     CursorY,r1
   2389                 
   2390                             ; test x position of cursor
   2391                 
   2392 0C36            FixCursorX:
   2393 0C36 B1C0                   mov     r1,CursorX
   2394 0C38 400108                 cmp     r8,r1
   2395 0C3B D61A                   br      eq,FixCursorExit
   2396 0C3D D70D                   br      ult,FixCursorLeft
   2397                 
   2398                             ; move cursor right
   2399                 
   2400 0C3F 58D00A                 mov     r10,#208
   2401 0C42 0801                   inc     r1
   2402 0C44 0801                   inc     r1
   2403 0C46 B908                   mov     r8,r1
   2404 0C48 B9C0                   mov     CursorX,r1
   2405 0C4A D80B                   br      FixCursorExit
   2406                 
   2407                             ; move cursor left
   2408                 
   2409 0C4C            FixCursorLeft:
   2410 0C4C 58D00A                 mov     r10,#208
   2411 0C4F 0901                   dec     r1
   2412 0C51 0901                   dec     r1
   2413 0C53 B908                   mov     r8,r1
   2414 0C55 B9C1                   mov     CursorY,r1
   2415                 
   2416                             ; bail
   2417                 
   2418 0C57            FixCursorExit:
   2419 0C57 F8                     ret
   2420                 
   2421 0C58            FixCursorInit:
   2422 0C58 4808C0                 mov     CursorX,r8
   2423 0C5B 4809C1                 mov     CursorY,r9
   2424 0C5E F8                     ret
   2425                 
   2426                 ;============================================================================
   2427                 ;



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   61


   2428                 ;           Draw a Small Frame
   2429                 ;
   2430                 ;----------------------------------------------------------------------------
   2431                 
   2432 0C5F            SmallFrame:
   2433                 
   2434 0C5F 1E00                   pushw   rr0
   2435                 
   2436                             ; set up destination as top band
   2437                 
   2438 0C61 0B01                   sll     r1
   2439 0C63 0B01                   sll     r1
   2440 0C65 585808                 mov     r8,#100-12
   2441 0C68 420108                 sub     r8,r1
   2442                 
   2443 0C6B 584009                 mov     r9,#80-16
   2444 0C6E 2F0001                 btst    r0,#1
   2445 0C71 DE03                   br      nz,SmallFrame4
   2446 0C73 584809                 mov     r9,#80-8
   2447 0C76            SmallFrame4
   2448 0C76 0B00                   sll     r0
   2449 0C78 0B00                   sll     r0
   2450 0C7A 0B00                   sll     r0
   2451 0C7C 420009                 sub     r9,r0
   2452                 
   2453 0C7F 58040A                 mov     r10,#4
   2454 0C82 58140B                 mov     r11,#20
   2455                 
   2456 0C85 0B01                   sll     r1
   2457 0C87 58100C                 mov     r12,#16
   2458 0C8A 41010C                 add     r12,r1
   2459                 
   2460 0C8D 58080D                 mov     r13,#8
   2461                 
   2462 0C90 58210E                 mov     r14,#bankno_front1
   2463                 
   2464 0C93 58000F                 mov     r15,#override
   2465 0C96 500194                 cmp     cur_page,#1
   2466 0C99 D602                   br      eq,SmallFrame3
   2467 0C9B A90F                   bset    r15,#1
   2468 0C9D            SmallFrame3
   2469                 
   2470                             ; draw top frame
   2471                 
   2472 0C9D 490CB1'                call    SmallFrame2
   2473                 
   2474                             ; draw middle frames
   2475                 
   2476 0CA0 581C0B                 mov     r11,#28
   2477 0CA3 1F00                   popw    rr0
   2478 0CA5 0B00                   sll     r0
   2479 0CA7            SmallFrameL1:
   2480 0CA7 490CB1'                call    SmallFrame2
   2481 0CAA 0900                   dec     r0
   2482 0CAC DEF9                   br      nz,SmallFrameL1



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   62


   2483                 
   2484                             ; draw bottom frame
   2485                 
   2486 0CAE 58530B                 mov     r11,#83
   2487                 
   2488                             ; subroutine to draw a band
   2489                 
   2490 0CB1            SmallFrame2:
   2491                 
   2492 0CB1 1E00                   pushw   rr0
   2493 0CB3 1E08                   pushw   rr8
   2494 0CB5 1E0A                   pushw   rr10
   2495 0CB7 1E0C                   pushw   rr12
   2496 0CB9 1E0E                   pushw   rr14
   2497                 
   2498                             ; do Fi_graph
   2499                 
   2500 0CBB 490000"                call    Fi_graph
   2501                 
   2502 0CBE 1F0E                   popw    rr14
   2503 0CC0 1F0C                   popw    rr12
   2504 0CC2 1F0A                   popw    rr10
   2505 0CC4 1F08                   popw    rr8
   2506 0CC6 1E08                   pushw   rr8
   2507 0CC8 1E0A                   pushw   rr10
   2508 0CCA 1E0C                   pushw   rr12
   2509 0CCC 1E0E                   pushw   rr14
   2510                 
   2511 0CCE 410C08                 add     r8,r12
   2512 0CD1 58BC0A                 mov     r10,#188
   2513 0CD4 58080C                 mov     r12,#8
   2514                 
   2515 0CD7 490000"                call    Fi_graph
   2516                 
   2517                             ; move destination y value down a band and loop
   2518                 
   2519 0CDA 1F0E                   popw    rr14
   2520 0CDC 1F0C                   popw    rr12
   2521 0CDE 1F0A                   popw    rr10
   2522 0CE0 1F08                   popw    rr8
   2523 0CE2 1F00                   popw    rr0
   2524                 
   2525 0CE4 510809                 add     r9,#8
   2526                 
   2527 0CE7 F8                     ret
   2528                 
   2529                 ;============================================================================
   2530                 ;
   2531                 ;           Left Over Stuff
   2532                 ;
   2533                 ;----------------------------------------------------------------------------
   2534                 
   2535                 ;ASB            clr     r0
   2536                 ;ASB            mov     oquit_flag,r0
   2537                 ;ASB



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   63


   2538                 ;ASBmainOPT_loop:
   2539                 ;ASB	call    Mode_SEL
   2540                 ;ASB
   2541                 ;ASB	mov     r0,VSM_ram
   2542                 ;ASB	bbc     r0,#7,stopQ
   2543                 ;ASB	call    Swap_page
   2544                 ;ASB	mov     r0,VSM_ram
   2545                 ;ASB	bclr    r0,#7
   2546                 ;ASB	mov     VSM_ram,r0
   2547                 ;ASB
   2548                 ;ASBstopQ:  mov     r0,oquit_flag
   2549                 ;ASB        or      r0,r0
   2550                 ;ASB        br      z,mainOPT_loop
   2551                 ;ASB
   2552                 ;ASB        ret
   2553                 ;ASB
   2554                 ;ASB
   2555                 ;ASB
   2556                 ;ASB
   2557                 ;ASB
   2558                 ;ASB
   2559                 ;ASBMode_SEL:
   2560                 ;ASB	call    GetUser
   2561                 ;ASB	cmp     r0,#0
   2562                 ;ASB	br      ne,Mode_SEL_A
   2563                 ;ASB
   2564                 ;ASB	call    set_no_key
   2565                 ;ASB        br      take_end
   2566                 ;ASB
   2567                 ;ASBMode_SEL_A:
   2568                 ;ASB	call    do_menu_key
   2569                 ;ASB
   2570                 ;ASB	call    Black_back
   2571                 ;ASB        movw    rr2,pres_menu_desc
   2572                 ;ASB        mov     r0,menu_selection
   2573                 ;ASB        call    display_menu
   2574                 ;ASB
   2575                 ;ASB	clr     r0
   2576                 ;ASB	mov     OPT_ramA,r0             ;Reset the Option Select
   2577                 ;ASB
   2578                 ;ASB	call    set_2page
   2579                 ;ASB
   2580                 ;ASBtake_end:
   2581                 ;ASB	ret
   2582                 ;ASB
   2583                 ;ASB
   2584                 ;ASB
   2585                 ;ASBset_no_key:
   2586                 ;ASB	mov     r0,control_ram
   2587                 ;ASB	bset    r0,#4
   2588                 ;ASB	mov     control_ram,r0
   2589                 ;ASB	clr     r0
   2590                 ;ASB	ret
   2591                 ;ASB
   2592                 ;ASBset_2page: global set_2page



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   64


   2593                 ;ASB	mov     r0,VSM_ram
   2594                 ;ASB	bset    r0,#7
   2595                 ;ASB	mov     VSM_ram,r0
   2596                 ;ASB	ret
   2597                 ;ASB
   2598                 ;ASBreset_2page:
   2599                 ;ASB	mov     r0,VSM_ram
   2600                 ;ASB	bclr    r0,#7
   2601                 ;ASB	mov     VSM_ram,r0
   2602                 ;ASB	ret
   2603                 ;ASB
   2604                 ;ASB
   2605                 ;ASB
   2606                 ;ASB
   2607                 ;ASB;*************DISPLAY WORD CALL ROUTINE***************************
   2608                 ;ASB;DIS_word       - input         r8 : x coordinate
   2609                 ;ASB;                               r9 : y coordinate
   2610                 ;ASB;                              rr6 : word by dm forms
   2611                 ;ASB
   2612                 ;ASBDIS_word: global  DIS_word                              ;display the words routine
   2613                 ;ASB	movw    wordram,rr6
   2614                 ;ASBDIS_word1:
   2615                 ;ASB	movw    rr6,wordram
   2616                 ;ASB	mov     r1,(rr6)+
   2617                 ;ASB
   2618                 ;ASB	cmp     r1,#0
   2619                 ;ASB	br      eq,dis_end
   2620                 ;ASB
   2621                 ;ASB	movw    wordram,rr6
   2622                 ;ASB
   2623                 ;ASB	cmp     r1,#20h
   2624                 ;ASB	br      eq,make_space
   2625                 ;ASB	cmp     r1,#5bh                 ;use the first ASCII to set [ = FB
   2626                 ;ASB	br      eq,set_FB
   2627                 ;ASB	cmp     r1,#5dh                 ;use the first ASCII to set ] = FC
   2628                 ;ASB	br      eq,set_FC
   2629                 ;ASB
   2630                 ;ASB	pushw   rr8
   2631                 ;ASB	call    Find_letter
   2632                 ;ASB	popw    rr8
   2633                 ;ASB	add     r8,r12
   2634                 ;ASB	add     r8,#1
   2635                 ;ASB	br      DIS_word1
   2636                 ;ASB
   2637                 ;ASBdis_end:
   2638                 ;ASB	mov     r2,graph_flag
   2639                 ;ASB	bclr    r2,#6
   2640                 ;ASB	bclr    r2,#7
   2641                 ;ASB	mov     graph_flag,r2
   2642                 ;ASB	ret
   2643                 ;ASB
   2644                 ;ASBmake_space:
   2645                 ;ASB	add     r8,#6
   2646                 ;ASB	br      DIS_word1
   2647                 ;ASB



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   65


   2648                 ;ASBset_FB: mov     r2,graph_flag
   2649                 ;ASB	bset    r2,#6
   2650                 ;ASB	mov     graph_flag,r2
   2651                 ;ASB	br      DIS_word1
   2652                 ;ASB
   2653                 ;ASBset_FC: mov     r2,graph_flag
   2654                 ;ASB	bset    r2,#7
   2655                 ;ASB	mov     graph_flag,r2
   2656                 ;ASB	br      DIS_word1
   2657                 ;ASB
   2658                 ;ASBFind_letter:                            ;write develop (28/11/1997)
   2659                 ;ASB	cmp     r1,#39h
   2660                 ;ASB	br      ule,BLKA_NUM1
   2661                 ;ASB	cmp     r1,#5ah
   2662                 ;ASB	br      ule,BLKA_BMP1
   2663                 ;ASB	cmp     r1,#7ah
   2664                 ;ASB	br      ule,BLKB_BMP1
   2665                 ;ASB
   2666                 ;ASBBLKA_BMP1:
   2667                 ;ASB	movw    rr6,#BLKA_BMP
   2668                 ;ASBBLKA_BMP2:
   2669                 ;ASB	mov     r0,(rr6)+
   2670                 ;ASB	movw    rr4,(rr6)+
   2671                 ;ASB	cmp     r0,r1
   2672                 ;ASB	br      ne,BLKA_BMP2
   2673                 ;ASBBLK_BMP3:
   2674                 ;ASB	movw    rr0,rr4
   2675                 ;ASB	call    graph1
   2676                 ;ASB	mov     r15,#3
   2677                 ;ASB	bbc     cur_page,#0,BLK_BMP31
   2678                 ;ASB	mov     r15,#1
   2679                 ;ASBBLK_BMP31:
   2680                 ;ASB	mov     r0,graph_flag
   2681                 ;ASB	bbs     r0,#0,BLKA_BMP4
   2682                 ;ASB	bbs     r0,#1,BLKA_BMP5         ;3/2/1998 (for stage cheat code)
   2683                 ;ASBBLKA_BMP3A:
   2684                 ;ASB	call    Fi_graphx
   2685                 ;ASB	ret
   2686                 ;ASB
   2687                 ;ASBBLKA_BMP4:
   2688                 ;ASB	inc     r14
   2689                 ;ASB	call    Fi_graph5
   2690                 ;ASB	ret
   2691                 ;ASB
   2692                 ;ASBBLKA_BMP5:
   2693                 ;ASB;        bbc     cur_page,#0,BLKA_BMP5b
   2694                 ;ASB;        bclr    r15,#1
   2695                 ;ASBBLKA_BMP5b:
   2696                 ;ASB	mov     r0,ram_BG
   2697                 ;ASB	cmp     r0,#18
   2698                 ;ASB	br      eq,BLKA_BMP3A
   2699                 ;ASB	inc     r14
   2700                 ;ASB	call    Fi_graph
   2701                 ;ASB	ret
   2702                 ;ASB



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   66


   2703                 ;ASB
   2704                 ;ASBBLKB_BMP1:
   2705                 ;ASB	movw    rr6,#BLKB_BMP
   2706                 ;ASB	call    BLKA_BMP2
   2707                 ;ASB	ret
   2708                 ;ASB
   2709                 ;ASBBLKA_NUM1:
   2710                 ;ASB	movw    rr6,#BLKA_NUM
   2711                 ;ASBBLKA_NUM2
   2712                 ;ASB	mov     r0,(rr6)+
   2713                 ;ASB	cmp     r0,r1
   2714                 ;ASB	br      ne,BLKA_NUM3
   2715                 ;ASB	mov     r2,graph_flag
   2716                 ;ASB	bbs     r2,#6,pt_FB
   2717                 ;ASB	bbs     r2,#7,pt_FC
   2718                 ;ASB	br      pt_FA
   2719                 ;ASB
   2720                 ;ASBBLKA_NUM3:
   2721                 ;ASB	addw    rr6,#6
   2722                 ;ASB	br      BLKA_NUM2
   2723                 ;ASB
   2724                 ;ASBpt_FA:  movw    rr4,(rr6)+
   2725                 ;ASB	call    BLK_BMP3
   2726                 ;ASB	ret
   2727                 ;ASB
   2728                 ;ASBpt_FB:  addw    rr6,#2
   2729                 ;ASB	call    pt_FA
   2730                 ;ASB	ret
   2731                 ;ASB
   2732                 ;ASBpt_FC:  addw    rr6,#4
   2733                 ;ASB	call    pt_FA
   2734                 ;ASB	ret
   2735                 
   2736                 ;;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   2737                 
   2738                 ;*********************Change bitmap's color************************
   2739                 
   2740 0CE8            Fi_graph3:                              ;Change the 'grey 2' color to 'white'
   2741                 ;ASB	bclr    dmpl,#5
   2742                 ;ASB	call    Fi_graph
   2743                 ;ASB	bset    dmpl,#5
   2744 0CE8 F8         	ret
   2745                 
   2746 0CE9            Fi_graph4:                              ;Change the 'white' color to 'grey 2'
   2747                 ;ASB	bset    dmpl,#1
   2748                 ;ASB	call    Fi_graph
   2749                 ;ASB	bclr    dmpl,#1
   2750 0CE9 F8         	ret
   2751                 
   2752 0CEA            Fi_graph5:                              ;Change the 'black' color to 'grey 1'
   2753                 ;ASB	bclr    dmpl,#6                 ;change on 1/12/1997 (#7)**
   2754                 ;ASB	call    Fi_graph                ;change on 23/1/1998 (#6)
   2755                 ;ASB	bset    dmpl,#6
   2756 0CEA F8         	ret
   2757                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   67


   2758                 ;********************************************************;
   2759                 ;Fi_graph5:                              ;Change the 'black' color to 'grey 1'
   2760                 ;        bclr    dmpl,#7                 ;change on 1/12/1997 (#7)**
   2761                 ;        call    Fi_graph                ;change on 23/1/1998 (#6)
   2762                 ;        bset    dmpl,#7
   2763                 ;        ret
   2764                 
   2765 0CEB 490CF7'    graphT: call    graph1
   2766                 ;ASB	call    takeA
   2767 0CEE F8         	ret
   2768                 
   2769 0CEF 58010F     takeA:  mov     r15,#1
   2770                 ;ASB	call    Fi_graph
   2771 0CF2 F8         	ret
   2772                 
   2773 0CF3 58020F     takeB1: mov     r15,#2
   2774                 ;ASB	call    Fi_graph
   2775 0CF6 F8         	ret
   2776                 
   2777                 
   2778 0CF7 3A68       graph1: movw    rr12,(rr0)+
   2779                 ;ASB	movw    rr10,(rr0)+
   2780                 ;ASB	movw    rr14,@rr0
   2781 0CF9 F8         	ret
   2782                 
   2783 0CFA            takeABx:
   2784                 ;ASB	mov     r15,#3
   2785                 ;ASB	bbc     cur_page,#0,takeABy
   2786                 ;ASB	mov     r15,#1
   2787 0CFA            takeABy:
   2788                 ;ASB	call    Fi_graphx
   2789 0CFA F8         	ret
   2790                 
   2791 0CFB            takeAB0:
   2792                 ;ASB	mov     r15,#2
   2793                 ;ASB	bbc     cur_page,#0,takeAB1
   2794 0CFB            takeA1:
   2795                 ;ASB	clr     r15
   2796 0CFB            takeAB1:
   2797                 ;ASB	call    Fi_graph
   2798 0CFB F8         	ret
   2799                 
   2800                 
   2801 0CFC            Black_back:                             ;black background
   2802                 ;ASB;        call    clear_B
   2803                 ;ASB	movw    rr8,#0
   2804                 ;ASB	mov     r10,#200
   2805                 ;ASB	mov     r11,#160
   2806                 ;ASB	mov     r12,#13h
   2807                 ;ASB	bbc     cur_page,#0,blackB
   2808                 ;ASB	mov     r12,#3
   2809                 ;ASBblackB:
   2810                 ;ASB	call    Fill_blk_colr
   2811 0CFC F8         	ret
   2812                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   68


   2813 0CFD            White_back:                             ;black background
   2814                 ;ASB;        call    clear_B
   2815                 ;ASB	movw    rr8,#0
   2816                 ;ASB	mov     r10,#200
   2817                 ;ASB	mov     r11,#160
   2818                 ;ASB	mov     r12,#10h
   2819                 ;ASB	bbc     cur_page,#0,whiteb_cont
   2820                 ;ASB	mov     r12,#0
   2821                 ;ASBwhiteb_cont:
   2822                 ;ASB	call    Fill_blk_colr
   2823 0CFD F8         	ret
   2824                 
   2825                 
   2826 0CFE            ply1_life:
   2827 0CFE            ply2_life:
   2828 0CFE            ply1_life1:
   2829 0CFE            ply2_life1:
   2830 0CFE            hidden_casex:
   2831 0CFE            show_1P:
   2832 0CFE            show_2P:
   2833 0CFE            show_1pa:
   2834 0CFE            show_CPU:
   2835 0CFE            Bexit:                                  ;display - PRESS B TO EXIT
   2836 0CFE            Boption:                                ;display - PRESS B TO EXIT
   2837 0CFE            SEL_fighter:
   2838 0CFE            show_RESULT:
   2839 0CFE F8         	ret
   2840                 
   2841                 
   2842                 
   2843 0CFF            white_lineA:                             ;White line (28/11/1997)
   2844                 ;ASB	mov     r8,#0
   2845                 ;ASB	mov     r9,#22
   2846                 ;ASB	mov     r10,#200
   2847                 ;ASB	mov     r11,#0
   2848                 ;ASB	mov     r12,#2
   2849                 ;ASB	mov     r13,#1
   2850                 ;ASB	bbc     cur_page,#0,whiteB
   2851                 ;ASB	clr     r13
   2852                 ;ASBwhiteB:
   2853                 ;ASB	call    Draw_line_h
   2854                 ;ASBstop02:
   2855 0CFF F8         	ret
   2856                 
   2857                 
   2858 0D00            select_record:                          ;9/3/1998
   2859 0D00            DISPLAY_stage:
   2860 0D00 F8         	ret
   2861                 
   2862                 
   2863 0D01            HIDDEN_FIG:
   2864 0D01            hidden_case2x:
   2865 0D01 F8         	ret
   2866                 
   2867                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   69


   2868                 
   2869                 
   2870                 
   2871 0D02 500194     CK_page:cmp     cur_page,#1
   2872 0D05 D602       	br      eq,stop1Z
   2873 0D07 A90F       	bset    r15,#1
   2874 0D09            stop1Z:
   2875 0D09 F8         	ret
   2876                 
   2877                 
   2878                 
   2879 0D0A            f_back2main4:
   2880                 ;ASB	movw    rr2,#MAIN_MENU_DESC
   2881                 ;ASB	movw    pres_menu_desc,rr2
   2882                 ;ASB	mov     r2,#4
   2883                 ;ASB	mov     menu_selection,r2
   2884 0D0A F8         	ret
   2885                 
   2886 0D0B            f_back2main5:
   2887                 ;ASB	movw    rr2,#MAIN_MENU_DESC
   2888                 ;ASB	movw    pres_menu_desc,rr2
   2889                 ;ASB	mov     r2,#5
   2890                 ;ASB	mov     menu_selection,r2
   2891 0D0B F8         	ret
   2892                 
   2893 0D0C            f_back2main6:
   2894                 ;ASB	movw    rr2,#MAIN_MENU_DESC
   2895                 ;ASB	movw    pres_menu_desc,rr2
   2896                 ;ASB	mov     r2,#6
   2897                 ;ASB	mov     menu_selection,r2
   2898 0D0C F8         	ret
   2899                 
   2900                 
   2901 0D0D            f_down2options:
   2902                 ;ASB	movw    rr2,#OPTION_MENU_DESC
   2903                 ;ASB	movw    pres_menu_desc,rr2
   2904                 ;ASB	clr     r2
   2905                 ;ASB	mov     menu_selection,r2
   2906 0D0D F8         	ret
   2907                 
   2908 0D0E            f_down2rules:
   2909                 ;ASB	movw    rr2,#RULES_MENU_DESC
   2910                 ;ASB	movw    pres_menu_desc,rr2
   2911                 ;ASB	clr     r2
   2912                 ;ASB	mov     menu_selection,r2
   2913 0D0E F8         	ret
   2914                 
   2915 0D0F            f_down2roster:
   2916                 ;ASB	movw    rr2,#ROSTER_MENU_DESC
   2917                 ;ASB	movw    pres_menu_desc,rr2
   2918                 ;ASB	clr     r2
   2919                 ;ASB	mov     menu_selection,r2
   2920 0D0F F8         	ret
   2921                 
   2922 0D10            f_down2trade:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   70


   2923                 ;ASB	movw    rr2,#TRADE_MENU_DESC
   2924                 ;ASB	movw    pres_menu_desc,rr2
   2925                 ;ASB	clr     r2
   2926                 ;ASB	mov     menu_selection,r2
   2927                 ;ASB	mov     trade_index0,r2
   2928                 ;ASB	mov     trade_index1,r2
   2929                 ;ASB	mov     trade_index2,r2
   2930                 ;ASB        mov     trade_base,r2
   2931                 ;ASB        clr     r3
   2932                 ;ASB        movw    trading_slot,rr2
   2933 0D10 F8         	ret
   2934                 
   2935                 
   2936 0D11            f_down2reorder:
   2937                 ;ASB	movw    rr2,#REORDER_MENU_DESC
   2938                 ;ASB	movw    pres_menu_desc,rr2
   2939                 ;ASB	clr     r2
   2940                 ;ASB	mov     menu_selection,r2
   2941                 ;ASB	mov     trade_index0,r2
   2942                 ;ASB	mov     trade_index1,r2
   2943                 ;ASB	mov     trade_index2,r2
   2944                 ;ASB        mov     trade_base,r2
   2945                 ;ASB        clr     r3
   2946                 ;ASB        movw    trading_slot,rr2
   2947 0D11 F8         	ret
   2948                 
   2949 0D12            f_down2create:
   2950                 ;ASB        movw    rr0,#0
   2951                 ;ASB        call    get_player_info
   2952                 ;ASB	movw    rr2,#CREATE1_MENU_DESC
   2953                 ;ASB	movw    pres_menu_desc,rr2
   2954                 ;ASB	clr     r2
   2955                 ;ASB	mov     menu_selection,r2
   2956 0D12 F8         	ret
   2957                 
   2958 0D13            f_down2delete:
   2959                 ;ASB	movw    rr2,#DELETE_MENU_DESC
   2960                 ;ASB	movw    pres_menu_desc,rr2
   2961                 ;ASB	clr     r2
   2962                 ;ASB	mov     menu_selection,r2
   2963 0D13 F8         	ret
   2964                 
   2965 0D14            f_back2roster0:
   2966                 ;ASB	clr     r2
   2967                 ;ASB        br      back2roster_all
   2968 0D14            f_back2roster1:
   2969                 ;ASB	mov     r2,#01
   2970                 ;ASB        br      back2roster_all
   2971 0D14            f_back2roster2:
   2972                 ;ASB	mov     r2,#02
   2973                 ;ASB        br      back2roster_all
   2974 0D14            f_back2roster3:
   2975                 ;ASB        mov     r2,#03
   2976                 ;ASB        br      back2roster_all
   2977 0D14            f_back2roster4:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   71


   2978                 ;ASB        mov     r2,#04
   2979                 
   2980 0D14            back2roster_all:
   2981                 ;ASB        mov     menu_selection,r2
   2982                 ;ASB	movw    rr2,#ROSTER_MENU_DESC
   2983                 ;ASB	movw    pres_menu_desc,rr2
   2984 0D14 F8         	ret
   2985                 
   2986                 
   2987 0D15            f_null_function:
   2988 0D15 F8         	ret
   2989                 
   2990                 
   2991 0D16            f_dec_select:
   2992                 ;ASB	movw    rr2,pres_menu_desc
   2993                 ;ASB	addw    rr2,#4
   2994                 ;ASB	mov     r1,@rr2
   2995                 ;ASB	dec     r1
   2996                 ;ASB	mov     r0,menu_selection
   2997                 ;ASB	cmp     r0,#0
   2998                 ;ASB	br      eq,f_dec_cont0
   2999                 ;ASB	dec     r0
   3000                 ;ASB	br      f_dec_cont1
   3001                 ;ASBf_dec_cont0:
   3002                 ;ASB	mov     r0,r1
   3003                 ;ASBf_dec_cont1:
   3004                 ;ASB	mov     menu_selection,r0
   3005 0D16 F8         	ret
   3006                 
   3007 0D17            f_inc_select:
   3008                 ;ASB	movw    rr2,pres_menu_desc
   3009                 ;ASB	addw    rr2,#4
   3010                 ;ASB	mov     r1,@rr2
   3011                 ;ASB	dec     r1
   3012                 ;ASB	mov     r0,menu_selection
   3013                 ;ASB	cmp     r0,r1
   3014                 ;ASB	br      uge,f_inc_cont0
   3015                 ;ASB	inc     r0
   3016                 ;ASB	br      f_inc_cont1
   3017                 ;ASBf_inc_cont0:
   3018                 ;ASB	mov     r0,#0
   3019                 ;ASBf_inc_cont1:
   3020                 ;ASB	mov     menu_selection,r0
   3021 0D17 F8         	ret
   3022                 
   3023                 
   3024 0D18            f_dec_value:
   3025                 ;ASB	movw    rr2,pres_menu_desc
   3026                 ;ASB	addw    rr2,#7
   3027                 ;ASB	mov     r1,menu_selection
   3028                 ;ASB	clr     r0
   3029                 ;ASB	sll     r1
   3030                 ;ASB	addw    rr2,rr0
   3031                 ;ASB	movw    rr2,@rr2
   3032                 ;ASB



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   72


   3033                 ;ASB	mov     r0,(rr2)+ ;option count
   3034                 ;ASB	dec     r0
   3035                 ;ASB	movw    rr4,@rr2  ;ram value
   3036                 ;ASB	mov     r1,@rr4
   3037                 ;ASB	cmp     r1,#0
   3038                 ;ASB	br      ne,fdecv_cont0
   3039                 ;ASB	mov     r1,r0
   3040                 ;ASB	br      fdecv_cont1
   3041                 ;ASBfdecv_cont0:
   3042                 ;ASB	dec     r1
   3043                 ;ASBfdecv_cont1:
   3044                 ;ASB	mov     @rr4,r1
   3045 0D18 F8         	ret
   3046                 
   3047                 
   3048 0D19            f_inc_value:
   3049                 ;ASB	movw    rr2,pres_menu_desc
   3050                 ;ASB	addw    rr2,#7
   3051                 ;ASB	mov     r1,menu_selection
   3052                 ;ASB	clr     r0
   3053                 ;ASB	sll     r1
   3054                 ;ASB	addw    rr2,rr0
   3055                 ;ASB	movw    rr2,@rr2
   3056                 ;ASB
   3057                 ;ASB	mov     r0,(rr2)+ ;option count
   3058                 ;ASB	dec     r0
   3059                 ;ASB	movw    rr4,@rr2  ;ram value
   3060                 ;ASB	mov     r1,@rr4
   3061                 ;ASB	cmp     r1,r0
   3062                 ;ASB	br      ult,fincv_cont0
   3063                 ;ASB	mov     r1,#0
   3064                 ;ASB	br      fincv_cont1
   3065                 ;ASBfincv_cont0:
   3066                 ;ASB	inc     r1
   3067                 ;ASBfincv_cont1:
   3068                 ;ASB	mov     @rr4,r1
   3069 0D19 F8         	ret
   3070                 
   3071 0D1A            f_dec_teamx:
   3072                 ;ASB        movw    rr0,trading_slot
   3073                 ;ASB        cmpw    rr0,#0
   3074                 ;ASB        br      ne,f_dec_exit1
   3075                 ;ASB
   3076 0D1A            f_dec_team:
   3077                 ;ASB        mov     r0,trade_index0
   3078                 ;ASB        cmp     r0,#0
   3079                 ;ASB        br      eq,f_dec_cont
   3080                 ;ASB        dec     r0
   3081                 ;ASB        br      f_dec_exit
   3082                 ;ASBf_dec_cont:
   3083                 ;ASB        mov     r0,#28
   3084                 ;ASBf_dec_exit:
   3085                 ;ASB        mov     trade_index0,r0
   3086                 ;ASB
   3087                 ;ASB        movw     rr0,trading_slot



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   73


   3088                 ;ASB        cmpw     rr0,#0
   3089                 ;ASB        br       eq,f_dec_exit1
   3090                 ;ASB        call     get_player_info
   3091                 ;ASB        movw     rr2,#player_array
   3092                 ;ASB        mov      r0,PLAYER_team(rr2)
   3093                 ;ASB        sub      r0,#1h
   3094                 ;ASB        mov      r1,trade_index0
   3095                 ;ASB        cmp      r0,r1
   3096                 ;ASB        br       eq,f_dec_team
   3097                 ;ASB
   3098                 ;ASBf_dec_exit1:
   3099 0D1A F8                 ret
   3100                 
   3101                 
   3102 0D1B            f_inc_teamx:
   3103                 ;ASB        movw    rr0,trading_slot
   3104                 ;ASB        cmpw    rr0,#0
   3105                 ;ASB        br      ne,f_inc_exit1
   3106                 ;ASB
   3107 0D1B            f_inc_team:
   3108                 ;ASB        mov     r0,trade_index0
   3109                 ;ASB        cmp     r0,#28
   3110                 ;ASB        br      eq,f_inc_cont
   3111                 ;ASB        inc     r0
   3112                 ;ASB        br      f_inc_exit0
   3113                 ;ASBf_inc_cont:
   3114                 ;ASB        mov     r0,#0
   3115                 ;ASBf_inc_exit0:
   3116                 ;ASB        mov     trade_index0,r0
   3117                 ;ASB
   3118                 ;ASB        movw     rr0,trading_slot
   3119                 ;ASB        cmpw     rr0,#0
   3120                 ;ASB        br       eq,f_inc_exit1
   3121                 ;ASB        call     get_player_info
   3122                 ;ASB        movw     rr2,#player_array
   3123                 ;ASB        mov      r0,PLAYER_team(rr2)
   3124                 ;ASB        sub      r0,#1h
   3125                 ;ASB        mov      r1,trade_index0
   3126                 ;ASB        cmp      r0,r1
   3127                 ;ASB        br       eq,f_inc_team
   3128                 ;ASB
   3129                 ;ASBf_inc_exit1:
   3130 0D1B F8                 ret
   3131                 
   3132                 
   3133                 
   3134 0D1C            f_dec_statloc:
   3135                 ;ASB        mov     r0,trade_index1
   3136                 ;ASB        cmp     r0,#0
   3137                 ;ASB        br      eq,f_decst_cont
   3138                 ;ASB        dec     r0
   3139                 ;ASB        br      f_decst_exit
   3140                 ;ASBf_decst_cont:
   3141                 ;ASB        mov     r0,#21
   3142                 ;ASBf_decst_exit:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   74


   3143                 ;ASB        mov     trade_index1,r0
   3144 0D1C F8                 ret
   3145                 
   3146                 
   3147 0D1D            f_inc_statloc:
   3148                 ;ASB        mov     r0,trade_index1
   3149                 ;ASB        cmp     r0,#21
   3150                 ;ASB        br      eq,f_incst_cont
   3151                 ;ASB        inc     r0
   3152                 ;ASB        br      f_incst_exit
   3153                 ;ASBf_incst_cont:
   3154                 ;ASB        mov     r0,#0
   3155                 ;ASBf_incst_exit:
   3156                 ;ASB        mov     trade_index1,r0
   3157 0D1D F8                 ret
   3158                 
   3159                 
   3160 0D1E            f_dec_player:
   3161                 ;ASB        mov     r0,trade_index2
   3162                 ;ASB        cmp     r0,#0
   3163                 ;ASB        br      eq,f_decp_exit
   3164                 ;ASB
   3165                 ;ASB        cmp     r0,trade_base
   3166                 ;ASB        br      gt,f_decp_cont
   3167                 ;ASB        mov     r1,trade_base
   3168                 ;ASB        sub     r1,#1
   3169                 ;ASB        mov     trade_base,r1
   3170                 ;ASB
   3171                 ;ASBf_decp_cont:
   3172                 ;ASB        sub     r0,#1
   3173                 ;ASB        mov     trade_index2,r0
   3174                 ;ASB
   3175                 ;ASBf_decp_exit:
   3176 0D1E F8                 ret
   3177                 
   3178                 
   3179                 
   3180 0D1F            f_inc_player:
   3181                 ;ASB        mov    r0,trade_index2
   3182                 ;ASB        cmp    r0,#0fh
   3183                 ;ASB        br     eq,f_incp_exit
   3184                 ;ASB
   3185                 ;ASB        mov    r1,trade_base
   3186                 ;ASB        sub    r0,r1
   3187                 ;ASB        cmp    r0,#4
   3188                 ;ASB        br     lt,f_incp_cont
   3189                 ;ASB        mov    r1,trade_base
   3190                 ;ASB        add    r1,#1
   3191                 ;ASB        mov    trade_base,r1
   3192                 ;ASB
   3193                 ;ASBf_incp_cont:
   3194                 ;ASB        mov    r0,trade_index2
   3195                 ;ASB        add    r0,#1
   3196                 ;ASB        mov    trade_index2,r0
   3197                 ;ASB



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   75


   3198                 ;ASBf_incp_exit:
   3199 0D1F F8                 ret
   3200                 
   3201                 
   3202                 ;UDLR ABCD
   3203                 
   3204      0000       NULL_FUNCTION      equ       00h
   3205      0001       INC_SELECT         equ       01h
   3206      0002       DEC_SELECT         equ       02h
   3207      0003       INC_VALUE          equ       03h
   3208      0004       DEC_VALUE          equ       04h
   3209      0005       BACK_TO_MAIN4      equ       05h
   3210      0006       BACK_TO_MAIN5      equ       06h
   3211      0007       BACK_TO_MAIN6      equ       07h
   3212      0008       DOWN_TO_OPTIONS    equ       08h
   3213      0009       DOWN_TO_RULES      equ       09h
   3214      000A       DOWN_TO_ROSTER     equ       0ah
   3215      000B       DOWN_TO_TRADE      equ       0bh
   3216      000C       BACK_TO_ROSTER0    equ       0ch
   3217      000D       BACK_TO_ROSTER1    equ       0dh
   3218      000E       BACK_TO_ROSTER2    equ       0eh
   3219      000F       BACK_TO_ROSTER3    equ       0fh
   3220      0010       BACK_TO_ROSTER4    equ       10h
   3221      0011       DEC_TEAM           equ       11h
   3222      0012       INC_TEAM           equ       12h
   3223      0013       DEC_STATLOC        equ       13h
   3224      0014       INC_STATLOC        equ       14h
   3225      0015       DEC_PLAYER         equ       15h
   3226      0016       INC_PLAYER         equ       16h
   3227      0017       SELECT_4TRADE      equ       17h
   3228      0018       DOWN_TO_REORDER    equ       18h
   3229      0019       SELECT_4REORDER    equ       19h
   3230      001A       DEC_TEAMX          equ       1ah
   3231      001B       INC_TEAMX          equ       1bh
   3232      001C       DOWN_TO_CREATE     equ       1ch
   3233      001D       DEC_LETTER         equ       1dh
   3234      001E       INC_LETTER         equ       1eh
   3235      001F       DEC_LETTER10       equ       1fh
   3236      0020       INC_LETTER10       equ       20h
   3237      0021       DELETE_LETTER      equ       21h
   3238      0022       ENTER_LETTER       equ       22h
   3239      0023       BACK_TO_CREATE1    equ       23h
   3240      0024       BACK_TO_CREATE2    equ       24h
   3241      0025       END_CREATE         equ       25h
   3242      0026       DOWN_TO_CREATE4    equ       26h
   3243      0027       BACK_TO_CREATE3    equ       27h
   3244      0028       DEC_SVALUE         equ       28h
   3245      0029       INC_SVALUE         equ       29h
   3246      002A       DEC_PNUM           equ       2ah
   3247      002B       INC_PNUM           equ       2bh
   3248      002C       DEC_PHEIGHT        equ       2ch
   3249      002D       INC_PHEIGHT        equ       2dh
   3250      002E       DEC_PWEIGHT        equ       2eh
   3251      002F       INC_PWEIGHT        equ       2fh
   3252      0030       DEC_POSITION       equ       30h



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   76


   3253      0031       INC_POSITION       equ       31h
   3254      0032       DEC_PDELETE        equ       32h
   3255      0033       INC_PDELETE        equ       33h
   3256      0034       DOWN_TO_DELETE     equ       34h
   3257      0035       QUIT_OPTIONS       equ       35h
   3258                 
   3259                 
   3260                 ;ASBmenu_func_table:
   3261                 ;ASB	defw     f_null_function
   3262                 ;ASB	defw     f_inc_select
   3263                 ;ASB	defw     f_dec_select
   3264                 ;ASB	defw     f_inc_value
   3265                 ;ASB	defw     f_dec_value
   3266                 ;ASB	defw     f_back2main4
   3267                 ;ASB	defw     f_back2main5
   3268                 ;ASB	defw     f_back2main6
   3269                 ;ASB	defw     f_down2options
   3270                 ;ASB	defw     f_down2rules
   3271                 ;ASB	defw     f_down2roster
   3272                 ;ASB	defw     f_down2trade
   3273                 ;ASB	defw     f_back2roster0
   3274                 ;ASB	defw     f_back2roster1
   3275                 ;ASB	defw     f_back2roster2
   3276                 ;ASB	defw     f_back2roster3
   3277                 ;ASB	defw     f_back2roster4
   3278                 ;ASB        defw     f_dec_team
   3279                 ;ASB        defw     f_inc_team
   3280                 ;ASB        defw     f_dec_statloc
   3281                 ;ASB        defw     f_inc_statloc
   3282                 ;ASB        defw     f_dec_player
   3283                 ;ASB        defw     f_inc_player
   3284                 ;ASB        defw     f_select_4trade
   3285                 ;ASB        defw     f_down2reorder
   3286                 ;ASB        defw     f_select_4reorder
   3287                 ;ASB        defw     f_dec_teamx
   3288                 ;ASB        defw     f_inc_teamx
   3289                 ;ASB        defw     f_down2create
   3290                 ;ASB        defw     f_dec_letter
   3291                 ;ASB        defw     f_inc_letter
   3292                 ;ASB        defw     f_dec_letter10
   3293                 ;ASB        defw     f_inc_letter10
   3294                 ;ASB        defw     f_delete_letter
   3295                 ;ASB        defw     f_enter_letter
   3296                 ;ASB        defw     f_back2create1
   3297                 ;ASB        defw     f_back2create2
   3298                 ;ASB        defw     f_end_create
   3299                 ;ASB        defw     f_down2create4
   3300                 ;ASB        defw     f_back2create3
   3301                 ;ASB        defw     f_dec_svalue
   3302                 ;ASB        defw     f_inc_svalue
   3303                 ;ASB        defw     f_dec_pnum
   3304                 ;ASB        defw     f_inc_pnum
   3305                 ;ASB        defw     f_dec_pheight
   3306                 ;ASB        defw     f_inc_pheight
   3307                 ;ASB        defw     f_dec_pweight



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   77


   3308                 ;ASB        defw     f_inc_pweight
   3309                 ;ASB        defw     f_dec_position
   3310                 ;ASB        defw     f_inc_position
   3311                 ;ASB        defw     f_dec_pdelete
   3312                 ;ASB        defw     f_inc_pdelete
   3313                 ;ASB        defw     f_down2delete
   3314                 ;ASB        defw     f_quit_options
   3315                 
   3316                 
   3317                 ;ASBf_quit_options:
   3318                 ;ASB        mov      r1,#1
   3319                 ;ASB        mov      oquit_flag,r1
   3320                 ;ASB        ret
   3321                 
   3322                 ;ASBf_dec_pdelete:
   3323                 ;ASB        mov      r0,trade_index1
   3324                 ;ASB        cmp      r0,#0
   3325                 ;ASB        br       ne,no_dec_pdel0
   3326                 ;ASB
   3327                 ;ASB        movw     rr0,trade_base
   3328                 ;ASB        cmpw     rr0,#0
   3329                 ;ASB        br       eq,no_dec_pdel1
   3330                 ;ASB        subw     rr0,#1
   3331                 ;ASB        movw     trade_base,rr0
   3332                 ;ASB        br       no_dec_pdel1
   3333                 ;ASB
   3334                 ;ASBno_dec_pdel0:
   3335                 ;ASB        sub      r0,#1
   3336                 ;ASB        mov      trade_index1,r0
   3337                 ;ASB
   3338                 ;ASBno_dec_pdel1:
   3339                 ;ASB        ret
   3340                 
   3341                 
   3342                 
   3343      0110       MAX_PLAYERS      equ      110h
   3344                 
   3345                 ;ASBf_inc_pdelete:
   3346                 ;ASB        movw     rr0,trade_base
   3347                 ;ASB        cmpw     rr0,#MAX_PLAYERS
   3348                 ;ASB        br       eq,no_inc_pdel1
   3349                 ;ASB        mov      r0,trade_index1
   3350                 ;ASB        cmp      r0,#6
   3351                 ;ASB        br       ne,no_inc_pdel0
   3352                 ;ASB
   3353                 ;ASB        movw     rr0,trade_base
   3354                 ;ASB        addw     rr0,#1
   3355                 ;ASB        movw     trade_base,rr0
   3356                 ;ASB        br       no_inc_pdel1
   3357                 ;ASB
   3358                 ;ASBno_inc_pdel0:
   3359                 ;ASB        add      r0,#1
   3360                 ;ASB        mov      trade_index1,r0
   3361                 ;ASB
   3362                 ;ASBno_inc_pdel1:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   78


   3363                 ;ASB        ret
   3364                 
   3365                 
   3366                 
   3367                 ;ASBf_dec_svalue:
   3368                 ;ASBf_inc_svalue:
   3369                 ;ASB        ret
   3370                 
   3371                 
   3372 0D20            f_dec_position:
   3373                 ;ASB        movw    rr0,#player_array+PLAYER_position
   3374                 ;ASB        mov     r2,@rr0
   3375                 ;ASB        sub     r2,#1
   3376                 ;ASB        cmp     r2,#0ffh
   3377                 ;ASB        br      ne,dec_pos_cont0
   3378                 ;ASB        clr     r2
   3379                 ;ASBdec_pos_cont0:
   3380                 ;ASB        mov     @rr0,r2
   3381 0D20 F8                 ret
   3382                 
   3383                 
   3384 0D21            f_inc_position:
   3385                 ;ASB        movw    rr0,#player_array+PLAYER_position
   3386                 ;ASB        mov     r2,@rr0
   3387                 ;ASB        add     r2,#1
   3388                 ;ASB        cmp     r2,#5
   3389                 ;ASB        br      ne,inc_pos_cont0
   3390                 ;ASB        clr     r2
   3391                 ;ASBinc_pos_cont0:
   3392                 ;ASB        mov     @rr0,r2
   3393 0D21 F8                 ret
   3394                 
   3395                 
   3396                 
   3397 0D22            f_dec_pnum:
   3398                 ;ASB        movw    rr0,#player_array+PLAYER_number
   3399                 ;ASB        mov     r2,@rr0
   3400                 ;ASB        sub     r2,#1
   3401                 ;ASB        cmp     r2,#0ffh
   3402                 ;ASB        br      ne,dec_pnum_cont0
   3403                 ;ASB        mov     r2,#100
   3404                 ;ASBdec_pnum_cont0:
   3405                 ;ASB        mov     @rr0,r2
   3406 0D22 F8                 ret
   3407                 
   3408                 
   3409 0D23            f_inc_pnum:
   3410                 ;ASB        movw    rr0,#player_array+PLAYER_number
   3411                 ;ASB        mov     r2,@rr0
   3412                 ;ASB        add     r2,#1
   3413                 ;ASB        cmp     r2,#101
   3414                 ;ASB        br      ne,inc_pnum_cont0
   3415                 ;ASB        clr     r2
   3416                 ;ASBinc_pnum_cont0:
   3417                 ;ASB        mov     @rr0,r2



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   79


   3418 0D23 F8                 ret
   3419                 
   3420                 
   3421                 
   3422 0D24            f_dec_pheight:
   3423                 ;ASB        movw    rr0,#player_array+PLAYER_height
   3424                 ;ASB        mov     r2,@rr0
   3425                 ;ASB        sub     r2,#1
   3426                 ;ASB        cmp     r2,#63
   3427                 ;ASB        br      ne,dec_pheight_cont0
   3428                 ;ASB        mov     r2,#93
   3429                 ;ASBdec_pheight_cont0:
   3430                 ;ASB        mov     @rr0,r2
   3431 0D24 F8                 ret
   3432                 
   3433                 
   3434 0D25            f_inc_pheight:
   3435                 ;ASB        movw    rr0,#player_array+PLAYER_height
   3436                 ;ASB        mov     r2,@rr0
   3437                 ;ASB        add     r2,#1
   3438                 ;ASB        cmp     r2,#94
   3439                 ;ASB        br      ne,inc_pheight_cont0
   3440                 ;ASB        mov     r2,#63
   3441                 ;ASBinc_pheight_cont0:
   3442                 ;ASB        mov     @rr0,r2
   3443 0D25 F8                 ret
   3444                 
   3445                 
   3446 0D26            f_dec_pweight:
   3447                 ;ASB        movw    rr0,#player_array+PLAYER_weight
   3448                 ;ASB        movw    rr2,@rr0
   3449                 ;ASB        subw    rr2,#1
   3450                 ;ASB        cmpw    rr2,#129
   3451                 ;ASB        br      ne,dec_pweight_cont0
   3452                 ;ASB        movw    rr2,#355
   3453                 ;ASBdec_pweight_cont0:
   3454                 ;ASB        movw    @rr0,rr2
   3455 0D26 F8                 ret
   3456                 
   3457                 
   3458 0D27            f_inc_pweight:
   3459                 ;ASB        movw    rr0,#player_array+PLAYER_weight
   3460                 ;ASB        movw    rr2,@rr0
   3461                 ;ASB        addw    rr2,#1
   3462                 ;ASB        cmpw    rr2,#356
   3463                 ;ASB        br      ne,inc_pweight_cont0
   3464                 ;ASB        movw    rr2,#130
   3465                 ;ASBinc_pweight_cont0:
   3466                 ;ASB        movw    @rr0,rr2
   3467 0D27 F8                 ret
   3468                 
   3469                 
   3470                 
   3471                 
   3472                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   80


   3473 0D28            f_end_create:
   3474                 ;ASB	mov     r2,#03
   3475                 ;ASB	mov     menu_selection,r2
   3476                 ;ASB	movw    rr2,#ROSTER_MENU_DESC
   3477                 ;ASB	movw    pres_menu_desc,rr2
   3478                 ;ASB        clr     r0
   3479                 ;ASB
   3480 0D28 F8                 ret
   3481                 
   3482 0D29            f_dec_letter:
   3483                 ;ASB        mov      r0,trade_index0
   3484                 ;ASB        cmp      r0,#0
   3485                 ;ASB        br       eq,dec_letter_cont0
   3486                 ;ASB        sub      r0,#1
   3487                 ;ASB        br       dec_letter_cont1
   3488                 ;ASBdec_letter_cont0:
   3489                 ;ASB        mov      r0,#29
   3490                 ;ASBdec_letter_cont1:
   3491                 ;ASB        mov      trade_index0,r0
   3492 0D29 F8                 ret
   3493                 
   3494 0D2A            f_inc_letter:
   3495                 ;ASB        mov      r0,trade_index0
   3496                 ;ASB        cmp      r0,#29
   3497                 ;ASB        br       eq,inc_letter_cont0
   3498                 ;ASB        add      r0,#1
   3499                 ;ASB        br       inc_letter_cont1
   3500                 ;ASBinc_letter_cont0:
   3501                 ;ASB        mov      r0,#0
   3502                 ;ASBinc_letter_cont1:
   3503                 ;ASB        mov      trade_index0,r0
   3504 0D2A F8                 ret
   3505                 
   3506                 
   3507 0D2B            f_dec_letter10:
   3508                 ;ASB        mov      r0,trade_index0
   3509                 ;ASB        sub      r0,#10
   3510                 ;ASB        cmp      r0,#0
   3511                 ;ASB        br       ge,dec_letter10_cont0
   3512                 ;ASB        add      r0,#30
   3513                 ;ASBdec_letter10_cont0:
   3514                 ;ASB        mov      trade_index0,r0
   3515 0D2B F8                 ret
   3516                 
   3517                 
   3518 0D2C            f_inc_letter10:
   3519                 ;ASB        mov      r0,trade_index0
   3520                 ;ASB        add      r0,#10
   3521                 ;ASB        cmp      r0,#29
   3522                 ;ASB        br       le,inc_letter10_cont0
   3523                 ;ASB        sub      r0,#30
   3524                 ;ASBinc_letter10_cont0:
   3525                 ;ASB        mov      trade_index0,r0
   3526 0D2C F8                 ret
   3527                 



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   81


   3528 0D2D            f_delete_letter:
   3529                 ;ASB        mov     r1,trade_index1
   3530                 ;ASB        cmp     r1,#0
   3531                 ;ASB        br      eq,fdel_letter_exit
   3532                 ;ASB        sub     r1,#01h
   3533                 ;ASB        mov     trade_index1,r1
   3534                 ;ASB        clr     r0
   3535                 ;ASB        addw    rr0,#RAM_string0
   3536                 ;ASB        clr     r2
   3537                 ;ASB        mov     (rr0)+,r2
   3538                 ;ASB
   3539                 ;ASBfdel_letter_exit:
   3540 0D2D F8                 ret
   3541                 
   3542                 
   3543                 
   3544 0D2E            copy_with_pad:
   3545                 ;ASBcopypad_loop:
   3546                 ;ASB        or       r4,r4
   3547                 ;ASB        br       z,copypad_exit
   3548                 ;ASB
   3549                 ;ASB        mov      r5,(rr0)+
   3550                 ;ASB        or       r5,r5
   3551                 ;ASB        br       z,copypad_cont
   3552                 ;ASB        mov      (rr2)+,r5
   3553                 ;ASB        sub      r4,#1
   3554                 ;ASB        br       copypad_loop
   3555                 ;ASB
   3556                 ;ASBcopypad_cont:
   3557                 ;ASB        or       r4,r4
   3558                 ;ASB        br       z,copypad_exit
   3559                 ;ASB
   3560                 ;ASB        clr      r0
   3561                 ;ASB        mov      (rr2)+,r0
   3562                 ;ASB        sub      r4,#1
   3563                 ;ASB        br       copypad_cont
   3564                 ;ASBcopypad_exit:
   3565 0D2E F8                 ret
   3566                 
   3567                 
   3568                 
   3569 0D2F            show_delete_info:
   3570                 ;ASB        clr      r1
   3571                 ;ASB        mov      index3,r1
   3572                 ;ASBsdelete_loop:
   3573                 ;ASB        mov      r1,index3
   3574                 ;ASB        cmp      r1,#7
   3575                 ;ASB        br       eq,sdelete_exit
   3576                 ;ASB
   3577                 ;ASB        clr      r0
   3578                 ;ASB        movw     rr2,trade_base
   3579                 ;ASB        addw     rr0,rr2
   3580                 ;ASB        call     get_player_info
   3581                 ;ASB        call     build_pstring0
   3582                 ;ASB        clr      r6



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   82


   3583                 ;ASB        mov      (rr0)+,r6
   3584                 ;ASB
   3585                 ;ASB        mov      r0,index3
   3586                 ;ASB        sll      r0
   3587                 ;ASB        sll      r0
   3588                 ;ASB        sll      r0
   3589                 ;ASB        sll      r0
   3590                 ;ASB        add      r0,#20
   3591                 ;ASB        mov      index2,r0
   3592                 ;ASB        mov      r0,#010h
   3593                 ;ASB        mov      index1,r0
   3594                 ;ASB        movw     rr2,#RAM_string0
   3595                 ;ASB        movw     page_ptr1,rr2
   3596                 ;ASB
   3597                 ;ASB        mov      r0,#03h
   3598                 ;ASB        mov      r1,index3
   3599                 ;ASB        cmp      r1,trade_index1
   3600                 ;ASB        br       ne,not_this_pdel
   3601                 ;ASB        mov      r0,#0fch
   3602                 ;ASBnot_this_pdel:
   3603                 ;ASB        mov      hold_byte1,r0
   3604                 ;ASB
   3605                 ;ASB        call     pstring_loop
   3606                 ;ASB
   3607                 ;ASB        mov      r1,index3
   3608                 ;ASB        add      r1,#1
   3609                 ;ASB        mov      index3,r1
   3610                 ;ASB        br       sdelete_loop
   3611                 ;ASB
   3612                 ;ASBsdelete_exit:
   3613 0D2F F8                 ret
   3614                 
   3615                 
   3616                 
   3617 0D30            f_back2create1:
   3618                 ;ASB        movw     rr0,#CREATE1_MENU_DESC
   3619                 ;ASB        movw     pres_menu_desc,rr0
   3620                 ;ASB        clr      r0
   3621                 ;ASB        mov      trade_index0,r0
   3622                 ;ASB        mov      trade_index1,r0
   3623                 ;ASB	mov      menu_selection,r0
   3624                 ;ASB        mov      RAM_string0,r0
   3625                 ;ASB
   3626 0D30 F8                 ret
   3627                 
   3628 0D31            f_back2create2:
   3629                 ;ASB        movw     rr0,#CREATE2_MENU_DESC
   3630                 ;ASB        movw     pres_menu_desc,rr0
   3631                 ;ASB        clr      r0
   3632                 ;ASB        mov      trade_index0,r0
   3633                 ;ASB        mov      trade_index1,r0
   3634                 ;ASB	mov      menu_selection,r0
   3635                 ;ASB        mov      RAM_string0,r0
   3636                 ;ASB
   3637 0D31 F8                 ret



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   83


   3638                 
   3639 0D32            f_down2create4:
   3640                 ;ASB        movw     rr0,#CREATE4_MENU_DESC
   3641                 ;ASB        movw     pres_menu_desc,rr0
   3642                 ;ASB        clr      r0
   3643                 ;ASB        mov      trade_index0,r0
   3644                 ;ASB        mov      trade_index1,r0
   3645                 ;ASB	mov      menu_selection,r0
   3646                 ;ASB
   3647 0D32 F8                 ret
   3648                 
   3649                 
   3650 0D33            f_back2create3:
   3651                 ;ASB        movw     rr0,#CREATE3_MENU_DESC
   3652                 ;ASB        movw     pres_menu_desc,rr0
   3653                 ;ASB        clr      r0
   3654                 ;ASB        mov      trade_index0,r0
   3655                 ;ASB        mov      trade_index1,r0
   3656                 ;ASB	mov      menu_selection,r0
   3657                 ;ASB
   3658 0D33 F8                 ret
   3659                 
   3660                 
   3661 0D34            advance_create:
   3662                 ;ASB        movw     rr0,pres_menu_desc
   3663                 ;ASB        cmpw     rr0,#CREATE1_MENU_DESC
   3664                 ;ASB        br       ne,not_lastname
   3665                 ;ASB        movw     rr0,#CREATE2_MENU_DESC
   3666                 ;ASB        movw     pres_menu_desc,rr0
   3667                 ;ASB        movw     rr0,#RAM_string0
   3668                 ;ASB        movw     rr2,#player_array+PLAYER_Lname
   3669                 ;ASB        mov      r4,#0eh
   3670                 ;ASB        call     copy_with_pad
   3671                 ;ASB        clr      r0
   3672                 ;ASB        mov      trade_index0,r0
   3673                 ;ASB        mov      trade_index1,r0
   3674                 ;ASB        mov      RAM_string0,r0
   3675                 ;ASB	mov      menu_selection,r0
   3676                 ;ASB        br       advance_cexit
   3677                 ;ASB
   3678                 ;ASBnot_lastname:
   3679                 ;ASB        movw     rr0,pres_menu_desc
   3680                 ;ASB        cmpw     rr0,#CREATE2_MENU_DESC
   3681                 ;ASB        br       ne,not_firstname
   3682                 ;ASB        movw     rr0,#CREATE3_MENU_DESC
   3683                 ;ASB        movw     pres_menu_desc,rr0
   3684                 ;ASB        movw     rr0,#RAM_string0
   3685                 ;ASB        movw     rr2,#player_array+PLAYER_Fname
   3686                 ;ASB        mov      r4,#0ah
   3687                 ;ASB        call     copy_with_pad
   3688                 ;ASB        clr      r0
   3689                 ;ASB        mov      trade_index0,r0
   3690                 ;ASB        mov      trade_index1,r0
   3691                 ;ASB	mov      menu_selection,r0
   3692                 ;ASB        mov      RAM_string0,r0



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   84


   3693                 ;ASBnot_firstname:
   3694                 ;ASB
   3695                 ;ASBadvance_cexit:
   3696 0D34 F8                 ret
   3697                 
   3698                 
   3699 0D35            get_str_maxlen:
   3700                 ;ASB        mov     r2,#0ah
   3701                 ;ASB        movw    rr0,pres_menu_desc
   3702                 ;ASB        cmpw    rr0,#CREATE1_MENU_DESC
   3703                 ;ASB        br      eq,get_strmax_exit
   3704                 ;ASB        mov     r2,#0eh
   3705                 ;ASB        movw    rr0,pres_menu_desc
   3706                 ;ASB        cmpw    rr0,#CREATE2_MENU_DESC
   3707                 ;ASB        br      eq,get_strmax_exit
   3708                 ;ASB
   3709                 ;ASBget_strmax_exit:
   3710 0D35 F8                 ret
   3711                 
   3712                 
   3713                 
   3714 0D36            f_enter_letter:
   3715                 ;ASB        mov      r3,trade_index1
   3716                 ;ASB        call     get_str_maxlen
   3717                 ;ASB        cmp      r3,r2
   3718                 ;ASB        br       ge,fenter_letter_exit
   3719                 ;ASB        clr      r2
   3720                 ;ASB        addw     rr2,#RAM_string0
   3721                 ;ASB
   3722                 ;ASB        mov      r1,trade_index0
   3723                 ;ASB        cmp      r1,#29
   3724                 ;ASB        br       ne,not_enter_done
   3725                 ;ASB
   3726                 ;ASB        call     advance_create
   3727                 ;ASB        br       fenter_letter_exit
   3728                 ;ASB
   3729                 ;ASBnot_enter_done:
   3730                 ;ASB        clr      r0
   3731                 ;ASB        addw     rr0,#keyboard_table
   3732                 ;ASB        mov      r0,@rr0
   3733                 ;ASB
   3734                 ;ASB        mov      (rr2)+,r0
   3735                 ;ASB        clr      r0
   3736                 ;ASB        mov      (rr2)+,r0
   3737                 ;ASB        mov      r0,trade_index1
   3738                 ;ASB        add      r0,#01h
   3739                 ;ASB        mov      trade_index1,r0
   3740                 ;ASB
   3741                 ;ASBfenter_letter_exit:
   3742 0D36 F8                 ret
   3743                 
   3744                 
   3745 0D37            position_str00:
   3746 0D37 43454E54           defm     'CENTER'
        0D3B 4552



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   85


   3747 0D3D 00                 defb     0
   3748 0D3E            position_str01:
   3749 0D3E 5020464F           defm     'P FORWARD'
        0D42 52574152
        0D46 44
   3750 0D47 00                 defb     0
   3751 0D48            position_str02:
   3752 0D48 5320464F           defm     'S FORWARD'
        0D4C 52574152
        0D50 44
   3753 0D51 00                 defb     0
   3754 0D52            position_str03:
   3755 0D52 50204755           defm     'P GUARD'
        0D56 415244
   3756 0D59 00                 defb     0
   3757 0D5A            position_str04:
   3758 0D5A 53204755           defm     'S GUARD'
        0D5E 415244
   3759 0D61 00                 defb     0
   3760                 
   3761 0D62            position_table:
   3762 0D62 0D37'              defw     position_str00
   3763 0D64 0D3E'              defw     position_str01
   3764 0D66 0D48'              defw     position_str02
   3765 0D68 0D52'              defw     position_str03
   3766 0D6A 0D5A'              defw     position_str04
   3767                 
   3768 0D6C            show_create3_info:
   3769                 ;ASB        mov      r0,#040h
   3770                 ;ASB        mov      index1,r0
   3771                 ;ASB        mov      r0,#020h
   3772                 ;ASB        mov      index2,r0
   3773                 ;ASB        movw     rr2,#player_array+PLAYER_Fname
   3774                 ;ASB        movw     page_ptr1,rr2
   3775                 ;ASB        mov      r1,#03h
   3776                 ;ASB        mov      r0,menu_selection
   3777                 ;ASB        cmp      r0,#0
   3778                 ;ASB        br       ne,show_c3cont0
   3779                 ;ASB        mov      r1,#0fch
   3780                 ;ASBshow_c3cont0:
   3781                 ;ASB        mov      hold_byte1,r1
   3782                 ;ASB        call     pstring_loop
   3783                 ;ASB
   3784                 ;ASB        mov      r0,index1
   3785                 ;ASB        add      r0,#08h
   3786                 ;ASB        mov      index1,r0
   3787                 ;ASB        movw     rr2,#player_array+PLAYER_Lname
   3788                 ;ASB        movw     page_ptr1,rr2
   3789                 ;ASB        mov      r1,#03h
   3790                 ;ASB        mov      r0,menu_selection
   3791                 ;ASB        cmp      r0,#1
   3792                 ;ASB        br       ne,show_c3cont1
   3793                 ;ASB        mov      r1,#0fch
   3794                 ;ASBshow_c3cont1:
   3795                 ;ASB        mov      hold_byte1,r1



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   86


   3796                 ;ASB        call     pstring_loop
   3797                 ;ASB
   3798                 ;ASB        movw     rr0,#RAM_string0
   3799                 ;ASB        movw     rr2,#player_array
   3800                 ;ASB        call     pstat_pnum
   3801                 ;ASB        mov      r0,#40h
   3802                 ;ASB        mov      index1,r0
   3803                 ;ASB        mov      r0,#44h
   3804                 ;ASB        mov      index2,r0
   3805                 ;ASB        movw     rr2,#RAM_string0
   3806                 ;ASB        movw     page_ptr1,rr2
   3807                 ;ASB        mov      r1,#03h
   3808                 ;ASB        mov      r0,menu_selection
   3809                 ;ASB        cmp      r0,#3
   3810                 ;ASB        br       ne,show_c3cont3
   3811                 ;ASB        mov      r1,#0fch
   3812                 ;ASBshow_c3cont3:
   3813                 ;ASB        mov      hold_byte1,r1
   3814                 ;ASB        call     pstring_loop
   3815                 ;ASB
   3816                 ;ASB        movw     rr0,#RAM_string0
   3817                 ;ASB        movw     rr2,#player_array
   3818                 ;ASB        call     pstat_height
   3819                 ;ASB        mov      r0,#6ch
   3820                 ;ASB        mov      index1,r0
   3821                 ;ASB        mov      r0,#50h
   3822                 ;ASB        mov      index2,r0
   3823                 ;ASB        movw     rr2,#RAM_string0
   3824                 ;ASB        movw     page_ptr1,rr2
   3825                 ;ASB        mov      r1,#03h
   3826                 ;ASB        mov      hold_byte1,r1
   3827                 ;ASB        call     pstring_loop
   3828                 ;ASB
   3829                 ;ASB        movw     rr0,#RAM_string0
   3830                 ;ASB        movw     rr2,#player_array
   3831                 ;ASB        call     pstat_weight
   3832                 ;ASB        subw     rr0,#1
   3833                 ;ASB        mov      r2,#' '
   3834                 ;ASB        mov      (rr0)+,r2
   3835                 ;ASB        mov      r2,#'L'
   3836                 ;ASB        mov      (rr0)+,r2
   3837                 ;ASB        mov      r2,#'B'
   3838                 ;ASB        mov      (rr0)+,r2
   3839                 ;ASB        mov      r2,#'S'
   3840                 ;ASB        mov      (rr0)+,r2
   3841                 ;ASB        mov      r2,#0
   3842                 ;ASB        mov      (rr0)+,r2
   3843                 ;ASB        mov      r0,#6ch
   3844                 ;ASB        mov      index1,r0
   3845                 ;ASB        mov      r0,#5ch
   3846                 ;ASB        mov      index2,r0
   3847                 ;ASB        movw     rr2,#RAM_string0
   3848                 ;ASB        movw     page_ptr1,rr2
   3849                 ;ASB        mov      r1,#03h
   3850                 ;ASB        mov      hold_byte1,r1



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   87


   3851                 ;ASB        call     pstring_loop
   3852                 ;ASB
   3853                 ;ASB
   3854                 ;ASB        movw     rr0,#player_array+PLAYER_position
   3855                 ;ASB        mov      r1,@rr0
   3856                 ;ASB        clr      r0
   3857                 ;ASB        sll      r1
   3858                 ;ASB        addw     rr0,#position_table
   3859                 ;ASB        movw     rr0,@rr0
   3860                 ;ASB        movw     page_ptr1,rr0
   3861                 ;ASB        mov      r0,#6ch
   3862                 ;ASB        mov      index1,r0
   3863                 ;ASB        mov      r0,#116
   3864                 ;ASB        mov      index2,r0
   3865                 ;ASB        mov      r1,#03h
   3866                 ;ASB        mov      hold_byte1,r1
   3867                 ;ASB        call     pstring_loop
   3868                 ;ASB
   3869                 ;ASB
   3870                 ;ASB        ret
   3871                 ;ASB
   3872                 ;ASBshow_create4_info:
   3873 0D6C F8                 ret
   3874                 
   3875                 
   3876                 
   3877 0D6D            keyboard_table:
   3878 0D6D 41424344           defm     'ABCDEFGHIJKLMNOPQRSTUVWXYZ-'
        0D71 45464748
        0D75 494A4B4C
        0D79 4D4E4F50
        0D7D 51525354
        0D81 55565758
        0D85 595A2D
   3879 0D88 272E6B             defb     027h,02eh,06bh
   3880 0D8B            show_keyboard_info:
   3881                 ;ASB        clr      r0
   3882                 ;ASB        mov      index0,r0
   3883                 ;ASB
   3884                 ;ASB        mov      r0,#50h
   3885                 ;ASB        mov      index1,r0
   3886                 ;ASBshow_keyb_loop1:
   3887                 ;ASB        mov      r0,index1
   3888                 ;ASB        cmp      r0,#80h
   3889                 ;ASB        br       uge,show_keyb_exit1
   3890                 ;ASB
   3891                 ;ASB        mov      r0,#20h
   3892                 ;ASB        mov      index2,r0
   3893                 ;ASBshow_keyb_loop2:
   3894                 ;ASB        mov      r0,index2
   3895                 ;ASB        cmp      r0,#0c0h
   3896                 ;ASB        br       uge,show_keyb_exit2
   3897                 ;ASB
   3898                 ;ASB        mov      r1,index0
   3899                 ;ASB        clr      r0



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   88


   3900                 ;ASB        addw     rr0,#keyboard_table
   3901                 ;ASB        mov      r0,@rr0
   3902                 ;ASB        call     get_font_info
   3903                 ;ASB        mov      r0,index1
   3904                 ;ASB        mov      r9,r0          ;yloc
   3905                 ;ASB        mov      r0,index2
   3906                 ;ASB        mov      r8,r0          ;xloc
   3907                 ;ASB        mov      r15,#00        ;1=trans/0=rep
   3908                 ;ASB        call     CK_page
   3909                 ;ASB        mov      r1,#03h
   3910                 ;ASB        mov      r0,index0
   3911                 ;ASB        cmp      r0,trade_index0
   3912                 ;ASB        br       ne,show_keyb_cont
   3913                 ;ASB        mov      r1,#0fch
   3914                 ;ASBshow_keyb_cont:
   3915                 ;ASB        mov      dmpl,r1
   3916                 ;ASB        call     Fi_graph
   3917                 ;ASB
   3918                 ;ASB
   3919                 ;ASB        mov      r0,index0
   3920                 ;ASB        add      r0,#1
   3921                 ;ASB        mov      index0,r0
   3922                 ;ASB
   3923                 ;ASB        mov      r0,index2
   3924                 ;ASB        add      r0,#10h
   3925                 ;ASB        mov      index2,r0
   3926                 ;ASB        br       show_keyb_loop2
   3927                 ;ASBshow_keyb_exit2:
   3928                 ;ASB
   3929                 ;ASB        mov      r0,index1
   3930                 ;ASB        add      r0,#10h
   3931                 ;ASB        mov      index1,r0
   3932                 ;ASB        br       show_keyb_loop1
   3933                 ;ASBshow_keyb_exit1:
   3934                 ;ASB
   3935                 ;ASB       mov      r0,#064h
   3936                 ;ASB       mov      index1,r0
   3937                 ;ASB       mov      r0,#040h
   3938                 ;ASB       mov      index2,r0
   3939                 ;ASB       movw     rr2,#RAM_string0
   3940                 ;ASB       movw     page_ptr1,rr2
   3941                 ;ASB       call     center_align
   3942                 ;ASB       mov      r1,#03h
   3943                 ;ASB       mov      dmpl,r1
   3944                 ;ASB       call     pstring_loop
   3945                 ;ASB
   3946 0D8B F8                 ret
   3947                 
   3948                 
   3949 0D8C            do_menu_key:
   3950                 ;ASB	mov      r1,#0
   3951                 ;ASB	cmp      r0,#83h   ;up
   3952                 ;ASB	jmp      eq,do_mkey_cont
   3953                 ;ASB
   3954                 ;ASB	mov      r1,#1



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   89


   3955                 ;ASB	cmp      r0,#84h   ;down
   3956                 ;ASB	jmp      eq,do_mkey_cont
   3957                 ;ASB
   3958                 ;ASB	mov      r1,#2
   3959                 ;ASB	cmp      r0,#85h   ;left
   3960                 ;ASB	jmp      eq,do_mkey_cont
   3961                 ;ASB
   3962                 ;ASB	mov      r1,#3
   3963                 ;ASB	cmp      r0,#86h   ;right
   3964                 ;ASB	jmp      eq,do_mkey_cont
   3965                 ;ASB
   3966                 ;ASB	mov      r1,#4
   3967                 ;ASB	cmp      r0,#8bh   ;keyA
   3968                 ;ASB	jmp      eq,do_mkey_cont
   3969                 ;ASB
   3970                 ;ASB	mov      r1,#5
   3971                 ;ASB	cmp      r0,#8ch   ;keyB
   3972                 ;ASB	jmp      eq,do_mkey_cont
   3973                 ;ASB
   3974                 ;ASB	mov      r1,#6
   3975                 ;ASB	cmp      r0,#8dh   ;keyC
   3976                 ;ASB	jmp      eq,do_mkey_cont
   3977                 ;ASB
   3978                 ;ASB	mov      r1,#7
   3979                 ;ASB	cmp      r0,#8eh   ;keyD
   3980                 ;ASB	jmp      eq,do_mkey_cont
   3981                 ;ASB
   3982                 ;ASB	ret
   3983                 ;ASBdo_mkey_cont:
   3984                 ;ASB	clr      r0
   3985                 ;ASB	mov      r3,menu_selection
   3986                 ;ASB	sll      r3
   3987                 ;ASB	clr      r2
   3988                 ;ASB	movw     rr4,pres_menu_desc
   3989                 ;ASB	addw     rr2,rr4
   3990                 ;ASB	addw     rr2,#7
   3991                 ;ASB	movw     rr2,@rr2
   3992                 ;ASB	mov      r0,@rr2      ;option count (word addr)
   3993                 ;ASB	sll      r0
   3994                 ;ASB	add      r1,r0
   3995                 ;ASB	clr      r0
   3996                 ;ASB	movw     rr4,1(rr2)   ;ram variable addr
   3997                 ;ASB	mov      r4,@rr4      ;selected option
   3998                 ;ASB	sll      r4
   3999                 ;ASB	sll      r4
   4000                 ;ASB	sll      r4
   4001                 ;ASB	add      r1,r4
   4002                 ;ASB	addw     rr0,rr2
   4003                 ;ASB	addw     rr0,#5       ;skip header info
   4004                 ;ASB	mov      r1,@rr0
   4005                 ;ASB	sll      r1
   4006                 ;ASB	clr      r0
   4007                 ;ASB	addw     rr0,#menu_func_table
   4008                 ;ASB	movw     rr0,@rr0
   4009                 ;ASB	call     @rr0



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   90


   4010 0D8C F8         	ret
   4011                 
   4012                 
   4013                         include  menutxt.asm
   4013+0D8D            BLOCK_MENU_STR1A:
   4013+                ;ASB       defm     "abbbbbbbbbbbbbbbbbbbbbbbc"
   4013+                ;ASB       defb     0
   4013+0D8D            BLOCK_MENU_STR2A:
   4013+                ;ASB       defm     "d                       e"
   4013+                ;ASB       defb     0
   4013+0D8D            BLOCK_MENU_STR3A:
   4013+                ;ASB       defm     "fgggggggggggggggggggggggh"
   4013+                ;ASB       defb     0
   4013+                
   4013+                
   4013+                
   4013+0D8D            MAIN_MENU_STR0:
   4013+                ;ASB       defm     "GAMExSELECT"
   4013+                ;ASB       defb     0
   4013+0D8D            MAIN_MENU_STR1:
   4013+                ;ASB       defm     "MODE"
   4013+                ;ASB       defb     0
   4013+0D8D            MAIN_MENU_STR2:
   4013+                ;ASB       defm     "RULES"
   4013+                ;ASB       defb     0
   4013+0D8D            MAIN_MENU_STR3:
   4013+                ;ASB       defm     "LEVEL"
   4013+                ;ASB       defb     0
   4013+0D8D            MAIN_MENU_STR4:
   4013+                ;ASB       defm     "QUARTER"
   4013+                ;ASB       defb     0
   4013+0D8D            MAIN_MENU_STR5:
   4013+                ;ASB       defm     "SET OPTIONS"
   4013+                ;ASB       defb     0
   4013+0D8D            MAIN_MENU_STR6:
   4013+                ;ASB       defm     "SET RULES"
   4013+                ;ASB       defb     0
   4013+0D8D            MAIN_MENU_STR7:
   4013+                ;ASB       defm     "ROSTER SETUP"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            MAIN_MENU_OPTIONS:
   4013+                ;ASB       defb     32,16
   4013+                ;ASB       defw     MAIN_MENU_STR1
   4013+                ;ASB       defb     48,16
   4013+                ;ASB       defw     MAIN_MENU_STR2
   4013+                ;ASB       defb     64,16
   4013+                ;ASB       defw     MAIN_MENU_STR3
   4013+                ;ASB       defb     80,16
   4013+                ;ASB       defw     MAIN_MENU_STR4
   4013+                ;ASB       defb     96,16
   4013+                ;ASB       defw     MAIN_MENU_STR5
   4013+                ;ASB       defb     112,16
   4013+                ;ASB       defw     MAIN_MENU_STR6
   4013+                ;ASB       defb     128,16



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   91


   4013+                ;ASB       defw     MAIN_MENU_STR7
   4013+                
   4013+                
   4013+0D8D            MMENU_OPT1A:
   4013+                ;ASB       defm     "EXHIBITION"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT1B:
   4013+                ;ASB       defm     "SEASON"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT1C:
   4013+                ;ASB       defm     "PLAYOFFS"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT1D:
   4013+                ;ASB       defm     "CONTINUE"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT1:
   4013+                ;ASB       defb     4
   4013+                ;ASB       defw     game_mode
   4013+                ;ASB       defb     32,104
   4013+                ;ASB       defw     MMENU_OPT1A
   4013+                ;ASB       defw     MMENU_OPT1B
   4013+                ;ASB       defw     MMENU_OPT1C
   4013+                ;ASB       defw     MMENU_OPT1D
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,QUIT_OPTIONS,QUIT_OPTIONS,QUIT_OPTIONS,QUIT_OPTIONS
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,QUIT_OPTIONS,QUIT_OPTIONS,QUIT_OPTIONS,QUIT_OPTIONS
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,QUIT_OPTIONS,QUIT_OPTIONS,QUIT_OPTIONS,QUIT_OPTIONS
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,QUIT_OPTIONS,QUIT_OPTIONS,QUIT_OPTIONS,QUIT_OPTIONS
   4013+                
   4013+                
   4013+0D8D            MMENU_OPT2A:
   4013+                ;ASB       defm     "ARCADE"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT2B:
   4013+                ;ASB       defm     "SIMULATION"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT2C:
   4013+                ;ASB       defm     "CUSTOM"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT2:
   4013+                ;ASB       defb     3
   4013+                ;ASB       defw     game_rules
   4013+                ;ASB       defb     48,104
   4013+                ;ASB       defw     MMENU_OPT2A
   4013+                ;ASB       defw     MMENU_OPT2B
   4013+                ;ASB       defw     MMENU_OPT2C
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                
   4013+                
   4013+                
   4013+0D8D            MMENU_OPT3A:
   4013+                ;ASB       defm     "ALL STAR"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT3B:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   92


   4013+                ;ASB       defm     "ROOKIE"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT3C:
   4013+                ;ASB       defm     "STARTER"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT3:
   4013+                ;ASB       defb     3
   4013+                ;ASB       defw     game_level
   4013+                ;ASB       defb     64,104
   4013+                ;ASB       defw     MMENU_OPT3A
   4013+                ;ASB       defw     MMENU_OPT3B
   4013+                ;ASB       defw     MMENU_OPT3C
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                
   4013+                
   4013+                
   4013+0D8D            MMENU_OPT4A:
   4013+                ;ASB       defm     "3 MINUTES"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT4B:
   4013+                ;ASB       defm     "5 MINUTES"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT4C:
   4013+                ;ASB       defm     "8 MINUTES"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT4D:
   4013+                ;ASB       defm     "12 MINUTES"
   4013+                ;ASB       defb     0
   4013+0D8D            MMENU_OPT4:
   4013+                ;ASB       defb     4
   4013+                ;ASB       defw     game_quarter
   4013+                ;ASB       defb     80,104
   4013+                ;ASB       defw     MMENU_OPT4A
   4013+                ;ASB       defw     MMENU_OPT4B
   4013+                ;ASB       defw     MMENU_OPT4C
   4013+                ;ASB       defw     MMENU_OPT4D
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                
   4013+0D8D            NULL_OPTION_STR:
   4013+                ;ASB       defb     0
   4013+                
   4013+                
   4013+0D8D            MMENU_OPT5:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     96,104
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,DOWN_TO_OPTIONS,DOWN_TO_OPTIONS,DOWN_TO_OPTIONS,DOWN_TO_OPTIO
   4013+                
   4013+0D8D            MMENU_OPT6:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   93


   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     96,104
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,DOWN_TO_RULES,DOWN_TO_RULES,DOWN_TO_RULES,DOWN_TO_RULES
   4013+                
   4013+                
   4013+0D8D            MMENU_OPT7:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     96,104
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,DOWN_TO_ROSTER,DOWN_TO_ROSTER,DOWN_TO_ROSTER,DOWN_TO_ROSTER
   4013+                
   4013+                
   4013+0D8D            MAIN_MENU_NAME:
   4013+                ;ASB       defb     0,60
   4013+                ;ASB       defw     MAIN_MENU_STR0
   4013+                
   4013+0D8D            MAIN_MENU_DESC:
   4013+                ;ASB       defw     MAIN_MENU_NAME
   4013+                ;ASB       defw     f_null_function
   4013+                ;ASB       defb     7
   4013+                ;ASB       defw     MAIN_MENU_OPTIONS
   4013+                ;ASB       defw     MMENU_OPT1
   4013+                ;ASB       defw     MMENU_OPT2
   4013+                ;ASB       defw     MMENU_OPT3
   4013+                ;ASB       defw     MMENU_OPT4
   4013+                ;ASB       defw     MMENU_OPT5
   4013+                ;ASB       defw     MMENU_OPT6
   4013+                ;ASB       defw     MMENU_OPT7
   4013+                
   4013+                
   4013+0D8D            OPTION_MENU_STR0:
   4013+                ;ASB       defm     "SETxOPTIONS"
   4013+                ;ASB       defb     0
   4013+0D8D            OPTION_MENU_STR1:
   4013+                ;ASB       defm     "MUSIC"
   4013+                ;ASB       defb     0
   4013+0D8D            OPTION_MENU_STR2:
   4013+                ;ASB       defm     "SOUND FX"
   4013+                ;ASB       defb     0
   4013+0D8D            OPTION_MENU_STR3:
   4013+                ;ASB       defm     "CROWD"
   4013+                ;ASB       defb     0
   4013+0D8D            OPTION_MENU_STR4:
   4013+                ;ASB       defm     "COMPUTER ASSIST"
   4013+                ;ASB       defb     0
   4013+0D8D            OPTION_MENU_STR5:
   4013+                ;ASB       defm     "SLO MO DUNKS"
   4013+                ;ASB       defb     0
   4013+0D8D            OPTION_MENU_STR6:
   4013+                ;ASB       defm     "PLAYER STAR"
   4013+                ;ASB       defb     0
   4013+0D8D            OPTION_MENU_STR7:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   94


   4013+                ;ASB       defm     "SHOT CONTROL"
   4013+                ;ASB       defb     0
   4013+0D8D            OPTION_MENU_STR8:
   4013+                ;ASB       defm     "ON SCREEN HELP"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            OPTION_MENU_OPTIONS:
   4013+                ;ASB       defb     28,16
   4013+                ;ASB       defw     OPTION_MENU_STR1
   4013+                ;ASB       defb     44,16
   4013+                ;ASB       defw     OPTION_MENU_STR2
   4013+                ;ASB       defb     60,16
   4013+                ;ASB       defw     OPTION_MENU_STR3
   4013+                ;ASB       defb     76,16
   4013+                ;ASB       defw     OPTION_MENU_STR4
   4013+                ;ASB       defb     92,16
   4013+                ;ASB       defw     OPTION_MENU_STR5
   4013+                ;ASB       defb     108,16
   4013+                ;ASB       defw     OPTION_MENU_STR6
   4013+                ;ASB       defb     124,16
   4013+                ;ASB       defw     OPTION_MENU_STR7
   4013+                ;ASB       defb     140,16
   4013+                ;ASB       defw     OPTION_MENU_STR8
   4013+                
   4013+                
   4013+0D8D            OMENU_OPT1A:
   4013+                ;ASB       defm     " ON"
   4013+                ;ASB       defb     0
   4013+0D8D            OMENU_OPT1B:
   4013+                ;ASB       defm     "OFF"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            OMENU_OPT6A:
   4013+                ;ASB       defm     "POSITION"
   4013+                ;ASB       defb     0
   4013+0D8D            OMENU_OPT6B:
   4013+                ;ASB       defm     " NUMBER"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            OMENU_OPT7A:
   4013+                ;ASB       defm     " MANUAL"
   4013+                ;ASB       defb     0
   4013+0D8D            OMENU_OPT7B:
   4013+                ;ASB       defm     "AUTOMATIC"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            OMENU_OPT1:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     music_option
   4013+                ;ASB       defb     28,136
   4013+                ;ASB       defw     OMENU_OPT1A
   4013+                ;ASB       defw     OMENU_OPT1B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   95


   4013+0D8D            OMENU_OPT2:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     sfx_option
   4013+                ;ASB       defb     44,136
   4013+                ;ASB       defw     OMENU_OPT1A
   4013+                ;ASB       defw     OMENU_OPT1B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                
   4013+0D8D            OMENU_OPT3:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     crowd_option
   4013+                ;ASB       defb     60,136
   4013+                ;ASB       defw     OMENU_OPT1A
   4013+                ;ASB       defw     OMENU_OPT1B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                
   4013+0D8D            OMENU_OPT4:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     cassist_option
   4013+                ;ASB       defb     76,136
   4013+                ;ASB       defw     OMENU_OPT1A
   4013+                ;ASB       defw     OMENU_OPT1B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                
   4013+0D8D            OMENU_OPT5:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     slomo_dunks_option
   4013+                ;ASB       defb     92,136
   4013+                ;ASB       defw     OMENU_OPT1A
   4013+                ;ASB       defw     OMENU_OPT1B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                
   4013+0D8D            OMENU_OPT6:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     player_star_option
   4013+                ;ASB       defb     108,120
   4013+                ;ASB       defw     OMENU_OPT6A
   4013+                ;ASB       defw     OMENU_OPT6B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                
   4013+0D8D            OMENU_OPT7:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     shot_control_option
   4013+                ;ASB       defb     124,120
   4013+                ;ASB       defw     OMENU_OPT7A
   4013+                ;ASB       defw     OMENU_OPT7B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                
   4013+0D8D            OMENU_OPT8:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   96


   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     onscreen_help_option
   4013+                ;ASB       defb     140,136
   4013+                ;ASB       defw     OMENU_OPT1A
   4013+                ;ASB       defw     OMENU_OPT1B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4,BACK_TO_MAIN4
   4013+                
   4013+                
   4013+0D8D            OPTION_MENU_NAME:
   4013+                ;ASB       defb     0,60
   4013+                ;ASB       defw     OPTION_MENU_STR0
   4013+                
   4013+0D8D            OPTION_MENU_DESC:
   4013+                ;ASB       defw     OPTION_MENU_NAME
   4013+                ;ASB       defw     f_null_function
   4013+                ;ASB       defb     8
   4013+                ;ASB       defw     OPTION_MENU_OPTIONS
   4013+                ;ASB       defw     OMENU_OPT1
   4013+                ;ASB       defw     OMENU_OPT2
   4013+                ;ASB       defw     OMENU_OPT3
   4013+                ;ASB       defw     OMENU_OPT4
   4013+                ;ASB       defw     OMENU_OPT5
   4013+                ;ASB       defw     OMENU_OPT6
   4013+                ;ASB       defw     OMENU_OPT7
   4013+                ;ASB       defw     OMENU_OPT8
   4013+                
   4013+                
   4013+                
   4013+                
   4013+0D8D            RULES_MENU_STR0:
   4013+                ;ASB       defm     "SETxRULES"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR1:
   4013+                ;ASB       defm     "DEFENSIVE FOULS"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR2:
   4013+                ;ASB       defm     "CHARGING"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR3:
   4013+                ;ASB       defm     "FOUL OUT"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR4:
   4013+                ;ASB       defm     "OUT OF BOUNDS"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR5:
   4013+                ;ASB       defm     "BACKCOURT"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR6:
   4013+                ;ASB       defm     "TRAVELLING"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR7:
   4013+                ;ASB       defm     "GOALTENDING"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR8:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   97


   4013+                ;ASB       defm     "3 IN THE KEY"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR9:
   4013+                ;ASB       defm     "SHOT CLOCK"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR10:
   4013+                ;ASB       defm     "INBOUND CLOCK"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR11:
   4013+                ;ASB       defm     "HALFCOURT CLOCK"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR12:
   4013+                ;ASB       defm     "INJURIES"
   4013+                ;ASB       defb     0
   4013+0D8D            RULES_MENU_STR13:
   4013+                ;ASB       defm     "FATIGUE"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            RULES_MENU_OPTIONS:
   4013+                ;ASB       defb     24,16
   4013+                ;ASB       defw     RULES_MENU_STR1
   4013+                ;ASB       defb     34,16
   4013+                ;ASB       defw     RULES_MENU_STR2
   4013+                ;ASB       defb     44,16
   4013+                ;ASB       defw     RULES_MENU_STR3
   4013+                ;ASB       defb     54,16
   4013+                ;ASB       defw     RULES_MENU_STR4
   4013+                ;ASB       defb     64,16
   4013+                ;ASB       defw     RULES_MENU_STR5
   4013+                ;ASB       defb     74,16
   4013+                ;ASB       defw     RULES_MENU_STR6
   4013+                ;ASB       defb     84,16
   4013+                ;ASB       defw     RULES_MENU_STR7
   4013+                ;ASB       defb     94,16
   4013+                ;ASB       defw     RULES_MENU_STR8
   4013+                ;ASB       defb     104,16
   4013+                ;ASB       defw     RULES_MENU_STR9
   4013+                ;ASB       defb     114,16
   4013+                ;ASB       defw     RULES_MENU_STR10
   4013+                ;ASB       defb     124,16
   4013+                ;ASB       defw     RULES_MENU_STR11
   4013+                ;ASB       defb     134,16
   4013+                ;ASB       defw     RULES_MENU_STR12
   4013+                ;ASB       defb     144,16
   4013+                ;ASB       defw     RULES_MENU_STR13
   4013+                
   4013+                
   4013+0D8D            RMENU_OPT1A:
   4013+                ;ASB       defm     "0"
   4013+                ;ASB       defb     0
   4013+0D8D            RMENU_OPT1B:
   4013+                ;ASB       defm     "1"
   4013+                ;ASB       defb     0
   4013+0D8D            RMENU_OPT1C:
   4013+                ;ASB       defm     "2"



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   98


   4013+                ;ASB       defb     0
   4013+0D8D            RMENU_OPT1D:
   4013+                ;ASB       defm     "3"
   4013+                ;ASB       defb     0
   4013+0D8D            RMENU_OPT1E:
   4013+                ;ASB       defm     "4"
   4013+                ;ASB       defb     0
   4013+0D8D            RMENU_OPT1F:
   4013+                ;ASB       defm     "5"
   4013+                ;ASB       defb     0
   4013+0D8D            RMENU_OPT1G:
   4013+                ;ASB       defm     "6"
   4013+                ;ASB       defb     0
   4013+0D8D            RMENU_OPT1H:
   4013+                ;ASB       defm     "7"
   4013+                ;ASB       defb     0
   4013+0D8D            RMENU_OPT1I:
   4013+                ;ASB       defm     "8"
   4013+                ;ASB       defb     0
   4013+0D8D            RMENU_OPT1J:
   4013+                ;ASB       defm     "9"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            RMENU_OPT3A:
   4013+                ;ASB       defm     "ON"
   4013+                ;ASB       defb     0
   4013+0D8D            RMENU_OPT3B:
   4013+                ;ASB       defm     "OFF"
   4013+                ;ASB       defb     0
   4013+                
   4013+                
   4013+0D8D            RMENU_OPT1:
   4013+                ;ASB       defb     10
   4013+                ;ASB       defw     rule_dfoul
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     RMENU_OPT1A
   4013+                ;ASB       defw     RMENU_OPT1B
   4013+                ;ASB       defw     RMENU_OPT1C
   4013+                ;ASB       defw     RMENU_OPT1D
   4013+                ;ASB       defw     RMENU_OPT1E
   4013+                ;ASB       defw     RMENU_OPT1F
   4013+                ;ASB       defw     RMENU_OPT1G
   4013+                ;ASB       defw     RMENU_OPT1H
   4013+                ;ASB       defw     RMENU_OPT1I
   4013+                ;ASB       defw     RMENU_OPT1J
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page   99


   4013+                
   4013+0D8D            RMENU_OPT2:
   4013+                ;ASB       defb     10
   4013+                ;ASB       defw     rule_charging
   4013+                ;ASB       defb     34,152
   4013+                ;ASB       defw     RMENU_OPT1A
   4013+                ;ASB       defw     RMENU_OPT1B
   4013+                ;ASB       defw     RMENU_OPT1C
   4013+                ;ASB       defw     RMENU_OPT1D
   4013+                ;ASB       defw     RMENU_OPT1E
   4013+                ;ASB       defw     RMENU_OPT1F
   4013+                ;ASB       defw     RMENU_OPT1G
   4013+                ;ASB       defw     RMENU_OPT1H
   4013+                ;ASB       defw     RMENU_OPT1I
   4013+                ;ASB       defw     RMENU_OPT1J
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+                
   4013+0D8D            RMENU_OPT3:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     rule_foulout
   4013+                ;ASB       defb     44,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RMENU_OPT4:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     rule_outofbounds
   4013+                ;ASB       defb     54,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RMENU_OPT5:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     rule_backcourt
   4013+                ;ASB       defb     64,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RMENU_OPT6:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  100


   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     rule_travelling
   4013+                ;ASB       defb     74,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RMENU_OPT7:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     rule_goaltending
   4013+                ;ASB       defb     84,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RMENU_OPT8:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     rule_3inthekey
   4013+                ;ASB       defb     94,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RMENU_OPT9:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     rule_shot_clock
   4013+                ;ASB       defb     104,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RMENU_OPT10:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     rule_inbound_clock
   4013+                ;ASB       defb     114,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RMENU_OPT11:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     rule_halfcourt_clock
   4013+                ;ASB       defb     124,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RMENU_OPT12:
   4013+                ;ASB       defb     2



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  101


   4013+                ;ASB       defw     rule_injuries
   4013+                ;ASB       defb     134,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RMENU_OPT13:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     rule_fatigue
   4013+                ;ASB       defb     144,152
   4013+                ;ASB       defw     RMENU_OPT3A
   4013+                ;ASB       defw     RMENU_OPT3B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5,BACK_TO_MAIN5
   4013+                
   4013+0D8D            RULES_MENU_NAME:
   4013+                ;ASB       defb     0,60
   4013+                ;ASB       defw     RULES_MENU_STR0
   4013+                ;ASB
   4013+0D8D            RULES_MENU_DESC:
   4013+                ;ASB       defw     RULES_MENU_NAME
   4013+                ;ASB       defw     f_null_function
   4013+                ;ASB       defb     13
   4013+                ;ASB       defw     RULES_MENU_OPTIONS
   4013+                ;ASB       defw     RMENU_OPT1
   4013+                ;ASB       defw     RMENU_OPT2
   4013+                ;ASB       defw     RMENU_OPT3
   4013+                ;ASB       defw     RMENU_OPT4
   4013+                ;ASB       defw     RMENU_OPT5
   4013+                ;ASB       defw     RMENU_OPT6
   4013+                ;ASB       defw     RMENU_OPT7
   4013+                ;ASB       defw     RMENU_OPT8
   4013+                ;ASB       defw     RMENU_OPT9
   4013+                ;ASB       defw     RMENU_OPT10
   4013+                ;ASB       defw     RMENU_OPT11
   4013+                ;ASB       defw     RMENU_OPT12
   4013+                ;ASB       defw     RMENU_OPT13
   4013+                
   4013+                
   4013+                
   4013+0D8D            ROSTER_MENU_STR0:
   4013+                ;ASB       defm     "ROSTERxSETUP"
   4013+                ;ASB       defb     0
   4013+0D8D            ROSTER_MENU_STR1:
   4013+                ;ASB       defm     "TRADE PLAYERS"
   4013+                ;ASB       defb     0
   4013+0D8D            ROSTER_MENU_STR2:
   4013+                ;ASB       defm     "REORDER ROSTER"
   4013+                ;ASB       defb     0
   4013+0D8D            ROSTER_MENU_STR3:
   4013+                ;ASB       defm     "CREATE PLAYER"
   4013+                ;ASB       defb     0
   4013+0D8D            ROSTER_MENU_STR4:
   4013+                ;ASB       defm     "EDIT PLAYER"



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  102


   4013+                ;ASB       defb     0
   4013+0D8D            ROSTER_MENU_STR5:
   4013+                ;ASB       defm     "DELETE PLAYER"
   4013+                ;ASB       defb     0
   4013+0D8D            ROSTER_MENU_STR6:
   4013+                ;ASB       defm     "RETURN TO MAIN MENU"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            ROSTER_MENU_OPTIONS:
   4013+                ;ASB       defb     32,48
   4013+                ;ASB       defw     ROSTER_MENU_STR1
   4013+                ;ASB       defb     48,44
   4013+                ;ASB       defw     ROSTER_MENU_STR2
   4013+                ;ASB       defb     64,48
   4013+                ;ASB       defw     ROSTER_MENU_STR3
   4013+                ;ASB       defb     80,46
   4013+                ;ASB       defw     ROSTER_MENU_STR4
   4013+                ;ASB       defb     96,48
   4013+                ;ASB       defw     ROSTER_MENU_STR5
   4013+                ;ASB       defb     112,28
   4013+                ;ASB       defw     ROSTER_MENU_STR6
   4013+                
   4013+                
   4013+0D8D            ROSTER_OPT1:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,DOWN_TO_TRADE,DOWN_TO_TRADE,DOWN_TO_TRADE,DOWN_TO_TRADE
   4013+                
   4013+0D8D            ROSTER_OPT2:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,DOWN_TO_REORDER,DOWN_TO_REORDER,DOWN_TO_REORDER,DOWN_TO_REORD
   4013+                
   4013+0D8D            ROSTER_OPT3:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,DOWN_TO_CREATE,DOWN_TO_CREATE,DOWN_TO_CREATE,DOWN_TO_CREATE
   4013+                
   4013+0D8D            ROSTER_OPT4:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION,NULL_FUNCTION
   4013+                
   4013+                
   4013+0D8D            ROSTER_OPT5:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  103


   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,DOWN_TO_DELETE,DOWN_TO_DELETE,DOWN_TO_DELETE,DOWN_TO_DELETE
   4013+                
   4013+0D8D            ROSTER_OPT6:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,BACK_TO_MAIN6,BACK_TO_MAIN6,BACK_TO_MAIN6,BACK_TO_MAIN6
   4013+                
   4013+0D8D            ROSTER_MENU_NAME:
   4013+                ;ASB       defb     0,52
   4013+                ;ASB       defw     ROSTER_MENU_STR0
   4013+                
   4013+0D8D            ROSTER_MENU_DESC:
   4013+                ;ASB       defw     ROSTER_MENU_NAME
   4013+                ;ASB       defw     f_null_function
   4013+                ;ASB       defb     6
   4013+                ;ASB       defw     ROSTER_MENU_OPTIONS
   4013+                ;ASB       defw     ROSTER_OPT1
   4013+                ;ASB       defw     ROSTER_OPT2
   4013+                ;ASB       defw     ROSTER_OPT3
   4013+                ;ASB       defw     ROSTER_OPT4
   4013+                ;ASB       defw     ROSTER_OPT5
   4013+                ;ASB       defw     ROSTER_OPT6
   4013+                
   4013+                
   4013+                
   4013+0D8D            TRADE_MENU_STR0:
   4013+                ;ASB       defm     "TRADExPLAYERS"
   4013+                ;ASB       defb     0
   4013+0D8D            TRADE_MENU_STR1:
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            TRADE_MENU_OPTIONS:
   4013+                ;ASB       defb     48,24
   4013+                ;ASB       defw     TRADE_MENU_STR1
   4013+                
   4013+                
   4013+0D8D            TRADE_OPT1:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_PLAYER,INC_PLAYER,DEC_STATLOC,INC_STATLOC,DEC_TEAM,SELECT_4TRADE,INC_TEAM,BACK_TO_ROSTER0
   4013+                
   4013+0D8D            TRADE_MENU_NAME:
   4013+                ;ASB       defb     0,52
   4013+                ;ASB       defw     TRADE_MENU_STR0
   4013+                
   4013+0D8D            TRADE_MENU_DESC:
   4013+                ;ASB       defw     TRADE_MENU_NAME
   4013+                ;ASB       defw     show_trade_info
   4013+                ;ASB       defb     1



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  104


   4013+                ;ASB       defw     TRADE_MENU_OPTIONS
   4013+                ;ASB       defw     TRADE_OPT1
   4013+                
   4013+                
   4013+                
   4013+0D8D            REORDER_MENU_STR0:
   4013+                ;ASB       defm     "REORDERxROSTER"
   4013+                ;ASB       defb     0
   4013+0D8D            REORDER_OPT1:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_PLAYER,INC_PLAYER,DEC_STATLOC,INC_STATLOC,DEC_TEAMX,SELECT_4REORDER,INC_TEAMX,BACK_TO_ROSTER1
   4013+                
   4013+0D8D            REORDER_MENU_NAME:
   4013+                ;ASB       defb     0,52
   4013+                ;ASB       defw     REORDER_MENU_STR0
   4013+                
   4013+0D8D            REORDER_MENU_DESC:
   4013+                ;ASB       defw     REORDER_MENU_NAME
   4013+                ;ASB       defw     show_trade_info
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     TRADE_MENU_OPTIONS
   4013+                ;ASB       defw     REORDER_OPT1
   4013+                
   4013+                
   4013+0D8D            CREATE1_MENU_S0:
   4013+                ;ASB       defm     "ENTERxLASTxNAME"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE1_MENU_S1:
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            CREATE1_MENU_OPTIONS:
   4013+                ;ASB       defb     48,24
   4013+                ;ASB       defw     CREATE1_MENU_S1
   4013+                
   4013+                
   4013+0D8D            CREATE1_OPT1:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_LETTER10,INC_LETTER10,DEC_LETTER,INC_LETTER,DELETE_LETTER,ENTER_LETTER,BACK_TO_ROSTER2,BACK_TO_ROSTER2
   4013+                
   4013+0D8D            CREATE1_MENU_NAME:
   4013+                ;ASB       defb     0,40
   4013+                ;ASB       defw     CREATE1_MENU_S0
   4013+                
   4013+0D8D            CREATE1_MENU_DESC:
   4013+                ;ASB       defw     CREATE1_MENU_NAME
   4013+                ;ASB       defw     show_keyboard_info
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     CREATE1_MENU_OPTIONS
   4013+                ;ASB       defw     CREATE1_OPT1



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  105


   4013+                
   4013+                
   4013+                
   4013+0D8D            CREATE2_MENU_S0:
   4013+                ;ASB       defm     "ENTERxFIRSTxNAME"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE2_MENU_S1:
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            CREATE2_MENU_OPTIONS:
   4013+                ;ASB       defb     48,24
   4013+                ;ASB       defw     CREATE2_MENU_S1
   4013+                
   4013+                
   4013+0D8D            CREATE2_OPT1:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_LETTER10,INC_LETTER10,DEC_LETTER,INC_LETTER,DELETE_LETTER,ENTER_LETTER,BACK_TO_CREATE1,BACK_TO_CREATE1
   4013+                
   4013+0D8D            CREATE2_MENU_NAME:
   4013+                ;ASB       defb     0,40
   4013+                ;ASB       defw     CREATE2_MENU_S0
   4013+                
   4013+0D8D            CREATE2_MENU_DESC:
   4013+                ;ASB       defw     CREATE2_MENU_NAME
   4013+                ;ASB       defw     show_keyboard_info
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     CREATE2_MENU_OPTIONS
   4013+                ;ASB       defw     CREATE2_OPT1
   4013+                
   4013+                
   4013+                
   4013+                
   4013+                
   4013+0D8D            CREATE3_MENU_S0:
   4013+                ;ASB       defm     "CREATExPLAYER"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE3_MENU_S1:
   4013+                ;ASB       defm     "NAME:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE3_MENU_S2:
   4013+                ;ASB       defm     "HEAD:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE3_MENU_S3:
   4013+                ;ASB       defm     "PLAYER:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE3_MENU_S4:
   4013+                ;ASB       defm     "JERSEY:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE3_MENU_S5:
   4013+                ;ASB       defm     "HEIGHT:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE3_MENU_S6:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  106


   4013+                ;ASB       defm     "WEIGHT:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE3_MENU_S7:
   4013+                ;ASB       defm     "HAND:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE3_MENU_S8:
   4013+                ;ASB       defm     "POSITION:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE3_MENU_S9:
   4013+                ;ASB       defm     "SET ATTRIBUTES"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            CREATE3_MENU_OPTIONS:
   4013+                ;ASB       defb     32,24
   4013+                ;ASB       defw     CREATE3_MENU_S1
   4013+                ;ASB       defb     32,24
   4013+                ;ASB       defw     CREATE3_MENU_S1
   4013+                ;ASB       defb     44,24
   4013+                ;ASB       defw     CREATE3_MENU_S2
   4013+                ;ASB       defb     56,24
   4013+                ;ASB       defw     CREATE3_MENU_S3
   4013+                ;ASB       defb     68,24
   4013+                ;ASB       defw     CREATE3_MENU_S4
   4013+                ;ASB       defb     80,24
   4013+                ;ASB       defw     CREATE3_MENU_S5
   4013+                ;ASB       defb     92,24
   4013+                ;ASB       defw     CREATE3_MENU_S6
   4013+                ;ASB       defb     104,24
   4013+                ;ASB       defw     CREATE3_MENU_S7
   4013+                ;ASB       defb     116,24
   4013+                ;ASB       defw     CREATE3_MENU_S8
   4013+                ;ASB       defb     128,24
   4013+                ;ASB       defw     CREATE3_MENU_S9
   4013+                
   4013+                
   4013+0D8D            CREATE3_OPT1F
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,BACK_TO_CREATE2,BACK_TO_CREATE2,BACK_TO_CREATE2,BACK_TO_CREAT
   4013+                
   4013+0D8D            CREATE3_OPT1L
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,BACK_TO_CREATE1,BACK_TO_CREATE1,BACK_TO_CREATE1,BACK_TO_CREAT
   4013+                
   4013+0D8D            CREATE3_OPT1:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,NULL_FUNCTION,NULL_FUNCTION,END_CREATE,END_CREATE,END_CREATE,END_CREATE



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  107


   4013+                
   4013+0D8D            CMENU3_OPT3A:
   4013+                ;ASB       defm     "1"
   4013+                ;ASB       defb     0
   4013+0D8D            CMENU3_OPT3B:
   4013+                ;ASB       defm     "2"
   4013+                ;ASB       defb     0
   4013+0D8D            CMENU3_OPT3C:
   4013+                ;ASB       defm     "3"
   4013+                ;ASB       defb     0
   4013+0D8D            CMENU3_OPT3D:
   4013+                ;ASB       defm     "4"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            CREATE3_OPT3:
   4013+                ;ASB       defb     4
   4013+                ;ASB       defw     player_stype
   4013+                ;ASB       defb     56,104
   4013+                ;ASB       defw     CMENU3_OPT3A
   4013+                ;ASB       defw     CMENU3_OPT3B
   4013+                ;ASB       defw     CMENU3_OPT3C
   4013+                ;ASB       defw     CMENU3_OPT3D
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,END_CREATE,END_CREATE,END_CREATE,END_CREATE
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,END_CREATE,END_CREATE,END_CREATE,END_CREATE
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,END_CREATE,END_CREATE,END_CREATE,END_CREATE
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,END_CREATE,END_CREATE,END_CREATE,END_CREATE
   4013+                
   4013+                
   4013+0D8D            CREATE3_OPT4:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_PNUM,INC_PNUM,END_CREATE,END_CREATE,END_CREATE,END_CREATE
   4013+                
   4013+                
   4013+0D8D            CREATE3_OPT5:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_PHEIGHT,INC_PHEIGHT,END_CREATE,END_CREATE,END_CREATE,END_CREATE
   4013+                
   4013+                
   4013+0D8D            CREATE3_OPT6:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_PWEIGHT,INC_PWEIGHT,END_CREATE,END_CREATE,END_CREATE,END_CREATE
   4013+                
   4013+                
   4013+                
   4013+0D8D            CMENU3_OPT7A:
   4013+                ;ASB       defm     "RIGHT"



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  108


   4013+                ;ASB       defb     0
   4013+0D8D            CMENU3_OPT7B:
   4013+                ;ASB       defm     "LEFT"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            CREATE3_OPT7:
   4013+                ;ASB       defb     2
   4013+                ;ASB       defw     player_handed
   4013+                ;ASB       defb     104,104
   4013+                ;ASB       defw     CMENU3_OPT7A
   4013+                ;ASB       defw     CMENU3_OPT7B
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,END_CREATE,END_CREATE,END_CREATE,END_CREATE
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,END_CREATE,END_CREATE,END_CREATE,END_CREATE
   4013+                
   4013+                
   4013+0D8D            CREATE3_OPT8:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     116,104
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_POSITION,INC_POSITION,END_CREATE,END_CREATE,END_CREATE,END_CREATE
   4013+                
   4013+                
   4013+0D8D            CREATE3_OPT9:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     104,104
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_VALUE,INC_VALUE,DOWN_TO_CREATE4,DOWN_TO_CREATE4,DOWN_TO_CREATE4,DOWN_TO_CREATE4
   4013+                
   4013+                
   4013+0D8D            CREATE3_MENU_NAME:
   4013+                ;ASB       defb     0,40
   4013+                ;ASB       defw     CREATE3_MENU_S0
   4013+                
   4013+0D8D            CREATE3_MENU_DESC:
   4013+                ;ASB       defw     CREATE3_MENU_NAME
   4013+                ;ASB       defw     show_create3_info
   4013+                ;ASB       defb     10
   4013+                ;ASB       defw     CREATE3_MENU_OPTIONS
   4013+                ;ASB       defw     CREATE3_OPT1F
   4013+                ;ASB       defw     CREATE3_OPT1L
   4013+                ;ASB       defw     CREATE3_OPT1
   4013+                ;ASB       defw     CREATE3_OPT3
   4013+                ;ASB       defw     CREATE3_OPT4
   4013+                ;ASB       defw     CREATE3_OPT5
   4013+                ;ASB       defw     CREATE3_OPT6
   4013+                ;ASB       defw     CREATE3_OPT7
   4013+                ;ASB       defw     CREATE3_OPT8
   4013+                ;ASB       defw     CREATE3_OPT9
   4013+                
   4013+                
   4013+                
   4013+                
   4013+0D8D            CREATE4_MENU_S0:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  109


   4013+                ;ASB       defm     "SETxATTRIBUTES"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE4_MENU_S1:
   4013+                ;ASB       defm     "SCORING:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE4_MENU_S2:
   4013+                ;ASB       defm     "REBOUND"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE4_MENU_S3:
   4013+                ;ASB       defm     "CONTROL:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE4_MENU_S4:
   4013+                ;ASB       defm     "DEFENSE:"
   4013+                ;ASB       defb     0
   4013+0D8D            CREATE4_MENU_S5:
   4013+                ;ASB       defm     "OVERALL:"
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            CREATE4_MENU_OPTIONS:
   4013+                ;ASB       defb     46,24
   4013+                ;ASB       defw     CREATE4_MENU_S1
   4013+                ;ASB       defb     58,24
   4013+                ;ASB       defw     CREATE4_MENU_S2
   4013+                ;ASB       defb     70,24
   4013+                ;ASB       defw     CREATE4_MENU_S3
   4013+                ;ASB       defb     82,24
   4013+                ;ASB       defw     CREATE4_MENU_S4
   4013+                ;ASB       defb     94,24
   4013+                ;ASB       defw     CREATE4_MENU_S5
   4013+                
   4013+                
   4013+0D8D            CREATE4_OPT1:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_SELECT,INC_SELECT,DEC_SVALUE,INC_SVALUE,BACK_TO_CREATE3,BACK_TO_CREATE3,BACK_TO_CREATE3,BACK_TO_CREATE3
   4013+                
   4013+                
   4013+                
   4013+0D8D            CREATE4_MENU_NAME:
   4013+                ;ASB       defb     0,40
   4013+                ;ASB       defw     CREATE4_MENU_S0
   4013+                
   4013+0D8D            CREATE4_MENU_DESC:
   4013+                ;ASB       defw     CREATE4_MENU_NAME
   4013+                ;ASB       defw     f_null_function
   4013+                ;ASB       defb     5
   4013+                ;ASB       defw     CREATE4_MENU_OPTIONS
   4013+                ;ASB       defw     CREATE4_OPT1
   4013+                ;ASB       defw     CREATE4_OPT1
   4013+                ;ASB       defw     CREATE4_OPT1
   4013+                ;ASB       defw     CREATE4_OPT1
   4013+                ;ASB       defw     CREATE4_OPT1
   4013+                



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  110


   4013+                
   4013+                
   4013+                
   4013+0D8D            DELETE_MENU_STR0:
   4013+                ;ASB       defm     "DELETExPLAYER"
   4013+                ;ASB       defb     0
   4013+0D8D            DELETE_MENU_STR1:
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            DELETE_MENU_OPTIONS:
   4013+                ;ASB       defb     48,24
   4013+                ;ASB       defw     DELETE_MENU_STR1
   4013+                
   4013+                
   4013+0D8D            DELETE_OPT1:
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     null_option
   4013+                ;ASB       defb     24,152
   4013+                ;ASB       defw     NULL_OPTION_STR
   4013+                ;ASB       defb     DEC_PDELETE,INC_PDELETE,NULL_FUNCTION,NULL_FUNCTION,BACK_TO_ROSTER4,BACK_TO_ROSTER4,BACK_TO_ROSTER4,BACK_TO_ROS
   4013+                
   4013+0D8D            DELETE_MENU_NAME:
   4013+                ;ASB       defb     0,52
   4013+                ;ASB       defw     DELETE_MENU_STR0
   4013+                
   4013+0D8D            DELETE_MENU_DESC:
   4013+                ;ASB       defw     DELETE_MENU_NAME
   4013+                ;ASB       defw     show_delete_info
   4013+                ;ASB       defb     1
   4013+                ;ASB       defw     DELETE_MENU_OPTIONS
   4013+                ;ASB       defw     DELETE_OPT1
   4013+                
   4013+                
   4013+                
   4013+                
   4013+0D8D            SEASON_STR0:
   4013+                ;ASB       defm     '98/99 SEASON'
   4013+                ;ASB       defb     0
   4013+0D8D            SEASON_STRING:
   4013+                ;ASB       defb     84,16
   4013+                ;ASB       defw     SEASON_STR0
   4013+0D8D            SEASON_STRING2:
   4013+                ;ASB       defb     68,16
   4013+                ;ASB       defw     SEASON_STR0
   4013+                
   4013+0D8D            STATS_STR0A:
   4013+                ;ASB       defm     'HEIGHT'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR1A:
   4013+                ;ASB       defm     'WEIGHT'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR2A:
   4013+                ;ASB       defm     'GAMES'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR2B:



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  111


   4013+                ;ASB       defm     'PLAYED'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR3B:
   4013+                ;ASB       defm     'STARTED'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR4A:
   4013+                ;ASB       defm     'TOTAL'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR4B:
   4013+                ;ASB       defm     'POINTS'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR5A:
   4013+                ;ASB       defm     'POINTS'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR5B:
   4013+                ;ASB       defm     'PER GAME'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR6A:
   4013+                ;ASB       defm     'TOTAL'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR6B:
   4013+                ;ASB       defm     'MINUTES'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR7A:
   4013+                ;ASB       defm     'MINUTES'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR7B:
   4013+                ;ASB       defm     'PER GAME'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR8A:
   4013+                ;ASB       defm     'FG'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR8B:
   4013+                ;ASB       defm     'MADE ATT'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR9B:
   4013+                ;ASB       defm     'PERCENTAGE'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR10A:
   4013+                ;ASB       defm     '3 POINT'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR12A:
   4013+                ;ASB       defm     'FREE THROW'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR14A:
   4013+                ;ASB       defm     'OFFENSIVE'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR14B:
   4013+                ;ASB       defm     'REBOUNDS'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR15A:
   4013+                ;ASB       defm     'DEFENSIVE'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR16A:
   4013+                ;ASB       defm     'BLOCKS'



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  112


   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR17A:
   4013+                ;ASB       defm     'STEALS'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR18A:
   4013+                ;ASB       defm     'ASSISTS'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR19A:
   4013+                ;ASB       defm     'TURNOVERS'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR20A:
   4013+                ;ASB       defm     'FOULS'
   4013+                ;ASB       defb     0
   4013+0D8D            STATS_STR21A:
   4013+                ;ASB       defm     'EJECTIONS'
   4013+                ;ASB       defb     0
   4013+                
   4013+0D8D            stats_stableA:
   4013+                ;ASB       defw     STATS_STR0A
   4013+                ;ASB       defw     STATS_STR1A
   4013+                ;ASB       defw     STATS_STR2A
   4013+                ;ASB       defw     STATS_STR2A
   4013+                ;ASB       defw     STATS_STR4A
   4013+                ;ASB       defw     STATS_STR5A
   4013+                ;ASB       defw     STATS_STR6A
   4013+                ;ASB       defw     STATS_STR7A
   4013+                ;ASB       defw     STATS_STR8A
   4013+                ;ASB       defw     STATS_STR8A
   4013+                ;ASB       defw     STATS_STR10A
   4013+                ;ASB       defw     STATS_STR10A
   4013+                ;ASB       defw     STATS_STR12A
   4013+                ;ASB       defw     STATS_STR12A
   4013+                ;ASB       defw     STATS_STR14A
   4013+                ;ASB       defw     STATS_STR15A
   4013+                ;ASB       defw     STATS_STR16A
   4013+                ;ASB       defw     STATS_STR17A
   4013+                ;ASB       defw     STATS_STR18A
   4013+                ;ASB       defw     STATS_STR19A
   4013+                ;ASB       defw     STATS_STR20A
   4013+                ;ASB       defw     STATS_STR21A
   4013+                
   4013+0D8D            stats_stableB:
   4013+                ;ASB       defw     0
   4013+                ;ASB       defw     0
   4013+                ;ASB       defw     STATS_STR2B
   4013+                ;ASB       defw     STATS_STR3B
   4013+                ;ASB       defw     STATS_STR4B
   4013+                ;ASB       defw     STATS_STR5B
   4013+                ;ASB       defw     STATS_STR6B
   4013+                ;ASB       defw     STATS_STR7B
   4013+                ;ASB       defw     STATS_STR8B
   4013+                ;ASB       defw     STATS_STR9B
   4013+                ;ASB       defw     STATS_STR8B
   4013+                ;ASB       defw     STATS_STR9B
   4013+                ;ASB       defw     STATS_STR8B



Fighter  SM8521 Assembler V1.10            Wed Dec 23 17:38:09 1998  Page  113


   4013+                ;ASB       defw     STATS_STR9B
   4013+                ;ASB       defw     STATS_STR14B
   4013+                ;ASB       defw     STATS_STR14B
   4013+                ;ASB       defw     0
   4013+                ;ASB       defw     0
   4013+                ;ASB       defw     0
   4013+                ;ASB       defw     0
   4013+                ;ASB       defw     0
   4013+                ;ASB       defw     0
   4014                 ;ASB        include  option2.asm
   4015                        
   4016 0D8D                    end
