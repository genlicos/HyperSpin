


Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page    1


      1                 	title   Centipede Frogger opening series
      2                 	type    8521
      3                 
      4                 ;============================================================================
      5                 ;
      6                 ;           Includes and equates
      7                 ;
      8                 ;----------------------------------------------------------------------------
      9                 
     10                 	include frogger.tmp
     10+                             data
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; Game Equates
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+     0008       MaxPlayers	equ	8
     10+     000C       MaxLevels	equ	12
     10+     0009       NumBands	equ	9
     10+     0004       NumStrips	equ	4
     10+     0008       NumAnims	equ	8
     10+     0012       NumSAnims	equ	NumBands*2
     10+     0013       NumSounds	equ	19
     10+                
     10+     4E00       TimerFull	equ	04e00h	;78*256 is full time per level
     10+     0007       TimerDec	equ	7	;timer decrease per loop
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; Game Equates: Game.Com Control
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+     0000       ini_game        EQU     0   ; INITIAL
     10+     0001       exe_game        EQU     1   ; EXECUTE
     10+     0002       close_game      EQU     2   ; CLOSE GAME
     10+     0003       reset_game      EQU     3   ; RESET
     10+     0426       frogger_id      equ     0426h
     10+                
     10+     0000       override        equ     00h
     10+     0001       composite       equ     01h
     10+     0040       left_right      equ     40h
     10+     0080       up_down         equ     80h
     10+     00C0       lr_up           equ     0c0h
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; Game Equates: Scoring
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+     000A       SCORE_forward equ	10
     10+     0032       SCORE_home	equ	50



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page    2


     10+     03E8       SCORE_five	equ	1000
     10+     00C8       SCORE_lady	equ	200
     10+     00C8       SCORE_fly	equ	200
     10+     000A       SCORE_time	equ	10
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; Game Equates: Home Bases
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+     000C       HomeBase1	equ	12
     10+     0034       HomeBase2	equ	52
     10+     005C       HomeBase3	equ	92
     10+     0084       HomeBase4	equ	132
     10+     00AC       HomeBase5	equ	172
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; Game Structures
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+                ; ROM
     10+                
     10+                	; Game Data
     10+                                         ;                 struct      
     10+     0000       GameLevel        equ 0   ;GameLevel        word    1   
     10+     0002       GameMult         equ 2   ;GameMult         byte    1   
     10+     0003       GameDiv          equ 3   ;GameDiv          byte    1   
     10+     0004       GameFrogX        equ 4   ;GameFrogX        byte    1   
     10+     0005       GameFrogY        equ 5   ;GameFrogY        byte    1   
     10+     0006       GameSize         equ 6   ;GameSize         size        
     10+                
     10+                	; Level Data
     10+                                         ;                 struct      
     10+     0000       LevelFlags       equ 0   ;LevelFlags       byte    1   
     10+                ;                equ 1   ;;                byte    1   
     10+     0002       LevelBaseU       equ 2   ;LevelBaseU       byte    1   
     10+     0003       LevelBaseF       equ 3   ;LevelBaseF       byte    1   
     10+     0004       LevelIncM        equ 4   ;LevelIncM        byte    1   
     10+     0005       LevelIncD        equ 5   ;LevelIncD        byte    1   
     10+     0006       LevelDecM        equ 6   ;LevelDecM        byte    1   
     10+     0007       LevelDecD        equ 7   ;LevelDecD        byte    1   
     10+     0008       LevelStrips      equ 8   ;LevelStrips      byte    4   ;NumStrips
     10+     000C       LevelSize        equ 12  ;LevelSize        size        
     10+                
     10+                	;Level Data: strip byte values
     10+                
     10+     0000       StripStill	equ	0	;Frog doesn't move and is safe
     10+     0001       StripMove	equ	1	;Frog is moving and is safe
     10+     0002       StripHome	equ	2	;Frog has reached home
     10+     0003       StripWall	equ	3	;Frog can't go here: wall
     10+     0004       StripWDead	equ	4	;Frog dies in water
     10+     0005       StripXDead	equ	5	;Frog Dies not in water



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page    3


     10+     000A       StripBDead	equ	10	;Frog can't move here, trying dies
     10+                
     10+                	; Anim Data
     10+                                         ;                 struct      
     10+     0000       AnimStrip        equ 0   ;AnimStrip        byte    1   ;the art strip holding the anim
     10+     0001       AnimWidth        equ 1   ;AnimWidth        byte    1   ;width of anim in 8 pixel pieces
     10+     0002       AnimNum          equ 2   ;AnimNum          byte    1   ;Number of frames in animation
     10+     0003       AnimPal          equ 3   ;AnimPal          byte    1   ;Palette
     10+     0004       AnimStripX       equ 4   ;AnimStripX       byte    1   ;Number of 8 bit pixels into strip
     10+     0005       AnimMove         equ 5   ;AnimMove         byte    1   ;Number of pixels movement each frame
     10+     0006       AnimSize         equ 6   ;AnimSize         size        ;size of header
     10+     0006       AnimTicks        equ 6   ;AnimTicks        byte    1   ;start of frame tickers
     10+                
     10+                	; Strip Animation
     10+                                         ;                 struct      
     10+     0000       SAnimNum         equ 0   ;SAnimNum         byte    1   ;number of frames in the animation
     10+     0001       SAnimTick        equ 1   ;SAnimTick        byte    1   ;Number of ticks between frames
     10+     0002       SAnimStrips      equ 2   ;SAnimStrips      byte    1   ;The first strip in the list of animating strips
     10+                
     10+                ; RAM
     10+                	; Player Data
     10+                                         ;                 struct      
     10+     0000       PlayerScore      equ 0   ;PlayerScore      word    1   
     10+     0002       PlayerLevel      equ 2   ;PlayerLevel      byte    1   
     10+     0003       PlayerLives      equ 3   ;PlayerLives      byte    1   
     10+     0004       PlayerHomeF      equ 4   ;PlayerHomeF      byte    1   
     10+     0005       PlayerUnused     equ 5   ;PlayerUnused     byte    1   
     10+     0006       PlayerVSize      equ 6   ;PlayerVSize      size        
     10+                
     10+                	; Level Data
     10+                                         ;                 struct      
     10+     0000       LevelSpeedU      equ 0   ;LevelSpeedU      byte    1   ;composite (current) speed
     10+     0001       LevelSpeedF      equ 1   ;LevelSpeedF      byte    1   ;
     10+     0002       LevelVFlags      equ 2   ;LevelVFlags      byte    1   
     10+     0003       LevelOffset      equ 3   ;LevelOffset      byte    1   ;offset (LevelStrips - +3) to left strip number
     10+     0004       LevelPageA       equ 4   ;LevelPageA       byte    1   ;Art page
     10+     0005       LevelYoffA       equ 5   ;LevelYoffA       byte    1   ;Art yoffset
     10+     0006       LevelAddr1       equ 6   ;LevelAddr1       word    1   ;Left Strip table address
     10+     0008       LevelAddr2       equ 8   ;LevelAddr2       word    1   ;Right strip table address
     10+     000A       LevelPage1       equ 10  ;LevelPage1       byte    1   ;Left or unmoving art page
     10+     000B       LevelPage2       equ 11  ;LevelPage2       byte    1   ;Right or unused art page
     10+     000C       LevelYoff1       equ 12  ;LevelYoff1       byte    1   ;Left or unmoving art offset
     10+     000D       LevelYoff2       equ 13  ;LevelYoff2       byte    1   ;Right or unused art offset
     10+     000E       LevelXoff1       equ 14  ;LevelXoff1       byte    1   ;Left X offset for art (pixels)
     10+     000F       LevelXofff       equ 15  ;LevelXofff       byte    1   ;Left X offset fraction (pixels)
     10+     0010       LevelVSize       equ 16  ;LevelVSize       size        
     10+                
     10+                	; Animation Data
     10+                                         ;                 struct      
     10+     0000       AnimBand         equ 0   ;AnimBand         word    1   ;Band animation is on
     10+     0002       AnimAnim         equ 2   ;AnimAnim         word    1   ;which animation am I controlling
     10+     0004       AnimXOff         equ 4   ;AnimXOff         word    1   ;offset from left edge of screen (+100h)
     10+     0006       AnimXOffH        equ 6   ;AnimXOffH        byte    1   ;X offset high value
     10+     0007       AnimFNum         equ 7   ;AnimFNum         byte    1   ;the frame number currently diplayed
     10+     0008       AnimFTick        equ 8   ;AnimFTick        byte    1   ;how many ticks left till anim changes



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page    4


     10+     0009       AnimRange        equ 9   ;AnimRange        byte    1   ;width of animation area in pixels
     10+     000A       AnimVFlags       equ 10  ;AnimVFlags       byte    1   ;flags
     10+     000B       AnimXRel         equ 11  ;AnimXRel         word    1   ;relative position in area U.F
     10+     000D       AnimYOff         equ 13  ;AnimYOff         byte    1   ;offset from top of screen
     10+     000E       AnimCall         equ 14  ;AnimCall         byte    1   ;routine to call (1 to ...)
     10+     000F       AnimVSize        equ 15  ;AnimVSize        size        
     10+                
     10+                	;Strip Animation
     10+                                         ;                 struct      
     10+     0000       SAnimTime        equ 0   ;SAnimTime        byte    1   ;Time left before change
     10+     0001       SAnimCur         equ 1   ;SAnimCur         byte    1   ;current strip in animation
     10+     0002       SAnimVSize       equ 2   ;SAnimVSize       size        
     10+                
     10+                ; these two flags are also copied to LevelVFlag
     10+     0001       LevelFlagS	equ	01h  	;Art does not move
     10+     0002       LevelFlagH	equ	02h	;Art doesn't h-flip on direction change
     10+                
     10+     0080       LevelVFlagD	equ	80h	;80h= left to right
     10+     0040       LevelVFlagH	equ	40h	;last byte processed was anim header
     10+     0020       LevelVFlagT	equ	20h	;last byte processed was anim non-header
     10+                
     10+     0080       AnimVFlagD	equ	80h	;anim moving left to right
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; Game States
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+     0000       Game_Open	equ	0
     10+     0001       Game_Menus	equ	1
     10+     0002       Game_Init	equ	2
     10+     0003       Game_Next	equ	3	;go to next (or first, or only)
     10+     0004       Game_Play	equ	4
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; Zero Page Ram (0beh-0ffh)
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+00BE                         org     0beh
     10+00BE            HoldSP      defs    2                   ;hold the game SP
     10+00C0            CursorX     defs    1                   ;Cursor X,Y
     10+00C1            CursorY     defs    1                   ;
     10+00C2            GameState   defs    1                   ;game state
     10+00C3            NumPlayers  defs    1                   ;1-MaxPlayers
     10+00C4            GameMode    defs    1                   ;0=Arcade, 1=Tiger
     10+00C5            Difficulty  defs    1                   ;0=Easy, 1=Arcade
     10+00C6            Lives       defs    1                   ;3-5
     10+00C7            Continue    defs    1                   ;0=Off, 1=On
     10+00C8            StartLevel  defs    1                   ;1-5
     10+00C9            Paused      defs    1                   ;1=game paused
     10+00CA            SfxOn       defs    1                   ;1=Sound Effects on
     10+00CB            MusicOn     defs    1                   ;1=Music On



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page    5


     10+00CC            DemoMode    defs    1                   ;1=Demo, 0=regular
     10+00CD            sound_flag	defs	1
     10+00CE            Timer	defs	2	;Time on level remaining (4E00h=full time)
     10+                
     10+00D0            temp0w      defs    2                   ;work areas word
     10+00D2            temp1w      defs    2                   ;work areas word
     10+00D4            temp0       defs    1                   ;work areas
     10+00D5            temp1       defs    1                   ;work areas
     10+00D6            temp2       defs    1                   ;work areas
     10+                
     10+                	; Game Data
     10+                
     10+00D7            NextPlayer	defs	1
     10+00D8            PlayerVAddr	defs	2
     10+00DA            LevelAddr	defs	2
     10+                
     10+                	; Frog animation controls
     10+                
     10+00DC            FrogX	defs	2	;Current screen X
     10+00DE            FrogY	defs	1	;Current screen Y
     10+00DF            FrogMinY	defs	1	;Current minimum Y for scoring
     10+00E0            FrogTick	defs	1	;Ticks till next move
     10+00E1            FrogDir	defs	1	;1=S, 2=N, 3=E, 4=W, 0=sitting
     10+00E2            FrogCnt	defs	1	;Count of remaining animations
     10+00E3            FrogFlags	defs	1	;Frog Flags
     10+00E4            FrogPage	defs	1	;page of frog art
     10+00E5            FrogArtX	defs	1	;x of frog art
     10+00E6            FrogArtY	defs	1	;y of frog art
     10+00E7            FrogRest	defs	1	;resting animation
     10+                
     10+00E8            TargetX	defs	1	;Where Frog will be for texting
     10+00E9            TargetY	defs	1	;
     10+                
     10+00EA            LastKey	defs	1	;Last Key entered
     10+                
     10+00EB            hold_byte1	defs	1
     10+                
     10+     0080       FrogFlagM	equ	80h	;on if moving with strip
     10+                
     10+     0001       FrogDirS	equ	1	;moving south
     10+     0002       FrogDirN	equ	2	;moving north
     10+     0003       FrogDirE	equ	3	;moving east
     10+     0004       FrogDirW	equ	4	;moving west
     10+     0005       FrogDirXW	equ	5	;dying waterdeath
     10+     0006       FrogDirXL	equ	6	;dying landdeath
     10+                
     10+     0002       FrogSpeed	equ	2	;Number of ticks per move
     10+     0004       FrogMoves	equ	4	;Number of movement pixels
     10+     0004       FrogFrames	equ	4	;Number of frames
     10+                
     10+00EC            ZZZ	defs	10
     10+                
     10+00F6            testff:
     10+                            if      testff .gt. 0ffh
     10+                            error 	Too much data in zero page ram



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page    6


     10+                            endif
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; Non-Zero page Ram (208h-37fh)
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+0208             	org	208h
     10+0208            PlayerData	defs	MaxPlayers*PlayerVSize
     10+0238            LevelData	defs	NumBands*LevelVSize
     10+02C8            AnimData	defs	NumAnims*AnimVSize
     10+0340            SAnimData	defs	NumSAnims*SAnimVSize
     10+                
     10+0364            new_melody_ptr defs 1
     10+0365            DemoPtr	defs	2
     10+0367            DemoCnt	defs	1
     10+                
     10+0368            page_ptr1	defs	2
     10+036A            index0	defs	1
     10+036B            index1	defs	1
     10+036C            index2	defs	1
     10+036D            index3	defs	1
     10+                
     10+036E            test37f:
     10+                	if	test37f .gt. 37fh
     10+                	error	Too much data in non-zero page ram
     10+                	endif
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; User input equates
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+                ;	001-013	 ;row 0 of screen, column 0 to 12
     10+                ;	...	 ;...
     10+                ;	118-082h ;row 9 of screen, column 0 to 12
     10+                ;
     10+                ;	spot on screen = row*13+column+1
     10+                
     10+     0082       UserScreen	equ	082h	;highest screen press
     10+                
     10+     0083       UserUp	equ	083h	;joypad up
     10+     0084       UserDown	equ	084h	;joypad down
     10+     0085       UserLeft	equ	085h	;joypad left
     10+     0086       UserRight	equ	086h	;joypad right
     10+                
     10+     0087       UserMenu	equ	087h	;Menu button
     10+     0089       UserSound	equ	089h	;Sound button
     10+     008A       UserPause	equ	08ah	;Pause button
     10+                
     10+     008B       UserA	equ	08bh	;A button
     10+     008C       UserB	equ	08ch	;B button
     10+     008D       UserC	equ	08dh	;C button



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page    7


     10+     008E       UserD	equ	08eh	;D button
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; Bank definitions
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+     0020       program_bank1   equ     020h
     10+     0021       program_bank2   equ     021h
     10+     0023       program_bank3   equ     023h
     10+     0024       program_bank4   equ     024h
     10+     0025       program_bank5   equ     025h
     10+     0026       program_bank6   equ     026h
     10+                
     10+     0020       bankno_front0 equ   20h
     10+     0021       bankno_front1 equ   21h
     10+     0022       bankno_front2 equ   22h
     10+     0023       bankno_sprite equ   23h
     10+     0024       bankno_strip  equ   24h
     10+     0072       bankno_winpic10 equ 72h ;    bankno_winpic9+2
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; Macros
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+                ;	; long conditional branches
     10+                ;
     10+                ;breq:	macro	?dest
     10+                ;	br	ne,cont???
     10+                ;	jmp	eq,?dest
     10+                ;cont???:
     10+                ;	endm
     10+                ;
     10+                ;brne:	macro	?dest
     10+                ;	br	eq,cont???
     10+                ;	jmp	ne,?dest
     10+                ;cont???:
     10+                ;	endm
     10+                ;
     10+                ;brnz:	macro	?dest
     10+                ;	br	z,cont???
     10+                ;	jmp	nz,?dest
     10+                ;cont???:
     10+                ;	endm
     10+                ;
     10+                ;bruge:	macro	?dest
     10+                ;	br	ult,cont???
     10+                ;	jmp	uge,?dest
     10+                ;cont???:
     10+                ;	endm
     10+                ;
     10+                ;brugt:	macro	?dest



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page    8


     10+                ;	br	ule,cont???
     10+                ;	jmp	ugt,?dest
     10+                ;cont???:
     10+                ;	endm
     10+                ;
     10+                ;brule:	macro	?dest
     10+                ;	br	ugt,cont???
     10+                ;	jmp	ule,?dest
     10+                ;cont???:
     10+                ;	endm
     10+                ;
     10+                ;brz:	macro	?dest
     10+                ;	br	nz,cont???
     10+                ;	jmp	z,?dest
     10+                ;cont???:
     10+                ;	endm
     10+                
     10+                ;============================================================================
     10+                ;
     10+                ; The old stuff here
     10+                ;
     10+                ;----------------------------------------------------------------------------
     10+                
     10+                ;ASB	include oldstuff.inc
     10+                
     10+                            program
     11                 	include equate.inc
     11+     0000       DEMO_ROM	equ	0
     11+                ;------------------------------------------
     11+                ;	test program
     11+                ;------------------------------------------
     11+     0000       KEYTEST		equ	0
     11+     0000       QWSOUND_TEST	equ	0
     11+     0001       NEW_GRAPHIC1	equ	1
     11+     0000       HALTTEST	equ	0
     11+     0000       SOUND_TEST	EQU	0
     11+     0001       CURSOR_ENABLE	EQU	1
     11+     0000       FAST_OPEN	EQU	0
     11+     0001       NEW_SPEECH	EQU	1		;IMPROVED SPEECH SPEED
     11+     0000       MANUEL_TEST	EQU	0
     11+                					;ENABLE BANK SWITCH FOR ISR
     11+     0050       STARTYR		equ	80		;1994 starting year
     11+     0120       SKRAM		equ	120h		;start of the kernel RAM
     11+     0005       TBase		equ	5		;about 5ms timebase of Timer #1
     11+     0008       MAX_UT		equ	8
     11+                ;--- Scan key equate -------;
     11+     0010       MAXKEY		equ	16
     11+     000A       REPEATTM	equ	10		;500ms
     11+     0004       SCANFREQ	equ	20/5		;10ms
     11+     0010       DEBOU_TM	equ	16
     11+     00A4       ALARM_ALERT_KEY	equ	0a4h
     11+     00A5       COMM_ERROR	equ	0a5h
     11+     00A8       WARN_BEEP	equ	0a8h
     11+     000A       UT_CLK_		equ	50/5	;49.152 ms per count
     11+                



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page    9


     11+     0001       PHONEBOOK_APPL	EQU	1
     11+     0002       CALENDAR_APPL	EQU	2
     11+     0003       CALCULATOR_APPL	EQU	3
     11+     0004       CART_APPL	EQU	4
     11+     0005       DLO_APPL	EQU	5
     11+     0006       SOLITAIRE_APPL	EQU	6
     11+     0007       HISCR_APPL	EQU	7
     11+                
     11+     00FF       ENDKEY		EQU	0FFH
     11+     0088       KEY_ONOFF	EQU	88H
     11+     0089       KEY_MUTE	EQU	89H
     11+     0087       KEY_MENU	EQU	87H
     11+     008A       KEY_PAUSE	EQU	8AH
     11+     00A0       SPEECH_END	EQU	0A0H
     11+                
     11+     0005       MainDataBank	equ	5
     11+     000C       DSPBANK0	EQU	0ch
     11+     000D       DSPBANK1	EQU	0dh
     11+     0005       MainProgBank	equ	5
     11+     0002       KernelBank	equ	2
     11+     0003       MainProgBank2	equ	3
     11+                
     11+     FC60       START_HISCR	equ	0fc60h
     11+     FEE0       END_HISCR	equ	0fEE0h
     11+     0020       LEN_HISCR	equ	32		;32 bytes per hi score record
     11+     0040       NEW_LEN_HISCR	equ	64		;32 bytes per hi score record
     11+     0003       DATA_OFFSET	equ	3		;4th position from the record head
     11+     0001       SEP_CHAR	equ	01h
     11+                
     11+     0008       SYS_TX_QSIZE	equ	8
     11+     0008       SYS_RX_QSIZE	equ	8
     11+     0000       UT_STOP		equ	00h
     11+     0001       UT_RUN		equ	01h
     11+     0002       UT_PAUSE	equ	02h
     11+                
     11+                IF DEMO_ROM
     11+                START_STACK	equ	3ffh
     11+                ELSE
     11+     03C0       START_STACK	equ	3c0h
     11+                ENDIF
     11+                
     11+                ;===============================;
     11+                ;	RP pre-defined value
     11+                ;===============================;
     11+     0000       KERNEL_RP	equ	00h
     11+     0008       DISPLAY_RP	equ	08h
     11+     0018       CLOCKISR_RP	equ	18h
     11+     0028       UARTISR_RP	equ	28h
     11+     0038       SP_TIMER1ISR_RP	equ	38h
     11+     0048       N_TIMER1ISR_RP	equ	48h
     11+     0058       SYSTEM_RP	equ	58h
     11+                
     12                 	include ram.inc
     12+     00A0       RX_head		equ	0a0h
     12+     00A2       RX_tail		equ	0a2h



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   10


     12+     00A4       STPID		equ	0a4h		
     12+                IF .NOT. NEW_SPEECH
     12+                sp_end_bank	equ	0a5h
     12+                sp_end_address	equ	0a6h
     12+                ELSE
     12+     00A5       UART_new_ibank	equ	0a5h
     12+     00A6       TMR1_new_ibank	equ	0a6h
     12+     00A7       PIO_new_ibank	equ	0a7h
     12+                ENDIF
     12+     00A8       sp_control	equ	0a8h		;--------------------------
     12+                					;bit 0 : 0 - stop
     12+                					;        1 - start
     12+                					;bit 1 : 0 - PCM
     12+                					;        1 - ADPCM
     12+                					;bit 2 : 0 - low nibble
     12+                					;	 1 - high nibble
     12+                					;bit 3 : 0 - pause disable
     12+                					;	 1 - pause enable
     12+                					;bit 4 : 0 - play mode
     12+                					;        1 - pause mode
     12+                					;bit 5 : 0 - enable time out
     12+                					;        1 - disable time out
     12+                					;bit 6 : 0 - main menu spinning mode
     12+                					;        1 - main menu cursor mode
     12+                					;bit 7 : 0 - normal
     12+                					;        1 - sound selection screen 
     12+                					;            entered
     12+                					;--------------------------
     12+                IF .NOT. NEW_SPEECH
     12+                sp_bank		equ	0a9h		;speech data bank
     12+                sp_address	equ	0aah		;speech data address
     12+                ELSE
     12+     00A9       TMR0_new_ibank	equ	0a9h
     12+     00AA       CLK_new_ibank	equ	0aah
     12+     00AB       INT_new_ibank	equ	0abh
     12+                ENDIF
     12+     00AC       SP_CTR1		equ	0ach		;speech timer
     12+     00AD       SP_CTR2		equ	0adh		;
     12+     00AE       TX_head		equ	0aeh		;head pointer of tx queue
     12+                ;TX_tail		equ	0ach		;tail pointer of tx queue
     12+     00B0       PVOICE		equ	0b0h
     12+     00B1       UART_control	equ	0b1h		;-------------------------
     12+                					;bit 0 : 0 - TX disable
     12+                					;        1 - TX enable
     12+                					;bit 1 : 0 - RX disable
     12+                					;        1 - RX enable
     12+                					;bit 2 : 0 - system UART isr
     12+                					;        1 - application defined isr
     12+                					;bit 3 : 0 - system TX queue
     12+                					;        1 - appl. TX defined queue
     12+                					;bit 4 : 0 - system RX queue
     12+                					;        1 - appl. RX defined queue
     12+                					;------------------------------------
     12+                ;kstemp0		equ	0b2h		;kernel use temp 0
     12+                IF NEW_SPEECH



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   11


     12+     00B2       WDT_new_ibank	equ	0b2h
     12+     00B3       NMI_new_ibank	equ	0b3h
     12+                ENDIF
     12+     00B4       UT_clk		equ	0b4h		;User timer clock
     12+     00B5       ScanTMR		equ	0b5h		;Key scan timer
     12+     00B6       RepeatRate	equ	0b6h		;repeat rate counter
     12+     00B7       Oldkey		equ	0b7h		;key history
     12+     00B8       KEYHEAD		equ	0b8h		;head pointer of key buffer
     12+     00BA       KEYTAIL 	equ	0bah		;tail pointer of key buffer
     12+     00BC       SYSFLAG		equ	0bch		;--------------------------
     12+                					;bit 0 : 1 - initialize from power on
     12+                					;        0 - no data destroy
     12+                					;bit 1 : 0 - not turn on unit
     12+                					;        1 - turn on unit
     12+                					;bit 2 : 0 - 3 minute time out
     12+                					;        1 - 5 minute time out
     12+                					;bit 3 : 0 - even second
     12+                					;        1 - odd second
     12+                					;bit 4 : 0 - none
     12+                					;        1 - warning beep in progress
     12+                					;bit 5 : 0 - normal sound output
     12+                					;        1 - no sound output (MUTE)
     12+                					;bit 6 : 0 - normal timer (4.9152ms)
     12+                					;	 1 - Speech processing (41.6us)
     12+                					;bit 7 : 0 - ---
     12+                					;        1 - quit box asking screen
     12+                					;--------------------------
     12+                					
     12+     00BD       KBDFLAG		equ	0bdh		;--------------------------
     12+                					;bit 0 : 0 - scan membrane
     12+                					;        1 - not to scan membrane
     12+                					;bit 1 : 0 - scan keypad
     12+                					;        1 - not to scan keypad
     12+                					;bit 2 : 0 - sleep if no event
     12+                					;        1 - no sleep if no event
     12+                					;bit 3 : 0 - scan cycle
     12+                					;        1 - not a scan cycle
     12+                					;bit 4 : 0 - repeat key is not allowed
     12+                					;        1 - repeat key is allowed
     12+                					;bit 5 : 0 - 
     12+                					;	 1 - Delay of repeat key
     12+                					;bit 6 : 0 -
     12+                					;	 1 - debounce of the key
     12+                					;bit 7 : 0 -
     12+                					;        1 - key is held down
     12+                					;-------------------------
     12+                ;**************************************************
     12+                ;
     12+                ;	User defined vector table
     12+                ;
     12+                ;**************************************************
     12+     0100       UART_new_isr	equ	100h
     12+     0102       TMR1_new_isr	equ	102h
     12+     0104       PIO_new_isr	equ	104h
     12+     0106       TMR0_new_isr	equ	106h



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   12


     12+     0108       CLK_new_isr	equ	108h
     12+     010A       INT_new_isr	equ	10ah
     12+     010C       NMI_new_isr	equ	10ch
     12+     010E       WDT_new_isr	equ	10eh
     12+     0110       PRN_PORT	equ	110h	;image of the printer port address
     12+                				;default = 0fff0h
     12+     0112       DMG_timer	equ	112h
     12+                ;Attack_Buffer	equ	112h
     12+                ;Defense_Buffer	equ	114h
     12+                ;Max_attack	equ	116h
     12+                ;Max_defense	equ	117h
     12+                ;hit_infoa	equ	118h
     12+                ;hit_infod	equ	11ah
     12+     011C       cursor_pos	equ	11ch
     12+     011D       cursor_tmr	equ	11dh
     12+     011E       TX_tail		equ	11eh
     12+     0120       SIGN		equ	SKRAM
     12+     0124       Year		equ	SIGN+4
     12+     0125       Month		equ	Year+1
     12+     0126       Day		equ	Month+1
     12+     0127       Hour		equ	Day+1
     12+     0128       Minute		equ	Hour+1
     12+     0129       Second		equ	Minute+1
     12+     012A       AYear		equ	Second+1
     12+     012B       AMonth		equ	AYear+1
     12+     012C       ADay		equ	AMonth+1
     12+     012D       AHour		equ	ADay+1
     12+     012E       AMinute		equ	AHour+1
     12+     012F       ASecond		equ	AMinute+1
     12+     0130       KBuff		equ	ASecond+1
     12+                ;=================================;
     12+     012A       Call_dest	equ	AYear
     12+     012D       Cart_Prog_Bank	equ	AHour
     12+                ;----------------------------------;
     12+                ;	Main/Kernel
     12+                ;----------------------------------;
     12+     0150       UTimer1C	equ	150h		;-------------------------
     12+                					;User timer 1 control
     12+                					; 00 - Idle
     12+                					; 01 - Run
     12+                					; 02 - Pause
     12+                					;-------------------------
     12+     0151       UTimer1H	equ	151h
     12+     0152       UTimer1L	equ	152h
     12+     0168       appl_no		equ	168h
     12+     0169       Melody_Register	equ	169h		;-------------------------
     12+                					;bit 0 : channel 0 enable
     12+                					;bit 1-2 : channel 0 instrument
     12+                					;          00 : piano
     12+                					;          01 : organ
     12+                					;          10 : -----
     12+                					;          11 : -----
     12+                					;bit 3 : channel 0 output enable
     12+                					;bit 4 : channel 1 enable
     12+                					;bit 5,6 : channel 1 instrument



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   13


     12+                					;          00 : piano
     12+                					;          01 : organ
     12+                					;          10 : -----
     12+                					;          11 : -----
     12+                					;bit 7 : channel 1 output enable
     12+                					;-------------------------
     12+     016A       Mel_address0	equ	16ah
     12+     016C       Mel_address1	equ	16ch
     12+     016E       Mel_bank0	equ	16eh
     12+     016F       Mel_bank1	equ	16fh
     12+     0170       ADSR_register	equ	170h		;-------------------------
     12+                					;bit 0 - Channel 0 attack
     12+                					;bit 1 - channel 0 decay
     12+                					;bit 2 - channel 0 sustain
     12+                					;bit 3 - channel 0 release
     12+                					;bit 4 - channel 1 attack
     12+                					;bit 5 - channel 1 decay
     12+                					;bit 6 - channel 1 sustain
     12+                					;bit 7 - channel 1 release
     12+                					;-------------------------
     12+     0171       Tone0content	equ	171h		;amplitdue control for channel 0
     12+     0172       Tone1content	equ	172h		;amplitude control for channel 1
     12+     0173       ToneLength0	equ	173h		;length of the tone in channel 0
     12+     0174       ToneLength1	equ	174h		;length of the tone in channel 1
     12+     0175       no_of_voice	equ	175h
     12+     0176       Melody_timer	equ	176h		;count = 10 --> 49ms per unit
     12+     0177       Tone0Holdtimer	equ	177h
     12+     0178       Tone1Holdtimer	equ	178h
     12+     0179       menu_mode	equ	179h		;--------------------
     12+                				; MAIN MENU SPINNING MODE :
     12+                					;bit 0 - bit 2 : Timer ID
     12+                					;bit 3-6 : starting speech progress
     12+                					;  0 : starting speech
     12+                					;  1 : screen #1	(00001XXX)
     12+                					;  2 : screen #2	(00010XXX)
     12+                					;  3 : screen #3	(00011XXX)
     12+                					;  4 : screen #4	(00100XXX)
     12+                					;  5 : screen #5	(00101XXX)
     12+                					;  6 : screen #6	(00110XXX)
     12+                					;  7 : screen #7	(00111XXX)
     12+                					;  8 : screen #6	(01000XXX)
     12+                					;  9 : screen #5	(01001XXX)
     12+                					;  a : screen #4	(01010XXX)
     12+                					;  b : screen #3	(01011XXX)
     12+                					;  c : screen #2	(01100XXX)
     12+                					;  10h : icon pressed	(10000XXX)
     12+                				; MAIN MENU CURSOR MODE
     12+                					;---------------------
     12+     017A       Cart_dest	equ	17ah		;Cart jump address
     12+     017C       Cart_mode	equ	17ch		;-------------------------
     12+                					;bit 0 - 0 no cart in slot #1
     12+                					;	 1 cartridge existed in #1
     12+                					;bit 1 - 0 no cart in slot #2
     12+                					;	 1 cartridge existed in #2
     12+                					;bit 2 - 0 current cartridge is #1



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   14


     12+                					;	 1 current cartridge is #2
     12+                					;bit 3 - 0 cart 1 contains program
     12+                					;        1 cart 1 contains data only
     12+                					;bit 4 - 0 cart 2 contains program
     12+                					;        1 cart 2 contains data only
     12+                					;-------------------------
     12+     017D       Cart_bank1	equ	17dh		;0 - no cart, non-zero, header bank #
     12+     017E       Cart_bank2	equ	17eh		;0 - no cart, non-zero, header bank #
     12+     017F       KBDTMR		equ	17fh		;keyboard use timer
     12+     0180       Sys_TX_queue	equ	180h
     12+     0188       Sys_RX_queue	equ	188h
     12+     0190       User_TX_qq	equ	190h		;tx queue from user
     12+     0192       User_RX_qq	equ	192h		;rx queue from user
     12+     0194       User_TX_qsize	equ	194h		;tx queue size from  user
     12+     0196       User_RX_qsize	equ	196h		;rx queue size from  user
     12+                
     13                 	include disp_ram.inc
     13+                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     13+                ;               WORKING RAMs
     13+                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     13+                ;;  00 -  7F : RP = 3, Display
     13+                ;;  80 -  9F : Display Working RAM (32 bytes)
     13+                ;; 1A0 - 1BF : Display (32 bytes)
     13+                
     13+     0080       cur_pos_x       equ     80h
     13+     0081       cur_pos_y       equ     cur_pos_x+1
     13+     0082       win_left_x      equ     cur_pos_y+1
     13+     0083       win_left_y      equ     win_left_x+1
     13+     0084       win_width       equ     win_left_y+1
     13+     0085       win_height      equ     win_width+1
     13+     0086       RP_image        equ     win_height+1            ;??
     13+     0087       font_x          equ     RP_image+1
     13+     0088       font_y          equ     font_x+1      ;font_no??
     13+     0089       font_bank       equ     font_y+1      ;reserved space for user defined fonts??
     13+     008A       font_offset     equ     font_bank+1
     13+                
     13+                ;font_table_hi   equ     font_offset+1             ;??
     13+                ;font_table_lo   equ     font_table_hi+1         ;??
     13+                ;text_no_x       equ     font_table_lo+1
     13+                ;text_no_y       equ     text_no_x+1
     13+                
     13+     008B       temp_left_x     equ     font_offset+1
     13+     008C       temp_left_y     equ     temp_left_x+1
     13+     008D       temp_width      equ     temp_left_y+1
     13+     008E       temp_height     equ     temp_width+1
     13+     008F       temp_pos_x      equ     temp_height+1
     13+     0090       temp_pos_y      equ     temp_pos_x+1
     13+     0091       work_ram1       equ     temp_pos_y+1
     13+     0092       work_ram2       equ     work_ram1+1
     13+     0093       dmc_image       equ     work_ram2+1
     13+     0094       cur_page        equ     dmc_image+1     ;!! for page swapping & block clear
     13+     0095       local_global    equ     cur_page+1
     13+     0096       local_global_1  equ     local_global+1
     13+     0097       local_global_2  equ     local_global_1+1
     13+     0098       local_global_3  equ     local_global_2+1



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   15


     13+     0099       local_global_4  equ     local_global_3+1
     13+     009A       temp_1          equ     local_global_4+1
     13+     009B       temp_2          equ     temp_1+1
     13+     009C       temp_3          equ     temp_2+1        ;!! text background color
     13+     009D       cur_status      equ     temp_3+1        ;!! cursor status
     13+     009E       font_id         equ     cur_status+1
     13+     009F       font_num        equ     font_id+1
     13+                
     13+     01E8       font3a          equ     01e8h
     13+     01E9       font3b          equ     font3a+1
     13+     01EA       font3c          equ     font3b+1
     13+     01EB       font4a          equ     font3c+1
     13+     01EC       font4b          equ     font4a+1
     13+     01ED       font4c          equ     font4b+1
     13+     01EE       font5a          equ     font4c+1
     13+     01EF       font5b          equ     font5a+1
     13+     01F0       font5c          equ     font5b+1
     13+     01F1       font6a          equ     font5c+1
     13+     01F2       font6b          equ     font6a+1
     13+     01F3       font6c          equ     font6b+1
     13+     01F4       font7a          equ     font6c+1
     13+     01F5       font7b          equ     font7a+1
     13+     01F6       font7c          equ     font7b+1
     13+     01F7       font8a          equ     font7c+1
     13+     01F8       font8b          equ     font8a+1
     13+     01F9       font8c          equ     font8b+1
     13+     01FA       font9a          equ     font8c+1
     13+     01FB       font9b          equ     font9a+1
     13+     01FC       font9c          equ     font9b+1
     13+     01FD       fontaa          equ     font9c+1
     13+     01FE       fontab          equ     fontaa+1
     13+     01FF       fontac          equ     fontab+1
     13+     0200       font_start      equ     fontac+1
     13+     0201       timer_ovr       equ     font_start+1
     13+     0202       inverse         equ     timer_ovr+1
     13+     0203       intnet          equ     inverse+1
     13+     0204       scroll          equ     intnet+1
     13+     0205       scroll1         equ     scroll+1
     13+     0206       text_dest       equ     scroll1+1
     13+     0207       cart_flag       equ     text_dest+1 ;0: cart1 ;1:cart2
     13+                
     13+     01A8       mel_counter     equ     01a8h
     13+     01A9       mel_counter1    equ     mel_counter+1
     13+     01AA       mel_flag        equ     mel_counter1+1
     13+     01AB       mel_flag1       equ     mel_flag+1
     13+                
     13+                
     14                 	include disp_equ.inc
     14+                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     14+                ;	       CONSTANT
     14+                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     14+                ;MainProgBank  equ 5
     14+     0000       a_2_a		equ	0
     14+     0002       a_2_b		equ	2
     14+     0003       b_2_b		equ	3



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   16


     14+     0001       b_2_a		equ	1
     14+                
     14+     0007       CUR_SHAPE_BIT	EQU	7; 80H	   ;0 - BLOCK CURSOR, 1 - LINE CURSOR
     14+     0080       CUR_SHAPE_LOC	EQU	80H
     14+                
     14+     0006       CUR_DISP_CYCLE	EQU	6; 40H	   ;0 - OFF, 1 - ON
     14+     0040       CUR_DISP_LOC	EQU	40H
     14+                
     14+     0005       CUR_ON_BIT	EQU	5; 20H	   ;0 - OFF, 1 - ON
     14+     0020       CUR_ON_BIT_LOC	EQU	20H
     14+                
     14+                
     14+     00C8       MAX_WIDTH	EQU	200
     14+     00A0       MAX_HEIGHT	EQU	160
     14+                
     14+                
     15                 
     16                             global  delay10ms
     17                 
     18                 	program
     19                 
     20                 ;============================================================================
     21                 ;
     22                 ;           Opening sequence of screens
     23                 ;
     24                 ;----------------------------------------------------------------------------
     25                 
     26                 Opening:    global  Opening
     27                 
     28 0000 C100                   mov     r1,#Game_Open
     29 0002 B9C2                   mov     GameState,r1
     30                 
     31 0004 D809                   br      OpeningBypass          ;ZZZ
     32                 
     33 0006 490000"                call    GameCom
     34                 
     35 0009 490010'                call    LegalScreen
     36                 
     37 000C 4900EF'                call    TitleScreen
     38                 
     39 000F            OpeningBypass:                             ;ZZZ
     40                 
     41 000F F8                     ret
     42                 
     43                 ;============================================================================
     44                 ;
     45                 ;           The Frogger Legal screen
     46                 ;
     47                 ;----------------------------------------------------------------------------
     48                 
     49 0010            LegalScreen:
     50 0010 0E3B                   push    dmpl
     51 0012 58E43B     	mov     dmpl,#0e4h
     52 0015 C0E4                   mov     r0,#0e4h
     53 0017 B8EB                   mov     hold_byte1,r0



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   17


     54                 
     55                             ; draw the legal screen frame
     56                 
     57 0019 49017B'                call    DrawFrame
     58                 
     59                             ; print the text
     60                 
     61 001C 7800D7'                movw    rr0,#FrogLegal1
     62 001F 3B800368               movw    page_ptr1,rr0
     63 0023 490000"                call    print_string
     64                 
     65 0026 7800DB'                movw    rr0,#FrogLegal2
     66 0029 3B800368               movw    page_ptr1,rr0
     67 002D 490000"                call    print_string
     68                 
     69 0030 7800DF'                movw    rr0,#FrogLegal3
     70 0033 3B800368               movw    page_ptr1,rr0
     71 0037 490000"                call    print_string
     72                 
     73 003A 7800E3'                movw    rr0,#FrogLegal4
     74 003D 3B800368               movw    page_ptr1,rr0
     75 0041 490000"                call    print_string
     76                 
     77 0044 7800E7'                movw    rr0,#FrogLegal5
     78 0047 3B800368               movw    page_ptr1,rr0
     79 004B 490000"                call    print_string
     80                 
     81 004E 7800EB'                movw    rr0,#FrogLegal6
     82 0051 3B800368               movw    page_ptr1,rr0
     83 0055 490000"                call    print_string
     84                 
     85                             ; wait for player to read it
     86                 
     87 0058 490000"                call    Swap_page
     88 005B C219                   mov     r2,#25
     89 005D            LegalScreenL1:
     90 005D 49020B'                call    delay200ms
     91 0060 0902                   dec     r2
     92 0062 DEF9                   br      nz,LegalScreenL1
     93                 
     94 0064 0F3B                   pop     dmpl
     95 0066 F8                     ret
     96                 
     97 0067            FrogLegalT1:
     98 0067 46726F67               defm    'Frogger is copyright'
        006B 67657220
        006F 69732063
        0073 6F707972
        0077 69676874
     99      00A0       FrogLegalL1 equ     $-FrogLegalT1*8
    100 007B 00                     defb    0
    101 007C            FrogLegalT2:
    102 007C 736F6D65               defm    'somebody'
        0080 626F6479
    103      0040       FrogLegalL2 equ     $-FrogLegalT2*8



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   18


    104 0084 00                     defb    0
    105 0085            FrogLegalT3:
    106 0085 506C6561               defm    'Please tell me who.'
        0089 73652074
        008D 656C6C20
        0091 6D652077
        0095 686F2E
    107      0098       FrogLegalL3 equ     $-FrogLegalT3*8
    108 0098 00                     defb    0
    109 0099            FrogLegalT4:
    110 0099 536F6674               defm    'Software and Graphics'
        009D 77617265
        00A1 20616E64
        00A5 20477261
        00A9 70686963
        00AD 73
    111      00A8       FrogLegalL4 equ     $-FrogLegalT4*8
    112 00AE 00                     defb    0
    113 00AF            FrogLegalT5:
    114 00AF 13                     defb    19
    115 00B0 20436F70               defm    ' Copyright 1998'
        00B4 79726967
        00B8 68742031
        00BC 393938
    116      0080       FrogLegalL5 equ     $-FrogLegalT5*8
    117 00BF 00                     defb    0
    118 00C0            FrogLegalT6:
    119 00C0 54696765               defm    'Tiger Electronics LTD.'
        00C4 7220456C
        00C8 65637472
        00CC 6F6E6963
        00D0 73204C54
        00D4 442E
    120      00B0       FrogLegalL6 equ     $-FrogLegalT6*8
    121 00D6 00                     defb    0
    122                 
    123 00D7            FrogLegal1:
    124 00D7 1434                   defb    200-FrogLegalL1/2,76-24
    125 00D9 0067'                  defw    FrogLegalT1
    126 00DB            FrogLegal2:
    127 00DB 443C                   defb    200-FrogLegalL2/2,76-16
    128 00DD 007C'                  defw    FrogLegalT2
    129 00DF            FrogLegal3:
    130 00DF 1844                   defb    200-FrogLegalL3/2,76-8
    131 00E1 0085'                  defw    FrogLegalT3
    132 00E3            FrogLegal4:
    133 00E3 1054                   defb    200-FrogLegalL4/2,84
    134 00E5 0099'                  defw    FrogLegalT4
    135 00E7            FrogLegal5:
    136 00E7 245C                   defb    200-FrogLegalL5/2,84+8
    137 00E9 00AF'                  defw    FrogLegalT5
    138 00EB            FrogLegal6:
    139 00EB 0C64                   defb    200-FrogLegalL6/2,84+16
    140 00ED 00C0'                  defw    FrogLegalT6
    141                 



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   19


    142                 ;============================================================================
    143                 ;
    144                 ;           Draw the Title Screen
    145                 ;
    146                 ;           Return r0=0   if end via time expiration
    147                 ;           Return r0=key if end via keypress
    148                 ;
    149                 ;----------------------------------------------------------------------------
    150                 
    151 00EF            TitleScreen:
    152 00EF 0E3B                   push    dmpl
    153 00F1 58E43B     	mov     dmpl,#0e4h
    154 00F4 C0E4                   mov     r0,#0e4h
    155 00F6 B8EB                   mov     hold_byte1,r0
    156                 
    157                             ; wait for player to press key
    158                 
    159 00F8 C314                   mov     r3,#20
    160 00FA            TitleScreenL1:
    161 00FA BBD4                   mov     temp0,r3
    162 00FC C21E                   mov     r2,#30
    163 00FE            TitleScreenL2:
    164 00FE 0E02                   push    r2
    165                 
    166                             ; draw the Title Screen again
    167                 
    168 0100 4901DB'                call    DrawTitle
    169                 
    170                             ; print the text
    171                 
    172 0103 B3D4                   mov     r3,temp0
    173 0105 2F0301                 btst    r3,#1
    174 0108 D614                   br      z,TitleScreenXT
    175 010A 780173'                movw    rr0,#FrogTitle1
    176 010D 3B800368               movw    page_ptr1,rr0
    177 0111 490000"                call    print_string
    178                 
    179 0114 780177'                movw    rr0,#FrogTitle2
    180 0117 3B800368               movw    page_ptr1,rr0
    181 011B 490000"                call    print_string
    182 011E            TitleScreenXT:
    183                 
    184 011E B3D4                   mov     r3,temp0
    185 0120 0E03                   push    r3
    186 0122 490000"                call    GetUser
    187 0125 0F03                   pop     r3
    188 0127 BBD4                   mov     temp0,r3
    189 0129 508900                 cmp     r0,#89h
    190 012C D60F                   br      eq,TitleScreenE1
    191 012E 508A00                 cmp     r0,#8ah
    192 0131 D60A                   br      eq,TitleScreenE1
    193 0133 508700                 cmp     r0,#87h
    194 0136 D605                   br      eq,TitleScreenE1
    195 0138 500000                 cmp     r0,#0
    196 013B DE19                   br      ne,TitleScreenX



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   20


    197 013D            TitleScreenE1:
    198 013D 490000"                call    delay20ms
    199 0140 0F02                   pop     r2
    200 0142 0902                   dec     r2
    201 0144 DEB8                   br      nz,TitleScreenL2
    202 0146 490000"                call    Swap_page
    203 0149 B3D4                   mov     r3,temp0
    204 014B 0903                   dec     r3
    205 014D DEAB                   br      nz,TitleScreenL1
    206 014F C001                   mov     r0,#1
    207 0151 B8CC                   mov     DemoMode,r0
    208                 
    209 0153 0F3B                   pop     dmpl
    210 0155 F8                     ret
    211                 
    212                             ; player pressed A button
    213                 
    214 0156            TitleScreenX:
    215 0156 0F02                   pop     r2
    216 0158 0F3B                   pop     dmpl
    217 015A F8                     ret
    218                 
    219                 
    220 015B            FrogTitleT1:
    221 015B 50726573               defm    'Press A Button'
        015F 73204120
        0163 42757474
        0167 6F6E
    222      0070       FrogTitleL1 equ     $-FrogTitleT1*8
    223 0169 00                     defb    0
    224 016A            FrogTitleT2:
    225 016A 746F2053               defm    'to Start'
        016E 74617274
    226      0040       FrogTitleL2 equ     $-FrogTitleT2*8
    227 0172 00                     defb    0
    228                 
    229 0173            FrogTitle1:
    230 0173 2C44                   defb    200-FrogTitleL1/2,76-8
    231 0175 015B'                  defw    FrogTitleT1
    232 0177            FrogTitle2:
    233 0177 4454                   defb    200-FrogTitleL2/2,84
    234 0179 016A'                  defw    FrogTitleT2
    235                 
    236                 ;============================================================================
    237                 ;
    238                 ;           Draw a Frame on the screen
    239                 ;
    240                 ;----------------------------------------------------------------------------
    241                 
    242                 DrawFrame:  global  DrawFrame
    243                 
    244                             ; fill screen with light grey
    245                 
    246 017B 580208                 mov     r8,#2
    247 017E 500194                 cmp     cur_page,#1



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   21


    248 0181 D602                   br      eq,DrawFrame1
    249 0183 AC08                   bset    r8,#4
    250 0185            DrawFrame1:
    251 0185 490000"                call    Scn_colr
    252                 
    253                             ; set up destination as top band
    254                 
    255 0188 580009                 mov     r9,#0
    256 018B 58000F                 mov     r15,#override
    257                 
    258                             ; draw top frame
    259                 
    260 018E 58100B                 mov     r11,#16
    261 0191 4901B6'                call    DrawFrame2
    262 0194 58180B                 mov     r11,#24
    263 0197 4901B6'                call    DrawFrame2
    264                 
    265                             ; draw middle frames
    266                 
    267 019A C110                   mov     r1,#16
    268 019C            DrawFrameL1:
    269 019C 58200B                 mov     r11,#32
    270 019F 0E01                   push    r1
    271 01A1 4901B6'                call    DrawFrame2
    272 01A4 0F01                   pop     r1
    273 01A6 0901                   dec     r1
    274 01A8 DEF2                   br      nz,DrawFrameL1
    275                 
    276                             ; draw bottom frame
    277                 
    278 01AA 58F00B                 mov     r11,#240
    279 01AD 4901B6'                call    DrawFrame2
    280 01B0 58F80B                 mov     r11,#248
    281 01B3 9801B6'                jmp     DrawFrame2
    282                 
    283                             ; subroutine to draw a band
    284                 
    285 01B6            DrawFrame2:
    286                 
    287 01B6 0E09                   push    r9
    288 01B8 0E0F                   push    r15
    289                 
    290                             ; initialize all initial Fi_graph values
    291                 
    292 01BA 580008                 mov     r8,#0
    293 01BD 58000A                 mov     r10,#0
    294 01C0 58C80C                 mov     r12,#200
    295 01C3 58080D                 mov     r13,#8
    296 01C6 58210E                 mov     r14,#bankno_front1
    297                 
    298 01C9 500194                 cmp     cur_page,#1
    299 01CC D602                   br      eq,DrawFrame21
    300 01CE A90F                   bset    r15,#1
    301 01D0            DrawFrame21
    302                 



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   22


    303                             ; do Fi_graph
    304                 
    305 01D0 490000"                call    Fi_graph
    306                 
    307                             ; move destination y value down a band and loop
    308                 
    309 01D3 0F0F                   pop     r15
    310 01D5 0F09                   pop     r9
    311 01D7 510809                 add     r9,#8
    312                 
    313 01DA F8                     ret
    314                 
    315                 ;============================================================================
    316                 ;
    317                 ;           Draw title screen raw
    318                 ;
    319                 ;----------------------------------------------------------------------------
    320                 
    321 01DB            DrawTitle:
    322                 
    323                             ; fill screen with light grey
    324                 
    325 01DB 580208                 mov     r8,#2
    326 01DE 500194                 cmp     cur_page,#1
    327 01E1 D602                   br      eq,DrawTitle1
    328 01E3 AC08                   bset    r8,#4
    329 01E5            DrawTitle1:
    330 01E5 490000"                call    Scn_colr
    331                 
    332                             ; initialize all initial Fi_graph values
    333                 
    334 01E8 580008                 mov     r8,#0
    335 01EB 580009                 mov     r9,#0
    336 01EE 58000A                 mov     r10,#0
    337 01F1 58000B                 mov     r11,#0
    338 01F4 58C80C                 mov     r12,#200
    339 01F7 58A00D                 mov     r13,#160
    340 01FA 58200E                 mov     r14,#bankno_front0
    341 01FD 58000F                 mov     r15,#override
    342                 
    343                             ; composite is ok for background.
    344                 
    345 0200 500194                 cmp     cur_page,#1
    346 0203 D602                   br      eq,DrawTitle21
    347 0205 A90F                   bset    r15,#1
    348 0207            DrawTitle21
    349                 
    350                             ; do Fi_graph
    351                 
    352 0207 490000"                call    Fi_graph
    353                 
    354 020A F8                     ret
    355                 
    356                 ;============================================================================
    357                 ;



Centiped SM8521 Assembler V1.10            Wed Dec 23 17:35:33 1998  Page   23


    358                 ;           Delay a fifth of a second
    359                 ;
    360                 ;----------------------------------------------------------------------------
    361                 
    362 020B            delay200ms:
    363 020B 78F000             movw    rr0,#0f000h             ;6
    364 020E            d200ms_loop:
    365 020E 1900               decw    rr0                     ;8
    366 0210 DEFC               br      nz,d200ms_loop          ;8
    367                 
    368 0212 F8                 ret
    369                 
    370                 ;============================================================================
    371                 ;
    372                 ;           Left Over Stuff
    373                 ;
    374                 ;----------------------------------------------------------------------------
    375                 
    376 0213            delay10ms:
    377 0213 780C00             movw    rr0,#0c00h             ;6
    378 0216            d10ms_loop:
    379 0216 1900               decw    rr0                     ;8
    380 0218 DEFC               br      nz,d10ms_loop           ;8
    381                 
    382 021A F8                 ret
    383                 
    384 021B                     end
